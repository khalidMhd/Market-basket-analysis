[{"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\index.js":"1","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\App.js":"2","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reportWebVitals.js":"3","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\store\\Store.js":"4","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\item.js":"5","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\unit.js":"6","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Dashboard.js":"7","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\category.js":"8","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\settings.js":"9","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\area.js":"10","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\regulate.js":"11","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\auth\\singin.js":"12","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\auth.js":"13","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\items.js":"14","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\category.js":"15","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\unit.js":"16","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\area.js":"17","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\regulateItems.js":"18","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Navbar.js":"19","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\items.js":"20","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\unit.js":"21","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\category.js":"22","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\area.js":"23","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\auth.js":"24","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\regulateItems.js":"25","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\area.js":"26","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\regulateItem.js":"27","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\category.js":"28","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\unit.js":"29","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\items.js":"30","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\auth.js":"31","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\regulateChart.js":"32","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\itemBarChart.js":"33","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\complaint.js":"34","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\complaint.js":"35","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\complaint.js":"36","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\complaint.js":"37","G:\\expert system\\server\\client\\src\\index.js":"38","G:\\expert system\\server\\client\\src\\App.js":"39","G:\\expert system\\server\\client\\src\\reportWebVitals.js":"40","G:\\expert system\\server\\client\\src\\store\\Store.js":"41","G:\\expert system\\server\\client\\src\\screen\\auth\\singin.js":"42","G:\\expert system\\server\\client\\src\\reducer\\auth.js":"43","G:\\expert system\\server\\client\\src\\action\\auth.js":"44","G:\\expert system\\server\\client\\src\\screen\\chart\\itemBarChart.js":"45","G:\\expert system\\server\\client\\src\\screen\\chart\\regulateChart.js":"46","G:\\expert system\\server\\client\\src\\contant\\auth.js":"47","G:\\expert system\\server\\client\\src\\screen\\StartScreen.js":"48","G:\\expert system\\server\\client\\src\\screen\\Navbar.js":"49","G:\\expert system\\server\\client\\src\\screen\\actionButton.js":"50","G:\\expert system\\server\\client\\src\\screen\\ActionButton.js":"51","G:\\expert system\\server\\client\\src\\screen\\Contact.js":"52","G:\\expert system\\server\\client\\src\\screen\\DetailScreen.js":"53","G:\\expert system\\server\\client\\src\\screen\\auth\\signup.js":"54","G:\\expert system\\server\\client\\src\\screen\\admin\\Navbar.js":"55","G:\\expert system\\server\\client\\src\\screen\\admin\\Dashboard.js":"56","G:\\expert system\\server\\client\\src\\screen\\admin\\DetailScreen.js":"57","G:\\expert system\\server\\client\\src\\screen\\admin\\user.js":"58","G:\\expert system\\server\\client\\src\\screen\\admin\\Message.js":"59","G:\\expert system\\server\\client\\src\\screen\\admin\\Setting.js":"60","G:\\expert system\\server\\client\\src\\screen\\Signin.js":"61","G:\\expert system\\server\\client\\src\\screen\\signup.js":"62","G:\\expert system\\server\\client\\src\\screen\\forgotPassord.js":"63","G:\\expert system\\server\\client\\src\\screen\\newPassword.js":"64","G:\\expert system\\server\\client\\src\\screen\\Profile.js":"65","G:\\expert system\\server\\client\\src\\screen\\admin\\UplaodFile.js":"66","G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\PremiumChart.js":"67","G:\\expert system\\server\\client\\src\\screen\\admin\\RequestPremium.js":"68","G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\frequectChart.js":"69","G:\\expert system\\server\\client\\src\\screen\\verified.js":"70","G:\\expert system\\server\\client\\src\\action\\premium.js":"71","G:\\expert system\\server\\client\\src\\contant\\premium.js":"72","G:\\expert system\\server\\client\\src\\reducer\\premium.js":"73","G:\\expert system\\server\\client\\src\\reducer\\message.js":"74","G:\\expert system\\server\\client\\src\\contant\\message.js":"75","G:\\expert system\\server\\client\\src\\action\\message.js":"76","G:\\expert system\\server\\client\\src\\reducer\\user.js":"77","G:\\expert system\\server\\client\\src\\contant\\user.js":"78","G:\\expert system\\server\\client\\src\\action\\user.js":"79","G:\\expert system\\server\\client\\src\\reducer\\admin\\auth.js":"80","G:\\expert system\\server\\client\\src\\contant\\admin\\auth.js":"81","G:\\expert system\\server\\client\\src\\reducer\\admin\\message.js":"82","G:\\expert system\\server\\client\\src\\contant\\admin\\message.js":"83","G:\\expert system\\server\\client\\src\\reducer\\admin\\premium.js":"84","G:\\expert system\\server\\client\\src\\contant\\admin\\premium.js":"85","G:\\expert system\\server\\client\\src\\reducer\\admin\\user.js":"86","G:\\expert system\\server\\client\\src\\contant\\admin\\user.js":"87"},{"size":662,"mtime":1627510351000,"results":"88","hashOfConfig":"89"},{"size":1478,"mtime":1630595486179,"results":"90","hashOfConfig":"89"},{"size":362,"mtime":1627510351000,"results":"91","hashOfConfig":"89"},{"size":1912,"mtime":1630595014082,"results":"92","hashOfConfig":"89"},{"size":30159,"mtime":1633631227303,"results":"93","hashOfConfig":"89"},{"size":20042,"mtime":1628420703519,"results":"94","hashOfConfig":"89"},{"size":11323,"mtime":1628428189293,"results":"95","hashOfConfig":"89"},{"size":20298,"mtime":1628483765210,"results":"96","hashOfConfig":"89"},{"size":4469,"mtime":1627510351000,"results":"97","hashOfConfig":"89"},{"size":19136,"mtime":1628483724031,"results":"98","hashOfConfig":"89"},{"size":4364,"mtime":1628419779376,"results":"99","hashOfConfig":"89"},{"size":2836,"mtime":1627510351000,"results":"100","hashOfConfig":"89"},{"size":1591,"mtime":1627510351000,"results":"101","hashOfConfig":"89"},{"size":2035,"mtime":1628415414564,"results":"102","hashOfConfig":"89"},{"size":2216,"mtime":1627510351000,"results":"103","hashOfConfig":"89"},{"size":2034,"mtime":1627510351000,"results":"104","hashOfConfig":"89"},{"size":2034,"mtime":1627510351000,"results":"105","hashOfConfig":"89"},{"size":630,"mtime":1628415482817,"results":"106","hashOfConfig":"89"},{"size":7203,"mtime":1632407511850,"results":"107","hashOfConfig":"89"},{"size":2184,"mtime":1628403072224,"results":"108","hashOfConfig":"89"},{"size":2002,"mtime":1628139068621,"results":"109","hashOfConfig":"89"},{"size":2172,"mtime":1628483776451,"results":"110","hashOfConfig":"89"},{"size":2005,"mtime":1628138531021,"results":"111","hashOfConfig":"89"},{"size":1792,"mtime":1627658970109,"results":"112","hashOfConfig":"89"},{"size":757,"mtime":1628418262041,"results":"113","hashOfConfig":"89"},{"size":631,"mtime":1627510351000,"results":"114","hashOfConfig":"89"},{"size":211,"mtime":1628415356035,"results":"115","hashOfConfig":"89"},{"size":726,"mtime":1627510351000,"results":"116","hashOfConfig":"89"},{"size":631,"mtime":1627510351000,"results":"117","hashOfConfig":"89"},{"size":633,"mtime":1627510351000,"results":"118","hashOfConfig":"89"},{"size":530,"mtime":1627510351000,"results":"119","hashOfConfig":"89"},{"size":978,"mtime":1628315462938,"results":"120","hashOfConfig":"89"},{"size":2904,"mtime":1632407342995,"results":"121","hashOfConfig":"89"},{"size":590,"mtime":1630595063933,"results":"122","hashOfConfig":"89"},{"size":187,"mtime":1630594864176,"results":"123","hashOfConfig":"89"},{"size":6654,"mtime":1631566237351,"results":"124","hashOfConfig":"89"},{"size":689,"mtime":1630594800803,"results":"125","hashOfConfig":"89"},{"size":662,"mtime":1638468181206,"results":"126","hashOfConfig":"127"},{"size":2564,"mtime":1643644757681,"results":"128","hashOfConfig":"127"},{"size":362,"mtime":1627510351000,"results":"129","hashOfConfig":"127"},{"size":2125,"mtime":1643740082289,"results":"130","hashOfConfig":"127"},{"size":2510,"mtime":1639849907827,"results":"131","hashOfConfig":"127"},{"size":3160,"mtime":1643736502325,"results":"132","hashOfConfig":"127"},{"size":3099,"mtime":1643711355372,"results":"133","hashOfConfig":"127"},{"size":2904,"mtime":1632407342995,"results":"134","hashOfConfig":"127"},{"size":978,"mtime":1628315462938,"results":"135","hashOfConfig":"127"},{"size":1163,"mtime":1643644957044,"results":"136","hashOfConfig":"127"},{"size":2730,"mtime":1643711616968,"results":"137","hashOfConfig":"127"},{"size":4306,"mtime":1643736032089,"results":"138","hashOfConfig":"127"},{"size":425,"mtime":1638910053899,"results":"139","hashOfConfig":"127"},{"size":425,"mtime":1638910053899,"results":"140","hashOfConfig":"127"},{"size":3909,"mtime":1643736167298,"results":"141","hashOfConfig":"127"},{"size":6063,"mtime":1642603341229,"results":"142","hashOfConfig":"127"},{"size":4139,"mtime":1643619449707,"results":"143","hashOfConfig":"127"},{"size":6492,"mtime":1642620094474,"results":"144","hashOfConfig":"127"},{"size":7470,"mtime":1642612150656,"results":"145","hashOfConfig":"127"},{"size":3419,"mtime":1642602850089,"results":"146","hashOfConfig":"127"},{"size":37121,"mtime":1642621373896,"results":"147","hashOfConfig":"127"},{"size":5485,"mtime":1639853588049,"results":"148","hashOfConfig":"127"},{"size":3537,"mtime":1639838917953,"results":"149","hashOfConfig":"127"},{"size":3410,"mtime":1643711721928,"results":"150","hashOfConfig":"127"},{"size":3581,"mtime":1643694506559,"results":"151","hashOfConfig":"127"},{"size":3002,"mtime":1643694601953,"results":"152","hashOfConfig":"127"},{"size":3183,"mtime":1643655694517,"results":"153","hashOfConfig":"127"},{"size":4606,"mtime":1643711337721,"results":"154","hashOfConfig":"127"},{"size":2906,"mtime":1639849618114,"results":"155","hashOfConfig":"127"},{"size":2740,"mtime":1642521839889,"results":"156","hashOfConfig":"127"},{"size":8479,"mtime":1642616149207,"results":"157","hashOfConfig":"127"},{"size":1758,"mtime":1642603503864,"results":"158","hashOfConfig":"127"},{"size":1749,"mtime":1643644218224,"results":"159","hashOfConfig":"127"},{"size":649,"mtime":1643699046523,"results":"160","hashOfConfig":"127"},{"size":175,"mtime":1643696180133,"results":"161","hashOfConfig":"127"},{"size":656,"mtime":1643738990041,"results":"162","hashOfConfig":"127"},{"size":541,"mtime":1643701471448,"results":"163","hashOfConfig":"127"},{"size":175,"mtime":1643700844815,"results":"164","hashOfConfig":"127"},{"size":667,"mtime":1643706609174,"results":"165","hashOfConfig":"127"},{"size":535,"mtime":1643735485679,"results":"166","hashOfConfig":"127"},{"size":175,"mtime":1643734493576,"results":"167","hashOfConfig":"127"},{"size":636,"mtime":1643734552274,"results":"168","hashOfConfig":"127"},{"size":1629,"mtime":1643737747140,"results":"169","hashOfConfig":"127"},{"size":578,"mtime":1643737083128,"results":"170","hashOfConfig":"127"},{"size":575,"mtime":1643738091929,"results":"171","hashOfConfig":"127"},{"size":175,"mtime":1643736578225,"results":"172","hashOfConfig":"127"},{"size":1593,"mtime":1643739221409,"results":"173","hashOfConfig":"127"},{"size":559,"mtime":1643738651133,"results":"174","hashOfConfig":"127"},{"size":1754,"mtime":1643740039157,"results":"175","hashOfConfig":"127"},{"size":635,"mtime":1643739594545,"results":"176","hashOfConfig":"127"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},"n71n87",{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"179"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"179"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"179"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"179"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"179"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":16,"source":"204","usedDeprecatedRules":"179"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":6,"source":"207","usedDeprecatedRules":"179"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"179"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"179"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"179"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":10,"source":"255","usedDeprecatedRules":"179"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"179"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},"1g3zd92",{"filePath":"268","messages":"269","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"267"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"267"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":10,"source":"255","usedDeprecatedRules":"284"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"284"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"267"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"299"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"267"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"267"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"267"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"267"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"267"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"267"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"267"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"267"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"267"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"267"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"267"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"267"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"267"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"267"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"267"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"267"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\index.js",[],["388","389"],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\App.js",["390","391","392"],"import './App.css';\nimport { BrowserRouter, Route, Router, Switch, useLocation } from 'react-router-dom'\nimport SigninScreen from './screen/auth/singin';\nimport DashboardScreen from './screen/Dashboard';\nimport ItemsScreen from './screen/item';\nimport UnitScreen from './screen/unit';\nimport CategoryScreen from './screen/category';\nimport AreaScreen from './screen/area';\nimport SettingScreen from './screen/settings';\nimport RegulateScreen from './screen/regulate';\nimport ComplaintScreen from './screen/complaint';\n\nfunction App() {\n  var location = useLocation();\n  return (\n    <>\n\n      {location.pathname === '/signin'?\n        <Route exact path='/signin' component={SigninScreen} />\n      :\n          <div className=\"containerMain\">        \n                \n                {/* <Route exact path='/signup' component={signupScreen} /> */}\n                <Route exact path='/' component={DashboardScreen} />\n                <Route exact path='/items' component={ItemsScreen} />\n                <Route exact path='/units' component={UnitScreen} />\n                <Route exact path='/category' component={CategoryScreen} />\n                <Route exact path='/area' component={AreaScreen} />\n                <Route exact path='/settings' component={SettingScreen} />\n                <Route path='/regulate/:id' component={RegulateScreen} />\n                <Route path='/complaint' component={ComplaintScreen} />\n        </div>\n      }\n    </>\n  );\n}\n\nexport default App;\n","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reportWebVitals.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\store\\Store.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\item.js",["393","394","395","396"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { addItemsAction, deleteItemsAction, editItemsAction, listItemsAction } from \"../action/items\";\nimport { listCategoryAction } from \"../action/category\";\nimport { listUnitAction } from \"../action/unit\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { Link } from \"../../node_modules/react-router-dom/cjs/react-router-dom\";\nconst ItemsScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [minPrice, setMinPrice] = useState(\"\")\n    const [maxPrice, setMaxPrice] = useState(\"\")\n    const [unitId, setUnitId] = useState(\"\")\n    const [categoryId, setCategoryId] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    const [categoryFilter, setCategoryFilter] = useState(\"all\")\n    const [unitFilter, setUnitFilter] = useState(\"all\")\n    const [statusFilter, setStatusFilter] = useState(\"all\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const itemListData = useSelector(state => state.itemListData);\n    const { itemList, loading, error } = itemListData;\n\n    const itemAddData = useSelector(state => state.itemAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = itemAddData;\n\n    const itemDeleteData = useSelector(state => state.itemDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = itemDeleteData;\n\n    const itemEditData = useSelector(state => state.itemEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = itemEditData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList } = categoryListData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList } = unitListData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/items') : props.history.push('/signin');\n        dispatch(listItemsAction())\n        dispatch(listCategoryAction())\n        dispatch(listUnitAction())\n\n    }, [userInfo])\n\n    var selectItems = itemList?.filter(function (data) {\n        if (categoryFilter !== 'all' && unitFilter !== 'all' && statusFilter === \"all\") {\n            return data?.category === categoryFilter && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter === 'all' && unitFilter !== 'all' && statusFilter === \"active\") {\n            return data?.isActive === true && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter === 'all' && unitFilter !== 'all' && statusFilter === \"inActive\") {\n            return data?.isActive === false && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter !== 'all' && unitFilter === 'all' && statusFilter === \"active\") {\n            return data?.isActive === true && data?.category === categoryFilter;\n        }\n\n        if (categoryFilter !== 'all' && unitFilter === 'all' && statusFilter === \"inActive\") {\n            return data?.isActive === false && data?.category === categoryFilter;\n        }\n\n        if (categoryFilter !== 'all' && statusFilter === \"active\" && unitFilter !== 'all') {\n            return data.isActive === true && data?.category === categoryFilter && data.unit === unitFilter;\n        }\n        if (categoryFilter !== 'all' && statusFilter === \"inActive\" && unitFilter !== 'all') {\n            return data.isActive === false && data?.category === categoryFilter && data.unit === unitFilter;\n        }\n        if (unitFilter !== 'all') {\n            return data?.unit === unitFilter;\n        }\n        if (categoryFilter !== 'all') {\n            return data?.category === categoryFilter\n        }\n        if (statusFilter === \"active\") {\n            return data?.isActive === true;\n        }\n        if (statusFilter === \"inActive\") {\n            return data?.isActive === false;\n        }\n        if (statusFilter === \"all\") {\n            return data\n        }\n        else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Item Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Item Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Item Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addItemsAction(name, unitId, categoryId, isActive, minPrice, maxPrice))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editItemsAction(id, name, unitId, categoryId, isActive, minPrice, maxPrice))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteItemsAction(id))\n    }\n\n    const updateHandler = (item) => {\n        setId(item?._id)\n        setName(item?.name)\n        setMinPrice(item?.minPrice)\n        setMaxPrice(item?.maxPrice)\n        setUnitId(item?.unitId)\n        setCategoryId(item?.categoryId)\n        setIsActive(item.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Items</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select className=\"form-control bg-light rounded\" onChange={(e) => setStatusFilter(e.target.value)} id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Status</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group\">\n                                                        <select onChange={(e) => setCategoryFilter(e.target.value)} className=\"form-control  bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Category</option>\n                                                            <option value=\"all\">All</option>\n                                                            {categoryList?.map(category =>\n                                                                <option value={category?.name}>{category?.name}</option>\n                                                            )}\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group\">\n                                                        <select onChange={(e) => setUnitFilter(e.target.value)} className=\"form-control  bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Unit</option>\n                                                            <option value=\"all\">All</option>\n                                                            {unitList?.map(unit =>\n                                                                <option value={unit?.name}>{unit?.name}</option>\n                                                            )}\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {itemList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Min Price</th>\n                                                            <th scope=\"col\">Max Price</th>\n                                                            <th scope=\"col\">Unit</th>\n                                                            <th scope=\"col\">Category</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        {selectItems?.map(item =>\n                                                            <>\n                                                                <tr>\n                                                                    <th scope=\"row\">{serNo += 1}</th>\n                                                                    <td>{item?.name}</td>\n                                                                    <td>{item?.minPrice}</td>\n                                                                    <td>{item?.maxPrice}</td>\n                                                                    <td>{item?.unit}</td>\n                                                                    <td>{item?.category}</td>\n                                                                    <td>\n                                                                        <span class={item?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {item?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                    </td>\n                                                                    <td>\n                                                                        <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(item)} data-target={\"#edititems\" + item?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                        <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this item?')) deleteHandler(item?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                        <Link to={'/regulate/' + item?._id} title=\"Regulate\">\n                                                                            <i className=\"fa fa-eye text-success  ml-2\" style={{ cursor: \"pointer\" }} ></i>\n                                                                        </Link>\n                                                                        {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} title=\"active\"></i> */}\n                                                                    </td>\n                                                                </tr>\n\n\n                                                                {/* edit model */}\n\n                                                                <div className=\"modal fade\" id={\"edititems\" + item?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                        <div className=\"modal-content\">\n                                                                            <div className=\"modal-header text-center\">\n                                                                                <div className='modal-title w-100 '>\n                                                                                    <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                    <h4 className=\"text-muted\">Edit Item</h4>\n                                                                                </div>\n\n                                                                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                    <span aria-hidden=\"true\">&times;</span>\n                                                                                </button>\n                                                                            </div>\n\n                                                                            {editLoading &&\n                                                                                <div className=\"text-center\">\n                                                                                    <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                        <span className=\"sr-only\">Loading...</span>\n                                                                                    </div>\n                                                                                </div>}\n                                                                            {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n                                                                            <div className=\"modal-body\">\n                                                                                <form onSubmit={submitUpdHandler}>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Name\" />\n                                                                                    </div>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"number\" value={minPrice} onChange={(e) => setMinPrice(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Min Price\" />\n                                                                                    </div>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"number\" value={maxPrice} onChange={(e) => setMaxPrice(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Max Price\" />\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group\">\n                                                                                        <select value={unitId} onChange={(e) => setUnitId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\">\n                                                                                            <option value=\"\" disabled selected>Unit</option>\n                                                                                            {unitList?.map(unit =>\n                                                                                                <> {unit.isActive === true && <option value={unit?._id}>{unit?.name}</option>}</>\n                                                                                            )}\n\n                                                                                        </select>\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group\">\n                                                                                        <select value={categoryId} onChange={(e) => setCategoryId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\">\n                                                                                            <option value=\"\" disabled selected>Category</option>\n                                                                                            {categoryList?.map(category =>\n                                                                                                <> {category.isActive === true && <option value={category?._id}>{category?.name}</option>}</>\n                                                                                            )}\n                                                                                        </select>\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group \">\n                                                                                        <label className=\"checkbox checkbox-primary\">\n                                                                                            <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={item?.isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                                            <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                    </div>\n\n                                                                                    <div>\n                                                                                        <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Item</button>\n                                                                                    </div>\n\n                                                                                </form>\n                                                                            </div>\n\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </>\n                                                        )}\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Item</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Item Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Name\" required />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"number\" onChange={(e) => setMinPrice(e.target.value)} value={minPrice} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Min Price\" required />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"number\" onChange={(e) => setMaxPrice(e.target.value)} value={maxPrice} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Max Price\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <select onChange={(e) => setUnitId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\" required>\n                                                                <option value=\"\" disabled selected>Unit</option>\n                                                                {unitList?.map(unit =>\n                                                                    <> {unit.isActive === true && <option value={unit?._id}>{unit?.name}</option>}</>\n                                                                )}\n                                                            </select>\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <select onChange={(e) => setCategoryId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\" required>\n                                                                <option value=\"\" disabled selected>Category</option>\n                                                                {categoryList.map(category =>\n                                                                    <> {category.isActive === true && <option value={category?._id}>{category?.name}</option>}</>\n                                                                )}\n                                                            </select>\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Item</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default ItemsScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\unit.js",["397","398","399","400"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { addUnitAction, deleteUnitAction, editUnirAction, listUnitAction } from \"../action/unit\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\n\nconst UnitScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const unitAddData = useSelector(state => state.unitAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = unitAddData;\n\n    const unitDeleteData = useSelector(state => state.unitDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = unitDeleteData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList, loading, error } = unitListData;\n\n    const unitEditData = useSelector(state => state.unitEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = unitEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/units') : props.history.push('/signin');\n        dispatch(listUnitAction())\n    }, [userInfo])\n\n    var selectUnit = unitList?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Unit Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Unit Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Unit Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addUnitAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editUnirAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteUnitAction(id))\n    }\n\n    const updateHandler = (unit) => {\n        setId(unit?._id)\n        setName(unit?.name)\n        setDescription(unit?.description)\n        setIsActive(unit.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n                < div className=\" m-4\">\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Units</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Status</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {unitList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectUnit?.map(unit =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{unit?.name}</td>\n                                                                        <td>{unit?.description}</td>\n                                                                        <td>\n                                                                            <span class={unit?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {unit?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(unit)} data-target={\"#edititems\" + unit?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this unit?')) deleteHandler(unit?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + unit?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Unit</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                {editLoading &&\n                                                                                    <div className=\"text-center\">\n                                                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                            <span className=\"sr-only\">Loading...</span>\n                                                                                        </div>\n                                                                                    </div>}\n                                                                                {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={unit?.isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Unit</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Unit</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Unit Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} value={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Unit</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default UnitScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Dashboard.js",["401","402","403","404","405","406","407","408","409"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { listItemsAction } from \"../action/items\";\nimport { listCategoryAction } from \"../action/category\";\nimport { listUnitAction } from \"../action/unit\";\nimport { listAreaAction } from \"../action/area\";\nimport RegulareChart from \"./chart/regulateChart\";\nimport ItemBarChart from \"./chart/itemBarChart\";\nconst DashboardScreen = (props) => {\n    const dispatch = useDispatch()\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const itemListData = useSelector(state => state.itemListData);\n    const { itemList, loading: listItemLoading, error: listItemError } = itemListData;\n\n    const areaListData = useSelector(state => state.areaListData);\n    const { areaList, loading: listAreaLoading, error: listAreaError } = areaListData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList, loading: listCategoryLoading, error: listCategoryError } = categoryListData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList, loading: listUnitLoading, error: listUnitError } = unitListData;\n    useEffect(() => {\n        userInfo ? props.history.push('/') : props.history.push('/signin')\n        dispatch(listItemsAction())\n        dispatch(listCategoryAction())\n        dispatch(listUnitAction())\n        dispatch(listAreaAction())\n\n    }, [userInfo])\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {listItemLoading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div> :\n                        <>\n                            {listItemError ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n\n                                    <div className=\"row d-flex \">\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#ff9f00', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart orange\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{itemList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: \"#ff9f00\" }}>{itemList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Items</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#4CC790', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart green\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{areaList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: \"#4CC790\" }}>{areaList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Areas</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart \" style={{ borderBottomColor: '#3c9ee5' }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart blue\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{categoryList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: '#3c9ee5' }}>{categoryList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Categories</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#F75A5F', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart red\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{unitList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: '#F75A5F' }}>{unitList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Units</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-sm\">\n                                            <div className=\"shadow bg-white rounded p-2\">\n                                                <ItemBarChart />\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                </>\n                            }\n\n                        </>\n                    }\n\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default DashboardScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\category.js",["410","411","412","413"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { addCategoryAction, deleteCategoryAction, editCategoryAction, listCategoryAction } from \"../action/category\";\n\nconst CategoryScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const categoryAddData = useSelector(state => state.categoryAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = categoryAddData;\n\n    const categoryDeleteData = useSelector(state => state.categoryDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = categoryDeleteData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList, loading, error } = categoryListData;\n\n    const categoryEditData = useSelector(state => state.categoryEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = categoryEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/category') : props.history.push('/signin');\n        dispatch(listCategoryAction())\n    }, [userInfo])\n\n    var selectCategory = categoryList?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Category Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Category Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast(\"Category Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addCategoryAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editCategoryAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteCategoryAction(id))\n    }\n\n    const updateHandler = (category) => {\n        setId(category?._id)\n        setName(category?.name)\n        setDescription(category?.description)\n        setIsActive(category.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Categories</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option defaultValue=\"\" disabled selected>Status</option>\n                                                            <option defaultValue=\"all\">All</option>\n                                                            <option defaultValue=\"active\">Active</option>\n                                                            <option defaultValue=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {categoryList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectCategory?.map(category =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{category?.name}</td>\n                                                                        <td>{category?.description}</td>\n                                                                        <td>\n                                                                            <span className={category?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {category?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(category)} data-target={\"#edititems\" + category?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this category?')) deleteHandler(category?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\" ></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + category?._id} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Category</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                {editLoading &&\n                                                                                    <div className=\"text-center\">\n                                                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                            <span className=\"sr-only\">Loading...</span>\n                                                                                        </div>\n                                                                                    </div>}\n                                                                                {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" defaultValue={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" defaultValue={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={category?.isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Category</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Category</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Category Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} defaultValue={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} defaultValue={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Category</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default CategoryScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\settings.js",["414"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport { editPasswordAction } from \"../action/auth\";\n\nconst SettingScreen = (props) => {\n    const dispatch = useDispatch()\n    const [currentPassword, setCurrentPassword] = useState(\"\")\n    const [matchPassword, setMatchPassword] = useState(\"\")\n    const [updatePassword, setUpdatePassword] = useState(\"\")\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const passwordEditData = useSelector(state => state.passwordEditData);\n    const { loading, error, success } = passwordEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/settings') : props.history.push('/signin');\n    }, [userInfo])\n\n    if (success) {\n        toast.success(\"Password Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(editPasswordAction(currentPassword, updatePassword))\n    }\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n                    <ToastContainer />\n                    <div className='cart shadow bg-white rounded '>\n                        <div className='border border-top-0 border-left-0 border-right-0 '>\n                            <h5 className=\"text-muted pt-4 pb-4 pl-4\">Change Password</h5>\n                        </div>\n\n                        <form onSubmit={submitHandler} className=' p-3 mt-3'>\n                            {loading &&\n                                <div className=\"text-center\">\n                                    <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                        <span className=\"sr-only\">Loading...</span>\n                                    </div>\n                                </div>\n                            }\n\n                            {error &&\n                                <div className=' text-center'>\n                                    <p className=\"text-danger\">The current password is not match with old password.</p>\n                                </div>\n                            }\n\n                            <div className=\"form-group\">\n                                <input type=\"password\" onChange={(e) => setCurrentPassword(e.target.value)} value={currentPassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Current Password\" required />\n                            </div>\n                            <div className=\"form-group py-3\">\n                                <input type=\"password\" onChange={(e) => setUpdatePassword(e.target.value)} value={updatePassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password\" required />\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" onChange={(e) => setMatchPassword(e.target.value)} value={matchPassword} className={matchPassword !== updatePassword ? \"form-control is-invalid\" : \"form-control\"} id=\"validationServer03\" placeholder=\"City\" required />\n                                {matchPassword !== updatePassword &&\n                                    <div className=\"invalid-feedback\">\n                                        Please enter the same value again.\n                                    </div>\n                                }\n                            </div>\n                            <div className='pt-4'>\n                                <button type=\"submit\" className=\"btn btn-primary mr-3\" style={{ width: '100px' }} disabled={matchPassword !== updatePassword}>Save</button>\n                                <button className=\"btn btn-secondary\" onClick={() => props.history.push('/')} style={{ width: '100px' }}>Cancel</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default SettingScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\area.js",["415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport $ from 'jquery'\nimport { addAreaAction, deleteAreaAction, editAreaAction, listAreaAction } from \"../action/area\";\n\nconst AreaScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const areaAddData = useSelector(state => state.areaAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = areaAddData;\n\n    const areaDeleteData = useSelector(state => state.areaDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = areaDeleteData;\n\n    const areaListData = useSelector(state => state.areaListData);\n    const { areaList, loading, error } = areaListData;\n\n    const areaEditData = useSelector(state => state.areaEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = areaEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/area') : props.history.push('/signin');\n        dispatch(listAreaAction())\n    }, [userInfo])\n\n    var selectarea = areaList ?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data ?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data ?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Area Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Area Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Area Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addAreaAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editAreaAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteAreaAction(id))\n    }\n\n    const updateHandler = (area) => {\n        setId(area ?._id)\n        setName(area ?.name)\n        setDescription(area ?.description)\n        setIsActive(area ?.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Area</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Search</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {areaList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectarea ?.map(area =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{area ?.name}</td>\n                                                                        <td>{area ?.description}</td>\n                                                                        <td>\n                                                                            <span class={area ?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {area ?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(area)} data-target={\"#edititems\" + area ?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this area?')) deleteHandler(area ?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + area ?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Area</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={area ?.isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Area</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add area</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">area Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} value={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Area</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                    <ToastContainer />\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default AreaScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\regulate.js",["437","438","439","440","441","442","443","444","445"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { listRegulateItemsAction } from \"../action/regulateItems\";\n\nconst RegulateScreen = (props) => {\n    const dispatch = useDispatch()\n    let serNo = 0   \n    const itemId = props.match.params.id\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const regulateItemListData = useSelector(state => state.regulateItemListData);\n    const { regulateItemList, loading, error } = regulateItemListData;\n    \n    useEffect(() => {\n        userInfo ? props.history.push('/regulate/'+itemId) : props.history.push('/signin');\n        dispatch(listRegulateItemsAction(itemId))\n\n    }, [userInfo])\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <div className='cart shadow bg-white rounded p-3 '>\n                                    <div>\n                                        <h5 className=\"text-muted\">Regulate Items</h5>\n                                    </div>\n\n                                    {/* table */}\n                                    <div className='table-responsive '>\n                                        <table className=\"table table-bordered table table-hover\">\n                                            <thead>\n                                                <tr className='table-active'>\n                                                    <th scope=\"col\">#</th>\n                                                    <th scope=\"col\">Date</th>\n                                                    <th scope=\"col\">Min Price</th>\n                                                    <th scope=\"col\">Max Price</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody id=\"myTable\">\n                                                {regulateItemList ?.map(item =>\n                                                    <tr>\n                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                        <td>{new Date(item ?.createdAt).getDate() + '-' + new Date(item ?.createdAt).getMonth() + '-' + new Date(item ?.createdAt).getFullYear()}</td>\n                                                        <td>{item ?.minPrice}</td>\n                                                        <td>{item ?.maxPrice}</td>\n                                                    </tr>\n                                                )}\n                                            </tbody>\n                                        </table>\n                                    </div>\n\n                                </div>\n\n                            }\n                        </>\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default RegulateScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\auth\\singin.js",["446"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { signin } from '../../action/auth'\nimport Logo from '../assets/Logo.jpeg'\nimport '../style/Login.css'\nimport $ from 'jquery'\nimport 'jquery-validation'\n\nconst SigninScreen = (props) => {\n\tconst dispatch = useDispatch()\n\tconst [email, setEmail] = useState();\n\tconst [password, setPassword] = useState();\n\tconst userSignin = useSelector(state => state.userSignin);\n\tconst { loading, userInfo, error } = userSignin;\n\n\tuseEffect(() => {\n\t\tif (userInfo) {\n      window.location.href = \"/\"\n      // window.location.reload()\n    }\t\t\n\t}, [userInfo])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(signin(email, password));\n\t}\n\n\treturn (\n\n\t\t<div className='login'>\n\n\t\t\t<div className=\"cover\"></div>\n\t\t\t<div style={{ maxWidth: \"430px\", margin: \"100px auto 50px\" }}>\n\t\t\t\t<div className=\"text-center mb-5\">\n\t\t\t\t\t<span className=\"auth-head-icon\"><i className=\"fa fa-user\"></i></span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ibox login-box\">\n\t\t\t\t\t<form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\n\t\t\t\t\t\t<h4 className=\"font-strong text-center py-4 \">LOG IN</h4>\n\n\t\t\t\t\t\t{loading &&\n\t\t\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t\t\t<div class=\"spinner-border text-primary\" role=\"status\">\n\t\t\t\t\t\t\t\t\t<span class=\"sr-only\">Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{error && <div className=\"text-danger text-center\">Invaled Username or Password</div>}\n\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setEmail(e.target.value)} value={email} type=\"text\" name=\"email\" placeholder=\"Email\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} value={password} type=\"password\" name=\"password\" placeholder=\"Password\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"flexbox mb-5\">\n\t\t\t\t\t\t\t<label className=\"checkbox checkbox-primary\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"remember\" id=\"remember\" />\n\t\t\t\t\t\t\t\t<span className=\"input-span\"></span> Remember\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<a className=\"color-inherit\" >Forgot password?</a>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div className=\"text-center pb-4\">\n\t\t\t\t\t\t\t<button type='submit' className=\"btn btn-primary btn-rounded btn-block\">LOGIN</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t)\n}\n$(function () {\n\t$('#login-form').validate({\n\t\terrorClass: \"help-block\",\n\n\t\trules: {\n\t\t\temail: {\n\t\t\t\trequired: true,\n\t\t\t\temail: true\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\trequired: true\n\t\t\t}\n\t\t},\n\t\thighlight: function (e) {\n\t\t\t$(e).closest(\".form-group\").addClass(\"has-error\")\n\t\t},\n\t\tunhighlight: function (e) {\n\t\t\t$(e).closest(\".form-group\").removeClass(\"has-error\")\n\t\t},\n\t});\n});\nexport default SigninScreen\n\n\n","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\regulateItems.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Navbar.js",["447","448","449","450","451","452"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\nimport Cookie from 'js-cookie'\nimport ProfileImg from './assets/profile.png'\nimport 'bootstrap/js/dist/tab';\nimport logo from './assets/Logo.jpeg'\nimport './style/Navbar.css'\nimport './style/Sidebar.css'\n\nconst Navbar = () => {\n    const history = useHistory()\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n    const [sidebarOpen, setsidebarOpen] = useState(false);\n    const openSidebar = () => {\n        setsidebarOpen(true);\n    };\n    const closeSidebar = () => {\n        setsidebarOpen(false);\n    };\n\n    const logoutHandler = () => {\n        Cookie.remove(\"userInfo\");\n        history.push('/signin')\n        window.location.reload()\n    };\n\n\n    return (\n        <>\n\n            <nav className=\"navbar shadow\">\n                <div className=\"nav_icon\" onClick={() => openSidebar()}>\n                    <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"navbar__left\">\n                    {/* <a href=\"#\">Subscribers</a>\n                <a href=\"#\">Video Management</a>\n                <a className=\"active_link\" href=\"#\">\n                Admin\n                </a> */}\n                </div>\n                <div className=\"navbar__right\">\n                    {/* <a href=\"#\">\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </a>\n                <a href=\"#\">\n                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\n                </a> */}\n                    <div className='chip'>\n                        <span className=\"dropdown\">\n                            <img src={ProfileImg} style={{ cursor: 'pointer' }} className=\"rounded-circle dropdown-toggle navImg\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\n                            <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                                <div style={{ width: '200px', margin: 'auto' }}>\n                                    <img src={ProfileImg} className=\"card-img-top rounded-circle\" style={{ width: '100px', display: \"block\", margin: 'auto' }} alt=\"Card image cap\" />\n                                    <h5 className=\"card-title text-center\">{userInfo?.data?.name}</h5>\n                                    <div className=\"card-body text-center\">\n                                        {/* <Link to='/profile' className=\" btn btn-info shadow rounded mr-2\"> <i className=\"fas fa-user\"></i></Link> */}\n                                        <button onClick={() => { if (window.confirm('Are you sure you want to log out?')) { logoutHandler() }; }} className=\" btn btn-danger shadow rounded\"> <i className=\"fas fa-sign-out-alt\"></i></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </span>\n                        <span className=\"text-dark mx-2 h6\">{userInfo?.data?.name}</span>\n                    </div>\n                </div>\n            </nav>\n\n            <div className={sidebarOpen ? \"sidebar_responsive\" : \"\"} id=\"sidebar\">\n                <div className=\"sidebar__title\">\n                    <div className=\"sidebar__img\">\n                        {/* <Link to='/'>\n                    <img src={logo} alt=\"logo\" />\n\n                    </Link> */}\n                        <h4 className=\"title\">ADMIN</h4>\n                    </div>\n                    <i\n                        onClick={() => closeSidebar()}\n                        className=\"fa fa-times\"\n                        id=\"sidebarIcon\"\n                        aria-hidden=\"true\"\n                    ></i>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/' activeClassName='text-success'>\n                            <i className=\"fa fa-home icon\"> </i>\n                            <p>Dashboard</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                {/* <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/regulate' activeClassName='text-success'>\n                            <i className=\"fa fa-save icon\"> </i>\n                            <p>Regulate Items</p>\n                        </NavLink>\n                    </div>\n                </div> */}\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/items' activeClassName='text-success'>\n                            <i className=\"fa fa-columns icon\"> </i>\n                            <p>Items</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/category' activeClassName='text-success'>\n                            <i className=\"fa fa-align-justify icon\"> </i>\n                            <p>Categories</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/units' activeClassName='text-success'>\n                            <i className=\"fa fa-grip-lines icon\"> </i>\n                            <p>Units</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/area' activeClassName='text-success'>\n                            <i className=\"fa fa-compass icon\"> </i>\n                            <p>Area</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/complaint' activeClassName='text-success'>\n                            <i className=\"fa fa-comment icon\"> </i>\n                            <p>Complaints</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/settings' activeClassName='text-success'>\n                            <i className=\"fa fa-cog icon\"> </i>\n                            <p>Settings</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n            </div>\n\n        </>\n    )\n}\n\nexport default Navbar;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\regulateItems.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\regulateItem.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\regulateChart.js",["453"],"import react from 'react'\r\nimport { Chart } from \"react-google-charts\";\r\n\r\n\r\nconst RegulareChart = () => {\r\n\r\n    return (\r\n        <>\r\n        <h4 className='text-center pt-2'>Rates Analytics </h4>\r\n        <Chart\r\n        \r\n        chartType=\"AreaChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={[\r\n          ['Style', 'Fruit', 'Vagetible', 'Poultry'],\r\n          ['Sun', 92, 96, 2],\r\n          ['Mon', 86, 80, 32],\r\n          ['Tue', 76, 70, 23],\r\n          ['Wed', 56, 60, 34],\r\n          ['Thu', 59, 50, 63],\r\n          ['Fri', 72, 22, 60],\r\n          ['Sat', 80, 17, 40],\r\n        ]}\r\n        options={{\r\n          isStacked: false,\r\n          height: 300,\r\n          legend: { position: 'top', maxLines: 3 },\r\n          vAxis: {\r\n            minValue: 0,\r\n          },\r\n          hAxis: {\r\n            title: 'Date'\r\n          },\r\n        }}\r\n        rootProps={{ 'data-testid': '2' }}\r\n      /> \r\n      </>      \r\n    )\r\n}\r\n\r\nexport default RegulareChart","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\itemBarChart.js",["454","455","456","457","458","459","460","461","462","463","464","465","466","467"],"import react, { useState } from 'react'\r\nimport { Chart } from \"react-google-charts\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nconst ItemBarChart = (props) => {\r\n  const [chartSelect, setcChartSelect] = useState(1)\r\n\r\n  const itemListData = useSelector(state => state.itemListData);\r\n  const { itemList, loading: listItemLoading, error: listItemError } = itemListData;\r\n\r\n  const getFruits = () => {\r\n    var data = []\r\n    data.push(['Item', \"Max Price\", \"Min Price\"])\r\n\r\n    var fruitData = itemList.filter(function (item) {\r\n      return item ?.category === 'fruit' || item ?.category === 'fruits' \r\n    })\r\n    fruitData.map(item =>\r\n      data.push([item.name, item ?.maxPrice, item ?.minPrice])\r\n    )\r\n    return data\r\n  }\r\n\r\n  const getVagetable = () => {\r\n    var data = []\r\n    data.push(['Item', \"Max Price\", \"Min Price\"])\r\n\r\n    var vagetableData = itemList.filter(function (item) {\r\n      return item ?.category === 'vegetable' || item ?.category === 'vegetables' ||  item ?.category === 'vagetable' || item ?.category === 'vagetables'\r\n    })\r\n    vagetableData.map(item =>\r\n      data.push([item.name, item ?.maxPrice, item ?.minPrice])\r\n    )\r\n    return data\r\n  }\r\n\r\n  function chartData() {\r\n    if (chartSelect === 1) {\r\n      return getFruits()\r\n    }\r\n    if (chartSelect === 2) {\r\n      return getVagetable()\r\n    }\r\n    else {\r\n      return getFruits()\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='d-flex justify-content-between'>\r\n        <div className=''>\r\n          <h3 className='text-center text-muted '>Rates Analytics</h3>\r\n        </div>\r\n\r\n        <div className=\"dropdown d-flex justify-content-end mt-2\">\r\n\r\n          <button className=\"btn btn-primary mx-1 mb-1\" onClick={() => setcChartSelect(1)} >Fruits</button>\r\n          <button className=\"btn btn-success mx-1 mb-1\" onClick={() => setcChartSelect(2)}>Vegetables</button>\r\n        </div>\r\n      </div>\r\n      <Chart\r\n        // width={'500px'}\r\n        // height={'300px'}\r\n\r\n        chartType=\"ComboChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={\r\n          chartData()\r\n        }\r\n        options={{\r\n          // colors: ['#FB7A21'],\r\n          // backgroundColor: '#2F4F4F',\r\n          chart: {\r\n            title: 'Company Performance',\r\n            subtitle: 'Sales, Expenses, and Profit: 2014-2017',\r\n          },\r\n          legend: { position: 'none' },\r\n          title: \"weeklyTitle\",\r\n          titleTextStyle: { color: '#FFF' },\r\n          // vAxis: { title: 'Percentage', titleTextStyle: { color: '#FFF' }, textStyle: { color: '#FFF' } },\r\n          // hAxis: { title: 'Month', fontSize: 28, titleTextStyle: { color: '#FFF' }, textStyle: { color: '#FFF' } },\r\n          seriesType: 'bars',\r\n          series: { 5: { type: 'line' } },\r\n        }}\r\n        rootProps={{ 'data-testid': '1' }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ItemBarChart","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\complaint.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\complaint.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\complaint.js",["468","469","470","471","472"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport $ from 'jquery'\nimport { listComplaintAction } from \"../action/complaint\";\nimport NotFound from './assets/notfound.png'\n\nconst ComplaintScreen = (props) => {\n    const dispatch = useDispatch()\n    const [loaded, setLoaded] = useState(false)\n    let serNo = 0\n    function showImage() {\n        return setLoaded(true)\n    }\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const complaintListData = useSelector(state => state.complaintListData);\n    const { complaintList, loading, error } = complaintListData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/complaint') : props.history.push('/signin');\n        dispatch(listComplaintAction())\n    }, [userInfo])\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Area</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {complaintList.length === 0 ? <h5 className=\"text-muted text-center\">Complaint Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Contact</th>\n                                                            <th scope=\"col\">Details</th>\n                                                            <th scope=\"col\">image</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {complaintList?.map(complaint =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{complaint?.name}</td>\n                                                                        <td>{complaint?.contactNo}</td>\n                                                                        <td>{complaint?.detail}</td>\n                                                                        <td>\n                                                                            <img src={NotFound} width=\"100\" height=\"50\" style={loaded ? { display: \"none\" } : {}} />\n\n                                                                            <img src={'http://localhost:5000/' + complaint.image} width=\"100\" height=\"50\" onLoad={showImage} style={loaded ? {} : { display: \"none\" }} />\n\n                                                                        </td>\n\n                                                                    </tr>\n\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                    <ToastContainer />\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default ComplaintScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\complaint.js",[],"G:\\expert system\\server\\client\\src\\index.js",[],["473","474"],"G:\\expert system\\server\\client\\src\\App.js",["475","476","477","478"],"import './App.css';\nimport { BrowserRouter, Route, Router, Switch, useLocation } from 'react-router-dom'\nimport StartScreen from './screen/StartScreen';\nimport DetailScreen from './screen/DetailScreen';\nimport ContactScreen from './screen/Contact';\nimport SigninScreen from './screen/auth/singin';\nimport SignupScreen from './screen/auth/signup';\nimport DashboardScreen from './screen/admin/Dashboard';\nimport AdminDetailScreen from './screen/admin/DetailScreen';\nimport AdminUserScreen from './screen/admin/user';\nimport AdminMessageScreen from './screen/admin/Message';\nimport SettingScreen from './screen/admin/Setting';\nimport ClientSigninScreen from './screen/Signin';\nimport ClientSignupScreen from './screen/signup';\nimport ClientForgotPasswordScreen from './screen/forgotPassord';\nimport ClientNewPasswordScreen from './screen/newPassword';\nimport ProfileScreen from './screen/Profile';\nimport UplaodFileScreen from './screen/admin/UplaodFile';\nimport RequestPremiumScreen from './screen/admin/RequestPremium';\nimport VerifiedScreen from './screen/verified';\n\nfunction App() {\n  var location = useLocation();\n  return (\n    <div className=\"\">\n      <>\n        <Route exact path='/' component={StartScreen} />\n        <Route exact path='/detail' component={DetailScreen} />\n        <Route exact path='/contact' component={ContactScreen} />\n        <Route exact path='/profile' component={ProfileScreen} />\n        <Route exact path='/signin' component={ClientSigninScreen} />\n        <Route exact path='/signup' component={ClientSignupScreen} />\n        <Route exact path='/reset-password' component={ClientForgotPasswordScreen} />\n        <Route exact path='/reset/:token' component={ClientNewPasswordScreen} />\n        <Route exact path='/account/confirm/:token' component={VerifiedScreen} />\n      </>\n      <div>\n        <Route exact path='/admin/signin' component={SigninScreen} />\n        <Route exact path='/admin/add-user' component={SignupScreen} />\n        <Route exact path='/admin/dashboard' component={DashboardScreen} />\n        <Route exact path='/admin/product-association' component={UplaodFileScreen} />\n        <Route exact path='/admin/detail' component={AdminDetailScreen} />\n        <Route exact path='/admin/user' component={AdminUserScreen} />\n        <Route exact path='/admin/request-premium' component={RequestPremiumScreen} />\n        <Route exact path='/admin/message' component={AdminMessageScreen} />\n        <Route exact path='/admin/settings' component={SettingScreen} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","G:\\expert system\\server\\client\\src\\reportWebVitals.js",[],"G:\\expert system\\server\\client\\src\\store\\Store.js",[],"G:\\expert system\\server\\client\\src\\screen\\auth\\singin.js",["479","480","481","482"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { signin } from '../../action/auth'\nimport Logo from '../assets/Logo.png'\nimport '../style/Login.css'\nimport $ from 'jquery'\nimport 'jquery-validation'\n\nconst SigninScreen = (props) => {\n\tconst dispatch = useDispatch()\n\tconst [email, setEmail] = useState();\n\tconst [password, setPassword] = useState();\n\tconst userSignin = useSelector(state => state.userSignin);\n\tconst { loading, userInfo, error } = userSignin;\n\n\tuseEffect(() => {\n\t\tif (userInfo) {\n\t\t\t// window.location.href = \"/dashboard\"\n\t\t\t// window.location.reload()\n\t\t}\n\t}, [userInfo])\n\n\t// const submitHandler = (e) => {\n\t// \te.preventDefault();\n\t// \tdispatch(signin(email, password));\n\t// }\n\n\treturn (\n\n\t\t<div className='login'>\n\n\t\t\t<div className=\"cover\"></div>\n\t\t\t<div style={{ maxWidth: \"430px\", margin: \"100px auto 50px\" }}>\n\t\t\t\t<div className=\"text-center mb-5\">\n\t\t\t\t\t<span className=\"auth-head-icon\"><i className=\"fa fa-user\"></i></span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ibox login-box\">\n\t\t\t\t\t<form className=\"ibox-body p-3\" id=\"login-form\">\n\t\t\t\t\t\t<h4 className=\"font-strong text-center py-4 \">LOG IN</h4>\n\n\t\t\t\t\t\t{loading &&\n\t\t\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t\t\t<div class=\"spinner-border text-primary\" role=\"status\">\n\t\t\t\t\t\t\t\t\t<span class=\"sr-only\">Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{error && <div className=\"text-danger text-center\">Invaled Username or Password</div>}\n\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setEmail(e.target.value)} value={email} type=\"text\" name=\"email\" placeholder=\"Email\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} value={password} type=\"password\" name=\"password\" placeholder=\"Password\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"flexbox mb-5\">\n\t\t\t\t\t\t\t<label className=\"checkbox checkbox-primary\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"remember\" id=\"remember\" />\n\t\t\t\t\t\t\t\t<span className=\"input-span\"></span> Remember\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<a className=\"color-inherit\" >Forgot password?</a>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div className=\"text-center pb-4\">\n\t\t\t\t\t\t\t<button type='submit' onClick={() => props.history.push('/admin/dashboard')} className=\"btn btn-success btn-rounded btn-block\">LOGIN</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default SigninScreen\n\n\n","G:\\expert system\\server\\client\\src\\reducer\\auth.js",[],"G:\\expert system\\server\\client\\src\\action\\auth.js",[],"G:\\expert system\\server\\client\\src\\screen\\chart\\itemBarChart.js",["483","484","485","486","487","488","489","490","491","492","493","494","495","496"],["497","498"],"G:\\expert system\\server\\client\\src\\screen\\chart\\regulateChart.js",["499"],"G:\\expert system\\server\\client\\src\\contant\\auth.js",[],"G:\\expert system\\server\\client\\src\\screen\\StartScreen.js",["500","501","502","503","504","505"],"import React, { useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport uplaodImg from './assets/upload.png'\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nconst StartScreen = (props) => {\r\n\r\n    const submitHandler = () => {\r\n        props.history.push('/detail')\r\n    }\r\n\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n    const { loading, success, userInfo, error } = userSignin;\r\n\r\n    useEffect(() => {\r\n            userInfo ? props.history.push('/') : props.history.push('/signin')\r\n        }, [userInfo])\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"m-4\">\r\n                <div className='cart shadow bg-white rounded p-3 '>\r\n                    <div className=\"row justify-content-around my-3\">\r\n                        <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                            <img width=\"40%\" src={uplaodImg} />\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <h3 className='text-muted text-center pb-3'>Uplaod File </h3>\r\n\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control border-top-0 border-left-0 border-right-0 bg-light rounded\" id=\"exampleFormControlSelect1\" required>\r\n                                        <option value=\"\" disabled selected>Select File Type</option>\r\n                                        <option value=\"\">JSON</option>\r\n                                        <option value=\"\">Excel</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group custom-file mb-3\">\r\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" accept=\".pdf\" />\r\n                                    <label className=\"form-control rounded border-top-0 border-left-0 border-right-0 custom-file-label bg-light rounded\" for=\"customFile\">Choose file</label>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"text-center\">\r\n                                    <button onClick={submitHandler} type=\"button\" className=\"btn btn-success\">\r\n                                        <i className=\"fas fa-file\"> Uplaod File </i>\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StartScreen","G:\\expert system\\server\\client\\src\\screen\\Navbar.js",["506","507","508","509","510","511"],"G:\\expert system\\server\\client\\src\\screen\\actionButton.js",["512"],"G:\\expert system\\server\\client\\src\\screen\\ActionButton.js",["513"],"import React from 'react'\r\nimport './style/actionButton.css'\r\n\r\nconst ActionButton = () => {\r\n    return (\r\n        <>\r\n            <div className=\"zoom\">\r\n                <a target='_blank' href=\"https://wa.me/+923088887580\" className=\"zoom-btn-large\" id=\"zoomBtn\" >\r\n                    <i className=\"fa fa-whatsapp fa-4x\"></i>\r\n                </a>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionButton",["514","515"],"G:\\expert system\\server\\client\\src\\screen\\Contact.js",["516","517"],"G:\\expert system\\server\\client\\src\\screen\\DetailScreen.js",["518"],"import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport Navbar from './Navbar';\r\nimport Chart from \"react-google-charts\";\r\nimport FrequentChartScreen from './admin/chart.js/frequectChart';\r\n\r\nconst DetailScreen = (props) => {\r\n    let serNo = 0\r\n    const [visibility, setVisibility] = useState(true)\r\n\r\n    const frequentItemsets = [\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"MilkPak Full Cream 250ml\"\r\n        ],\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"MilkPak Full Cream 250ml\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Lays French Cheese 20Rs\",\r\n            \"Candy Rs.5\",\r\n            \"Dall Mongi 500g\"\r\n        ],\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"Dall Mongi 500g\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"Dall Mongi 500g\",\r\n            \"MilkPak Full Cream 250ml\"\r\n        ],\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"Dall Mongi 500g\",\r\n            \"MilkPak Full Cream 250ml\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Lays French Cheese 20Rs\",\r\n            \"Lays Yogurt&Herb 20Rs\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Islamabad Tea 950g\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Butter Puff G HR\",\r\n            \"MilkPak Full Cream 250ml\"\r\n        ],\r\n        [\r\n            \"LiptonYellow Label Tea 190g\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Misk POP-UP \",\r\n            \"Tapal Green Tea Lemon 30Bags\"\r\n        ],\r\n        [\r\n            \"Misk POP-UP \",\r\n            \"Tapal Green Tea Lemon 30Bags\",\r\n            \"White Sugar\"\r\n        ]\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"m-4\">\r\n                <div className='cart shadow bg-white rounded p-3 '>\r\n                    {/* <div>\r\n                    <h5 className=\"text-muted\">Title</h5>\r\n                </div> */}\r\n\r\n                    {/* filter */}\r\n\r\n                    <div className='row justify-content-between'>\r\n                        <form className='col-sm-4'>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control rounded bg-light\" id=\"myInput\" placeholder=\"Search\" />\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"mr-3\">\r\n                            <button type=\"button\" className=\"btn btn-success btn-sm\" >\r\n                                <i className=\"fas fa-download\"> Export </i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n\r\n                        <ul className=\"nav nav-tabs md-tabs nav-justified rounded-lg mb-3\" id=\"myTab\" role=\"tablist\">\r\n                            <li className=\"nav-item waves-effect waves-light\" onClick={() => setVisibility(true)}>\r\n                                <a className=\"nav-link active\" id=\"table-association-tab-md\" data-toggle=\"tab\" href=\"#table-association-md\" role=\"tab\" aria-controls=\"table-association-md\" aria-selected=\"true\">Tablular View <span className=\"badge badge-primary\"> {frequentItemsets?.length} </span></a>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item waves-effect waves-light\" onClick={() => setVisibility(false)}>\r\n                                <a className=\"nav-link\" id=\"graph-association-tab-md\" data-toggle=\"tab\" href=\"#graph-association-md\" role=\"tab\" aria-controls=\"graph-association-md\" aria-selected=\"false\">Graphical View</a>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        {visibility ?\r\n                            <div className='table-responsive '>\r\n                                <table className=\"table table-bordered table table-hover\">\r\n                                    <thead>\r\n                                        <tr className='table-active'>\r\n                                            <th scope=\"col\">S No.</th>\r\n                                            <th scope=\"col\">Association Items</th>\r\n                                            <th scope=\"col\">Order Frequency</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody id=\"myTable\">\r\n                                        {frequentItemsets.map((data, index) =>\r\n                                            <tr>\r\n                                                <th scope=\"row\">{serNo += 1}</th>\r\n                                                <td>{data.join(' -> ')}</td>\r\n                                                <td>{index * 2 + 3}</td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n\r\n                                </table>\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <ul className=\"pagination pagination-sm\">\r\n                                        <li className=\"page-item\"><button className=\"page-link\">Previous</button></li>\r\n                                        <li className=\"page-item px-3 text-muted\">3 of 100</li>\r\n                                        <li className=\"page-item\"><button className=\"page-link\">Next</button></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <FrequentChartScreen frequentItemsets={frequentItemsets} />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DetailScreen","G:\\expert system\\server\\client\\src\\screen\\auth\\signup.js",["519","520","521","522","523"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { signup } from '../../action/auth'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from 'react-router-dom';\nimport Navbar from '../admin/Navbar';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\n\nconst SignupScreen = (props) => {\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [name, setName] = useState('');\n    const [type, setType] = useState('');\n\n    const userSignup = useSelector(state => state.userSignup)\n    const { loading, success, error } = userSignup\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(signup(name, email, type, password));\n    }\n    useEffect(() => {\n        // if (!userInfo) {\n        //     props.history.push('/signin');\n        // }\n        if (success) {\n            props.history.push('/registered-user')\n            toast(\"User Created Successfully!\");\n        }\n    }, [userInfo, success])\n\n    return (\n        <div className='containerMain'>\n            <Navbar />\n            <main>\n                <form onSubmit={submitHandler} className='card text-dark bg-white shadow rounded-lg mb-3' style={{ maxWidth: '500px', margin: '20px auto' }}>\n                    <h5 className=\"card-header text-center text-dark\">Add User </h5>\n                    <div className=\"card-body\">\n                        {loading &&\n                            <div class=\"text-center\">\n                                <div class=\"spinner-border text-primary\" style={{ width: '50px', height: '50px' }} role=\"status\">\n                                    <span class=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n                        }\n                        {error && <div className=\"text-danger\">User Already Exist</div>}\n                        <div className=\"form-group\">\n                            {/* <label className=\"card-title bg-info w-100 text-white\" for=\"name\">Name:</label> */}\n                            <input type=\"text\" className=\"form-control border-top-0 border-left-0 border-right-0\" id=\"name\" placeholder=\"Enter Name\" name=\"name\" onChange={(e) => setName(e.target.value)} required />\n                        </div>\n\n                        <div className=\"form-group\">\n                            {/* <label className=\"card-title bg-info w-100 text-white\" for=\"email\">email:</label> */}\n                            <input type=\"email\" className=\"form-control border-top-0 border-left-0 border-right-0\" id=\"email\" placeholder=\"Enter Email\" name=\"Email\" onChange={(e) => setEmail(e.target.value)} required />\n                        </div>\n\n                        <div className=\"form-group\">\n                            {/* <label className=\"card-title bg-info w-100 text-white\" for=\"pwd\">Password:</label> */}\n                            <input type=\"password\" className=\"form-control border-top-0 border-left-0 border-right-0\" id=\"pwd\" placeholder=\"Enter password\" name=\"pswd\" onChange={(e) => setPassword(e.target.value)} required />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <BootstrapSwitchButton\n                                checked={true}\n                                onlabel='Sub Admin'\n                                onstyle='info'\n                                offlabel='Super Admin'\n                                offstyle='warning'\n                                style='w-100'\n                            />\n                        </div>\n\n                        <button type=\"submit\" style={{ width: '100%' }} className=\"btn btn-success shadow rounded-lg font-weight-bold\">Submit</button>\n                    </div>\n                </form>\n            </main>\n        </div>\n    )\n}\n\nexport default SignupScreen\n\n\n","G:\\expert system\\server\\client\\src\\screen\\admin\\Navbar.js",["524","525","526","527","528","529"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\nimport Cookie from 'js-cookie'\nimport ProfileImg from '../assets/profile.png'\nimport 'bootstrap/js/dist/tab';\nimport logo from '../assets/Logo.png'\nimport '../style/Navbar.css'\nimport '../style/Sidebar.css'\n\nconst Navbar = () => {\n    const history = useHistory()\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n    const [sidebarOpen, setsidebarOpen] = useState(false);\n    const openSidebar = () => {\n        setsidebarOpen(true);\n    };\n    const closeSidebar = () => {\n        setsidebarOpen(false);\n    };\n\n    const logoutHandler = () => {\n        Cookie.remove(\"userInfo\");\n        history.push('/signin')\n        window.location.reload()\n    };\n\n\n    return (\n        <>\n\n            <nav className=\"navbar_main shadow\">\n                <div className=\"nav_icon\" onClick={() => openSidebar()}>\n                    <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"navbar__left\">\n                    {/* <a href=\"#\">Subscribers</a>\n                <a href=\"#\">Video Management</a>\n                <a className=\"active_link\" href=\"#\">\n                Admin\n                </a> */}\n                </div>\n                <div className=\"navbar__right\">\n                    {/* <a href=\"#\">\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </a>\n                <a href=\"#\">\n                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\n                </a> */}\n                    <div className='chip'>\n                        <span className=\"dropdown\">\n                            <img src={ProfileImg} style={{ cursor: 'pointer' }} className=\"rounded-circle dropdown-toggle navImg\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\n                            <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                                <div style={{ width: '200px', margin: 'auto' }}>\n                                    <img src={ProfileImg} className=\"card-img-top rounded-circle\" style={{ width: '100px', display: \"block\", margin: 'auto' }} alt=\"Card image cap\" />\n                                    <h5 className=\"card-title text-center\">{userInfo?.data?.name || \"User name\"}</h5>\n                                    <div className=\"card-body text-center\">\n                                        {/* <Link to='/profile' className=\" btn btn-info shadow rounded mr-2\"> <i className=\"fas fa-user\"></i></Link> */}\n                                        <button onClick={() => { if (window.confirm('Are you sure you want to log out?')) { logoutHandler() }; }} className=\" btn btn-danger shadow rounded\"> <i className=\"fas fa-sign-out-alt\"></i></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </span>\n                        <span className=\"text-dark mx-2 h6\">{userInfo?.data?.name || \"User Name\"}</span>\n                    </div>\n                </div>\n            </nav>\n\n            <div className={sidebarOpen ? \"sidebar_responsive\" : \"\"} id=\"sidebar\">\n                <div className=\"sidebar__title\">\n                    <div className=\"sidebar__img\">\n                        {/* <Link to='/'>\n                    <img src={logo} alt=\"logo\" />\n\n                    </Link> */}\n                        <h4 className=\"title\">ADMIN</h4>\n                    </div>\n                    <i\n                        onClick={() => closeSidebar()}\n                        className=\"fa fa-times\"\n                        id=\"sidebarIcon\"\n                        aria-hidden=\"true\"\n                    ></i>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/dashboard' activeClassName='text-success'>\n                            <i className=\"fa fa-home icon\"> </i>\n                            <p>Dashboard</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/product-association' activeClassName='text-success'>\n                            <i className=\"fas fa-file-upload icon\"> </i>\n                            <p>Product Association</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/request-premium' activeClassName='text-success'>\n                            <i className=\"fas fa-crown icon\"> </i>\n                            <p>Request Premium</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/user' activeClassName='text-success'>\n                            <i className=\"fa fa-user icon\"> </i>\n                            <p>User</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/message' activeClassName='text-success'>\n                            <i className=\"fa fa-comment icon\"> </i>\n                            <p>Message</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/settings' activeClassName='text-success'>\n                            <i className=\"fa fa-cog icon\"> </i>\n                            <p>Settings</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n            </div>\n\n        </>\n    )\n}\n\nexport default Navbar;","G:\\expert system\\server\\client\\src\\screen\\admin\\Dashboard.js",["530","531","532","533"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../App.css';\r\nimport Navbar from \"./Navbar\";\r\nimport '../style/dashboard.css'\r\nimport PremiumChartScreen from \"./chart.js/PremiumChart\";\r\n\r\nconst DashboardScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n\r\n            <Navbar />\r\n            <main >\r\n\r\n                < div className=\" m-4\">\r\n\r\n                    <div className=\"row d-flex \">\r\n\r\n                        <div className=\"col-sm mt-2\">\r\n                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#ff9f00', }}>\r\n                                <div>\r\n                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart orange\">\r\n                                        <path className=\"circle-bg\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <path className=\"circle\"\r\n                                            strokeDasharray=\"30, 100\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <text x=\"18\" y=\"20.35\" className=\"percentage\"> 1%</text>\r\n                                    </svg>\r\n                                </div>\r\n                                <div className=\"svg-text\">\r\n                                    <h3 style={{ color: \"#ff9f00\" }}> 1%</h3>\r\n                                    <p className=' text-muted'>Premium Users</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm mt-2\">\r\n                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#4CC790', }}>\r\n                                <div>\r\n                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart green\">\r\n                                        <path className=\"circle-bg\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <path className=\"circle\"\r\n                                            strokeDasharray=\"30, 100\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <text x=\"18\" y=\"20.35\" className=\"percentage\"> 1%</text>\r\n                                    </svg>\r\n                                </div>\r\n                                <div className=\"svg-text\">\r\n                                    <h3 style={{ color: \"#4CC790\" }}> 1%</h3>\r\n                                    <p className=' text-muted'>Total Users</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-sm mt-2\">\r\n                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart \" style={{ borderBottomColor: '#3c9ee5' }}>\r\n                                <div>\r\n                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart blue\">\r\n                                        <path className=\"circle-bg\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <path className=\"circle\"\r\n                                            strokeDasharray=\"30, 100\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <text x=\"18\" y=\"20.35\" className=\"percentage\"> 1%</text>\r\n                                    </svg>\r\n                                </div>\r\n                                <div className=\"svg-text\">\r\n                                    <h3 style={{ color: '#3c9ee5' }}>1%</h3>\r\n                                    <p className=' text-muted'>Total Messages</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-sm mt-2\">\r\n                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#F75A5F', }}>\r\n                                <div>\r\n                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart red\">\r\n                                        <path className=\"circle-bg\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <path className=\"circle\"\r\n                                            strokeDasharray=\"30, 100\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">1%</text>\r\n                                    </svg>\r\n                                </div>\r\n                                <div className=\"svg-text\">\r\n                                    <h3 style={{ color: '#F75A5F' }}>1%</h3>\r\n                                    <p className=' text-muted'>Premium Requests</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row mt-2\">\r\n                        <div className=\"col-sm\">\r\n                            <div className=\"shadow bg-white rounded p-2\">\r\n                                <PremiumChartScreen />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DashboardScreen;","G:\\expert system\\server\\client\\src\\screen\\admin\\DetailScreen.js",[],"G:\\expert system\\server\\client\\src\\screen\\admin\\user.js",["534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551"],"import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport Navbar from './Navbar';\r\nimport '../../App.css';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\n\r\nconst AdminUserScreen = (props) => {\r\n    let allSerNo = 0\r\n    let premiumSerNo = 0\r\n    let basicSerNo = 0\r\n    let deactivateSerNo = 0\r\n    const [premium, setPremium] = useState(true)\r\n\r\n    const premiumHandler = () => {\r\n        setPremium(!premium)\r\n    }\r\n\r\n    const deactivateHandler = () => {\r\n    }\r\n\r\n    const activateHandler = () => {\r\n    }\r\n    return (\r\n        <div className='containerMain'>\r\n\r\n            <Navbar />\r\n            <main>\r\n                <div className=\"m-4\">\r\n                    <div className='cart shadow bg-white rounded p-3'>\r\n                        {/* <div>\r\n                    <h5 className=\"text-muted\">Title</h5>\r\n                </div> */}\r\n\r\n                        {/* filter */}\r\n                        <div className='row justify-content-between '>\r\n                            <form className='col-sm-4 ml-2'>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control rounded bg-light\" id=\"myInput\" placeholder=\"Search\" />\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"mr-3\">\r\n                                <button type=\"button\" onClick={() => props.history.push('/admin/add-user')} className=\"btn btn-success btn-sm\" data-toggle=\"modal\" data-target=\"#uploadFile\">\r\n                                    <i className=\"fas fa-user-plus\"> Add user </i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <section className=\"mx-2 pb-3\">\r\n\r\n                            <ul className=\"nav nav-tabs md-tabs nav-justified rounded-lg\" id=\"myTabMD\" role=\"tablist\">\r\n\r\n                                <li className=\"nav-item waves-effect waves-light\">\r\n                                    <a className=\"nav-link active\" id=\"all-tab-md\" data-toggle=\"tab\" href=\"#all-md\" role=\"tab\" aria-controls=\"all-md\" aria-selected=\"true\">All Users <span className=\"badge badge-primary\"> 3</span></a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item waves-effect waves-light\">\r\n                                    <a className=\"nav-link\" id=\"premium-tab-md\" data-toggle=\"tab\" href=\"#premium-md\" role=\"tab\" aria-controls=\"premium-md\" aria-selected=\"false\">Premium Users <span className=\"badge badge-primary\"> 2</span></a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item waves-effect waves-light\">\r\n                                    <a className=\"nav-link\" id=\"basic-tab-md\" data-toggle=\"tab\" href=\"#basic-md\" role=\"tab\" aria-controls=\"basic-md\" aria-selected=\"false\">Basic Users <span className=\"badge badge-primary\"> 2</span></a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item waves-effect waves-light\">\r\n                                    <a className=\"nav-link\" id=\"deactivate-tab-md\" data-toggle=\"tab\" href=\"#deactivate-md\" role=\"tab\" aria-controls=\"deactivate-md\" aria-selected=\"false\">Deactivate Users <span className=\"badge badge-primary\"> 2</span></a>\r\n                                </li>\r\n                            </ul>\r\n\r\n                            <div className=\"tab-content card pt-2\" id=\"myTabContentMD\">\r\n\r\n                                <div className=\"tab-pane fade show active\" id=\"all-md\" role=\"tabpanel\" aria-labelledby=\"all-tab-md\">\r\n                                    <div className='table-responsive '>\r\n                                        <table className=\"table table-bordered table table-hover\">\r\n                                            <thead>\r\n                                                <tr className='table-active'>\r\n                                                    <th scope=\"col\">S No.</th>\r\n                                                    <th scope=\"col\">Name</th>\r\n                                                    <th scope=\"col\">Email</th>\r\n                                                    <th scope=\"col\">Type</th>\r\n                                                    <th scope=\"col\">Created At</th>\r\n                                                    <th scope=\"col\">Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody id=\"myTable\">\r\n                                                <tr>\r\n                                                    <th scope=\"row\">{allSerNo += 1}</th>\r\n                                                    <td>Khalid</td>\r\n                                                    <td>KhalidMhd@gmail.com</td>\r\n                                                    <td className='text-success'>Premium</td>\r\n                                                    <td>12-9-2020</td>\r\n                                                    <td >\r\n                                                        <span onClick={() => { if (window.confirm('Change user account to premium?')) { premiumHandler() } }}>\r\n\r\n                                                            {premium ?\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={true}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                                :\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={false}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                            }\r\n                                                        </span>\r\n                                                        <span className='fa fa-user-minus mx-2 fa-lg text-danger' style={{cursor:\"pointer\"}} onClick={() => { if (window.confirm('Are you sure to deactivate this user?')) { deactivateHandler() } }}></span>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th scope=\"row\">{allSerNo += 1}</th>\r\n                                                    <td>Noor</td>\r\n                                                    <td>NoorJayaz@gmail.com</td>\r\n                                                    <td className='text-danger'>Basic</td>\r\n                                                    <td>12-9-2020</td>\r\n                                                    <td >\r\n                                                        <span onClick={() => { if (window.confirm('Change user account to premium?')) { premiumHandler() } }}>\r\n\r\n                                                            {false ?\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={true}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                                :\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={false}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                            }\r\n                                                        </span>\r\n                                                        <span className='fa fa-user-minus mx-2 fa-lg text-danger' style={{cursor:\"pointer\"}} onClick={() => { if (window.confirm('Are you sure to deactivate this user?')) { deactivateHandler() } }}></span>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th scope=\"row\">{allSerNo += 1}</th>\r\n                                                    <td>Hamad</td>\r\n                                                    <td>hamad@gmail.com</td>\r\n                                                    <td className='text-danger'>Basic</td>\r\n                                                    <td>12-12-2020</td>\r\n                                                    <td >\r\n                                                        <span onClick={() => { if (window.confirm('Change user account to premium?')) { premiumHandler() } }}>\r\n\r\n                                                            {false ?\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={true}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                                :\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={false}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                            }\r\n                                                        </span>\r\n                                                        <span className='fa fa-user-minus mx-2 fa-lg text-danger' style={{cursor:\"pointer\"}} onClick={() => { if (window.confirm('Are you sure to deactivate this user?')) { deactivateHandler() } }}></span>\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                            </tbody>\r\n\r\n                                        </table>\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <ul className=\"pagination pagination-sm\">\r\n                                                <li className=\"page-item\"><button className=\"page-link\">Previous</button></li>\r\n                                                <li className=\"page-item px-3 text-muted\">3 of 100</li>\r\n                                                <li className=\"page-item\"><button className=\"page-link\">Next</button></li>\r\n                                            </ul>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"tab-pane fade show\" id=\"premium-md\" role=\"tabpanel\" aria-labelledby=\"premium-tab-md\">\r\n                                    <div className='table-responsive '>\r\n                                        <table className=\"table table-bordered table table-hover\">\r\n                                            <thead>\r\n                                                <tr className='table-active'>\r\n                                                    <th scope=\"col\">S No.</th>\r\n                                                    <th scope=\"col\">Name</th>\r\n                                                    <th scope=\"col\">Email</th>\r\n                                                    <th scope=\"col\">Type</th>\r\n                                                    <th scope=\"col\">Created At</th>\r\n                                                    <th scope=\"col\">Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody id=\"myTable\">\r\n                                                <tr>\r\n                                                    <th scope=\"row\">{premiumSerNo += 1}</th>\r\n                                                    <td>Khalid</td>\r\n                                                    <td>KhalidMhd@gmail.com</td>\r\n                                                    <td className='text-success'>Premium</td>\r\n                                                    <td>12-9-2020</td>\r\n                                                    <td >\r\n                                                        <span onClick={() => { if (window.confirm('Change user account to premium?')) { premiumHandler() } }}>\r\n\r\n                                                            {premium ?\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={true}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                                :\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={false}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                            }\r\n                                                        </span>\r\n                                                        <span className='fa fa-user-minus mx-2 fa-lg text-danger' style={{cursor:\"pointer\"}} onClick={() => { if (window.confirm('Are you sure to deactivate this user?')) { deactivateHandler() } }}></span>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th scope=\"row\">{premiumSerNo += 1}</th>\r\n                                                    <td>Hamad</td>\r\n                                                    <td>hamad@gmail.com</td>\r\n                                                    <td className='text-success'>Premium</td>\r\n                                                    <td>12-12-2020</td>\r\n                                                    <td >\r\n                                                        <span onClick={() => { if (window.confirm('Change user account to premium?')) { premiumHandler() } }}>\r\n\r\n                                                            {true ?\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={true}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                                :\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={false}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                            }\r\n                                                        </span>\r\n                                                        <span className='fa fa-user-minus mx-2 fa-lg text-danger' style={{cursor:\"pointer\"}} onClick={() => { if (window.confirm('Are you sure to deactivate this user?')) { deactivateHandler() } }}></span>\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                            </tbody>\r\n\r\n                                        </table>\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <ul className=\"pagination pagination-sm\">\r\n                                                <li className=\"page-item\"><button className=\"page-link\">Previous</button></li>\r\n                                                <li className=\"page-item px-3 text-muted\">3 of 100</li>\r\n                                                <li className=\"page-item\"><button className=\"page-link\">Next</button></li>\r\n                                            </ul>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"tab-pane fade show\" id=\"basic-md\" role=\"tabpanel\" aria-labelledby=\"basic-tab-md\">\r\n                                    <div className='table-responsive '>\r\n                                        <table className=\"table table-bordered table table-hover\">\r\n                                            <thead>\r\n                                                <tr className='table-active'>\r\n                                                    <th scope=\"col\">S No.</th>\r\n                                                    <th scope=\"col\">Name</th>\r\n                                                    <th scope=\"col\">Email</th>\r\n                                                    <th scope=\"col\">Type</th>\r\n                                                    <th scope=\"col\">Created At</th>\r\n                                                    <th scope=\"col\">Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody id=\"myTable\">\r\n                                                <tr>\r\n                                                    <th scope=\"row\">{basicSerNo += 1}</th>\r\n                                                    <td>Khalid</td>\r\n                                                    <td>KhalidMhd@gmail.com</td>\r\n                                                    <td className='text-danger'>Basic</td>\r\n                                                    <td>12-9-2020</td>\r\n                                                    <td >\r\n                                                        <span onClick={() => { if (window.confirm('Change user account to premium?')) { premiumHandler() } }}>\r\n\r\n                                                            {false ?\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={true}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                                :\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={false}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                            }\r\n                                                        </span>\r\n                                                        <span className='fa fa-user-minus mx-2 fa-lg text-danger' style={{cursor:\"pointer\"}} onClick={() => { if (window.confirm('Are you sure to deactivate this user?')) { deactivateHandler() } }}></span>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th scope=\"row\">{basicSerNo += 1}</th>\r\n                                                    <td>Noor</td>\r\n                                                    <td>NoorJayaz@gmail.com</td>\r\n                                                    <td className='text-danger'>Basic</td>\r\n                                                    <td>12-9-2020</td>\r\n                                                    <td >\r\n                                                        <span onClick={() => { if (window.confirm('Change user account to premium?')) { premiumHandler() } }}>\r\n\r\n                                                            {false ?\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={true}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                                :\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={false}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                            }\r\n                                                        </span>\r\n                                                        <span className='fa fa-user-minus mx-2 fa-lg text-danger' style={{cursor:\"pointer\"}} onClick={() => { if (window.confirm('Are you sure to deactivate this user?')) { deactivateHandler() } }}></span>\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                            </tbody>\r\n\r\n                                        </table>\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <ul className=\"pagination pagination-sm\">\r\n                                                <li className=\"page-item\"><button className=\"page-link\">Previous</button></li>\r\n                                                <li className=\"page-item px-3 text-muted\">3 of 100</li>\r\n                                                <li className=\"page-item\"><button className=\"page-link\">Next</button></li>\r\n                                            </ul>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"tab-pane fade show\" id=\"deactivate-md\" role=\"tabpanel\" aria-labelledby=\"deactivate-tab-md\">\r\n                                    <div className='table-responsive '>\r\n                                        <table className=\"table table-bordered table table-hover\">\r\n                                            <thead>\r\n                                                <tr className='table-active'>\r\n                                                    <th scope=\"col\">S No.</th>\r\n                                                    <th scope=\"col\">Name</th>\r\n                                                    <th scope=\"col\">Email</th>\r\n                                                    <th scope=\"col\">Type</th>\r\n                                                    <th scope=\"col\">Created At</th>\r\n                                                    <th scope=\"col\">Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody id=\"myTable\">\r\n                                                <tr>\r\n                                                    <th scope=\"row\">{deactivateSerNo += 1}</th>\r\n                                                    <td>Khalid</td>\r\n                                                    <td>KhalidMhd@gmail.com</td>\r\n                                                    <td className='text-danger'>Basic</td>\r\n                                                    <td>12-9-2020</td>\r\n                                                    <td >\r\n                                                        <span onClick={() => { if (window.confirm('Change user account to premium?')) { premiumHandler() } }}>\r\n\r\n                                                            {false ?\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={true}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                                :\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={false}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                            }\r\n                                                        </span>\r\n                                                        <span className='fa fa-user-plus mx-2 fa-lg text-success' style={{cursor:\"pointer\"}} onClick={() => { if (window.confirm('Are you sure to activate this user?')) { activateHandler() } }}></span>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th scope=\"row\">{basicSerNo += 1}</th>\r\n                                                    <td>Noor</td>\r\n                                                    <td>NoorJayaz@gmail.com</td>\r\n                                                    <td className='text-danger'>Basic</td>\r\n                                                    <td>12-9-2020</td>\r\n                                                    <td >\r\n                                                        <span onClick={() => { if (window.confirm('Change user account to premium?')) { premiumHandler() } }}>\r\n\r\n                                                            {false ?\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={true}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                                :\r\n                                                                <BootstrapSwitchButton\r\n                                                                    checked={false}\r\n                                                                    disabled={true}\r\n                                                                    onlabel='Premium User'\r\n                                                                    onstyle='success'\r\n                                                                    offlabel='Basic User'\r\n                                                                    offstyle='danger'\r\n                                                                    style='w-75'\r\n                                                                />\r\n                                                            }\r\n                                                        </span>\r\n                                                        <span className='fa fa-user-plus mx-2 fa-lg text-success' style={{cursor:\"pointer\"}} onClick={() => { if (window.confirm('Are you sure to activate this user?')) { activateHandler() } }}></span>\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                            </tbody>\r\n\r\n                                        </table>\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <ul className=\"pagination pagination-sm\">\r\n                                                <li className=\"page-item\"><button className=\"page-link\">Previous</button></li>\r\n                                                <li className=\"page-item px-3 text-muted\">3 of 100</li>\r\n                                                <li className=\"page-item\"><button className=\"page-link\">Next</button></li>\r\n                                            </ul>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminUserScreen","G:\\expert system\\server\\client\\src\\screen\\admin\\Message.js",[],"G:\\expert system\\server\\client\\src\\screen\\admin\\Setting.js",["552","553","554","555","556"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../App.css';\r\nimport Navbar from \"./Navbar\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport uplaodImg from '../assets/setting.png'\r\n\r\nconst SettingScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [matchPassword, setMatchPassword] = useState(\"\")\r\n    const [updatePassword, setUpdatePassword] = useState(\"\")\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n            <Navbar />\r\n            <main >\r\n\r\n                <div className=\" m-4\">\r\n                    <ToastContainer />\r\n                    <div className='cart shadow bg-white rounded'>\r\n                        <div className='border border-top-0 border-left-0 border-right-0 '>\r\n                            <h5 className=\"text-muted text-center pt-4 pb-4 pl-4\">Change Password</h5>\r\n                        </div>\r\n\r\n                        <div className=\"row justify-content-around my-3\" >\r\n                            <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                                <img width=\"40%\" src={uplaodImg} />\r\n                            </div>\r\n\r\n                            <form className='col-sm-6 py-3'>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setCurrentPassword(e.target.value)} value={currentPassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Current Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group py-3\">\r\n                                    <input type=\"password\" onChange={(e) => setUpdatePassword(e.target.value)} value={updatePassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setMatchPassword(e.target.value)} value={matchPassword} className={matchPassword !== updatePassword ? \"form-control is-invalid\" : \"form-control\"} id=\"validationServer03\" placeholder=\"Confirm New Password\" required />\r\n                                    {matchPassword !== updatePassword &&\r\n                                        <div className=\"invalid-feedback\">\r\n                                            Password not match.\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className='pt-4 text-center'>\r\n                                    <button type=\"submit\" className=\"btn btn-success mr-3\" style={{ width: '100px' }} disabled={matchPassword !== updatePassword}>Save</button>\r\n                                    <button className=\"btn btn-secondary\" onClick={() => props.history.push('/admin/dashboard')} style={{ width: '100px' }}>Cancel</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SettingScreen;","G:\\expert system\\server\\client\\src\\screen\\Signin.js",["557","558","559","560","561"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport $ from 'jquery'\r\nimport 'jquery-validation'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport { signin } from '../action/auth'\r\nimport axios from 'axios'\r\n\r\nconst ClientSigninScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { loading, success, userInfo, error } = userSignin;\r\n\r\n    useEffect(() => {\r\n            userInfo ? window.location.href = \"/\" : props.history.push('/signin')\r\n    }, [userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin(email, password))\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center pb-2 \">Login</h4>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {success && <div className=\"text-primary text-center h6\">{userInfo.message}</div>}\r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" onChange={(e) => setEmail(e.target.value)} type=\"email\" name=\"email\" placeholder=\"Email\" required />\r\n                            </div>\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} type=\"password\" name=\"password\" placeholder=\"Password\" required />\r\n                                <div className=\"float-right\">\r\n                                    <Link to=\"/reset-password\" >Forgot password?</Link>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"text-center pb-4 pt-4\">\r\n                                <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                Not a Member? <Link to=\"/signup\" >Signup</Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientSigninScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\signup.js",["562","563","564"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport { signup } from '../action/auth'\r\nconst ClientSignupScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const userSignup = useSelector(state => state.userSignup);\r\n    const { loading, success, userInfo, error } = userSignup;\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo: saveUserInfo } = userSignin;\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signup(name, email, password))\r\n    }\r\n\r\n    useEffect(() => {\r\n        saveUserInfo ? props.history.push('/') : props.history.push('/signup')\r\n    }, [saveUserInfo])\r\n\r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center pb-4 \">Signup</h4>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            {success && <div className=\"text-primary text-center h6\">{userInfo.message}</div>}\r\n\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" type=\"text\" onChange={(e) => setName(e.target.value)} name=\"name\" placeholder=\"Name\" required />\r\n                            </div>\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" type=\"email\" onChange={(e) => setEmail(e.target.value)} name=\"email\" placeholder=\"Email\" required />\r\n                            </div>\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" type=\"password\" onChange={(e) => setPassword(e.target.value)} name=\"password\" placeholder=\"Password\" required />\r\n                            </div>\r\n\r\n                            <div className=\"text-center pb-4\">\r\n                                <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                have an Account? <Link to=\"/signin\" >Login</Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientSignupScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\forgotPassord.js",["565","566","567","568","569","570","571"],"import React, { useDebugValue, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport $ from 'jquery'\r\nimport 'jquery-validation'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport e from 'cors'\r\nimport { forgotPassword } from '../action/auth'\r\nconst ClientForgotPasswordScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    const forgotPasswordRed = useSelector(state => state.forgotPasswordRed);\r\n    const { loading, forgotPass, error, success } = forgotPasswordRed\r\n    \r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo} = userSignin;\r\n    \r\n    useEffect(() => {\r\n        userInfo ? props.history.push('/') : props.history.push('/reset-password')\r\n    }, [userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(forgotPassword(email))\r\n    }\r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center\">Reset Password</h4>\r\n                            <p className='text-center'>Enter your email address, we will send you instructions to reset your password </p>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            {success && <div className=\"text-primary text-center h6\">{forgotPass.message}</div>}\r\n\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" type=\"email\" onChange={(e) => setEmail(e.target.value)} name=\"email\" placeholder=\"Email\" required />\r\n                            </div>\r\n\r\n                            <div className=\"text-center pb-4\">\r\n                                <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ClientForgotPasswordScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\newPassword.js",["572","573","574","575"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport $ from 'jquery'\r\nimport 'jquery-validation'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport { newPassword } from '../action/auth'\r\nconst ClientNewPasswordScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const token = props.match.params.token\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const newPasswordReduser = useSelector(state => state.newPasswordRed)\r\n    const { loading, error, success, newPass } = newPasswordReduser\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(newPassword(password, token))\r\n    }\r\n    \r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center pb-4 \">New Password</h4>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            {success ?\r\n                                <>\r\n                                    <div className=\"text-primary text-center h6\">{newPass?.message}</div>\r\n                                    <div className='text-center'>\r\n                                        <Link to='/signin' className=\"btn btn-primary btn-sm\" role=\"button\">Continue to login</Link>\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <div className=\"form-group mb-4\">\r\n                                        <input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} type=\"password\" name=\"password\" placeholder=\"New Password\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"text-center pb-4\">\r\n                                        <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n\r\n\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientNewPasswordScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\Profile.js",["576","577","578","579"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport './../App.css';\r\nimport Navbar from \"./Navbar\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport uplaodImg from './assets/setting.png'\r\nimport { changePassword } from \"../action/auth\";\r\n\r\nconst ProfileScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [matchPassword, setMatchPassword] = useState(\"\")\r\n    const [updatePassword, setUpdatePassword] = useState(\"\")\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo } = userSignin;\r\n\r\n    const changePasswordRed = useSelector(state => state.changePasswordRed);\r\n    const {loading, changePass, success, error } = changePasswordRed;\r\n\r\n    const id = userInfo?.user?._id\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(changePassword(id,currentPassword, updatePassword))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <main >\r\n\r\n                <div className=\" m-4\">\r\n                    <div className='cart shadow bg-white rounded'>\r\n                        <div className='border border-top-0 border-left-0 border-right-0 '>\r\n                            <h5 className=\"text-muted text-center pt-4 pb-4 pl-4\">Change Password</h5>\r\n                        </div>\r\n\r\n                        <div className=\"row justify-content-around my-3\" >\r\n                            <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                                <img width=\"40%\" src={uplaodImg} />\r\n                            </div>\r\n\r\n                            <form onSubmit={submitHandler} className='col-sm-6 py-3'>\r\n                                {loading &&\r\n                                    <div class=\"text-center\">\r\n                                        <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                            <span class=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                                {success && <div className=\"text-primary text-center h6\">{changePass?.message}</div>}\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setCurrentPassword(e.target.value)} value={currentPassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Current Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group py-3\">\r\n                                    <input type=\"password\" onChange={(e) => setUpdatePassword(e.target.value)} value={updatePassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setMatchPassword(e.target.value)} value={matchPassword} className={matchPassword !== updatePassword ? \"form-control is-invalid\" : \"form-control\"} id=\"validationServer03\" placeholder=\"Confirm New Password\" required />\r\n                                    {matchPassword !== updatePassword &&\r\n                                        <div className=\"invalid-feedback\">\r\n                                            Password not match.\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className='pt-4 text-center'>\r\n                                    <button type=\"submit\" className=\"btn btn-success mr-3\" style={{ width: '100px' }} disabled={matchPassword !== updatePassword}>Save</button>\r\n                                    <button className=\"btn btn-secondary\" onClick={() => props.history.push('/')} style={{ width: '100px' }}>Cancel</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileScreen;","G:\\expert system\\server\\client\\src\\screen\\admin\\UplaodFile.js",["580","581","582","583","584","585","586","587","588"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { signup } from '../../action/auth'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Navbar from '../admin/Navbar';\r\nimport uplaodImg from '../assets/upload.png'\r\n\r\nconst UplaodFileScreen = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = () => {\r\n        props.history.push('/admin/detail')\r\n    }\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n            <Navbar />\r\n            <main>\r\n                <div className=\"m-4\">\r\n                    <div className='cart shadow bg-white rounded p-3 '>\r\n                        <div className=\"row justify-content-around my-3\">\r\n                            <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                                <img width=\"40%\" src={uplaodImg} />\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <h3 className='text-muted text-center py-3'>Uplaod File </h3>\r\n\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <select className=\"form-control border-top-0 border-left-0 border-right-0 bg-light rounded\" id=\"exampleFormControlSelect1\" required>\r\n                                            <option value=\"\" disabled selected>Select File Type</option>\r\n                                            <option value=\"\">JSON</option>\r\n                                            <option value=\"\">Excel</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group custom-file mb-3\">\r\n                                        <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" accept=\".pdf\" />\r\n                                        <label className=\"form-control rounded border-top-0 border-left-0 border-right-0 custom-file-label bg-light rounded\" for=\"customFile\">Choose file</label>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"text-center\">\r\n                                        <button onClick={submitHandler} type=\"button\" className=\"btn btn-success\">\r\n                                            <i className=\"fas fa-file\"> Uplaod File </i>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UplaodFileScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\PremiumChart.js",["589","590","591","592","593","594"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../../App.css';\r\nimport Chart from \"react-google-charts\";\r\n\r\nconst PremiumChartScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [chartSelect, setcChartSelect] = useState(1)\r\n    var weeklyTitle = null\r\n\r\n    return (\r\n        <> \r\n\r\n            <div className='d-flex justify-content-between'>\r\n                <div className=''>\r\n                    <h3 className='text-center text-muted '>User Analytics</h3>\r\n                </div>\r\n\r\n                <div className=\" d-flex justify-content-end mt-2\">\r\n\r\n                    <button className=\"btn btn-primary mx-1 mb-1\" >Weekly</button>\r\n                    <button className=\"btn btn-success mx-1 mb-1\" >Last 30 dayes</button>\r\n                    <button className=\"btn btn-warning mx-1 mb-1\" >Yearly</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <Chart\r\n                    // width={'500px'}\r\n                    // height={'300px'}\r\n\r\n                    chartType=\"ComboChart\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={[\r\n                        ['Date', 'Basic', 'Premium',],\r\n                        ['19-12-2021', 100, 50],\r\n                        ['19-12-2021', 70, 60],\r\n                        ['19-12-2021', 60, 50],\r\n                        ['19-12-2021', 30, 20],\r\n                        ['19-12-2021', 130, 40],\r\n                        ['19-12-2021', 30, 40],\r\n                    ]}\r\n                    options={{\r\n                        // colors: ['#FB7A21'],\r\n                        // backgroundColor: '#2F4F4F',\r\n                        // chart: {\r\n                        //     title: 'Company Performance',\r\n                        //     subtitle: 'Sales, Expenses, and Profit: 2014-2017',\r\n                        // },\r\n                        legend: { position: 'none' },\r\n                        // title: \"weeklyTitle\",\r\n                        titleTextStyle: { color: '#FFF' },\r\n                        // vAxis: { title: 'Percentage', titleTextStyle: { color: '#FFF' }, textStyle: { color: '#FFF' } },\r\n                        // hAxis: { title: 'Month', fontSize: 28, titleTextStyle: { color: '#FFF' }, textStyle: { color: '#FFF' } },\r\n                        seriesType: 'bars',\r\n                        series: { 5: { type: 'line' } },\r\n                    }}\r\n                    rootProps={{ 'data-testid': '1' }}\r\n                />\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default PremiumChartScreen;","G:\\expert system\\server\\client\\src\\screen\\admin\\RequestPremium.js",["595","596","597","598","599","600","601"],"import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport Navbar from './Navbar';\r\nimport '../../App.css';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\n\r\nconst RequestPremiumScreen = (props) => {\r\n    let serNo = 0\r\n\r\n    const [premium, setPremium] = useState(false)\r\n\r\n    const premiumHandler = () => {\r\n        setPremium(!premium)\r\n    }\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n\r\n            <Navbar />\r\n            <main>\r\n\r\n                <div className=\"m-4\">\r\n                    <div className='cart shadow bg-white rounded p-3'>\r\n                        {/* <div>\r\n                    <h5 className=\"text-muted\">Title</h5>\r\n                </div> */}\r\n\r\n                        {/* filter */}\r\n                        <div className='row justify-content-between'>\r\n                            <form className='col-sm-4'>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control rounded bg-light\" id=\"myInput\" placeholder=\"Search\" />\r\n                                </div>\r\n                            </form>\r\n                            {/* <div className=\"mr-3\">\r\n                                <button type=\"button\" onClick={() => props.history.push('/admin/add-user')} className=\"btn btn-success btn-sm\" data-toggle=\"modal\" data-target=\"#uploadFile\">\r\n                                    <i className=\"fas fa-user-plus\"> Add user </i>\r\n                                </button>\r\n                            </div> */}\r\n                        </div>\r\n\r\n                        <div className='table-responsive '>\r\n                            <table className=\"table table-bordered table table-hover\">\r\n                                <thead>\r\n                                    <tr className='table-active'>\r\n                                        <th scope=\"col\">S No.</th>\r\n                                        <th scope=\"col\">Name</th>\r\n                                        <th scope=\"col\">Email</th>\r\n                                        <th scope=\"col\">Created At</th>\r\n                                        <th scope=\"col\">Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody id=\"myTable\">\r\n                                    <tr>\r\n                                        <th scope=\"row\">{serNo += 1}</th>\r\n                                        <td>Khalid</td>\r\n                                        <td>KhalidMhd@gmail.com</td>\r\n                                        <td>12-9-2020</td>\r\n                                        <td onClick={() => { if (window.confirm('Change user account to premium?')) { premiumHandler() } }}>\r\n                                            {premium ?\r\n                                                <BootstrapSwitchButton\r\n                                                    checked={true}\r\n                                                    disabled={true}\r\n                                                    onlabel='Premium User'\r\n                                                    onstyle='success'\r\n                                                    offlabel='Basic User'\r\n                                                    offstyle='danger'\r\n                                                    style='w-100'\r\n                                                />\r\n                                                :\r\n                                                <BootstrapSwitchButton\r\n                                                    checked={false}\r\n                                                    disabled={true}\r\n                                                    onlabel='Premium User'\r\n                                                    onstyle='success'\r\n                                                    offlabel='Basic User'\r\n                                                    offstyle='danger'\r\n                                                    style='w-100'\r\n                                                />\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th scope=\"row\">{serNo += 1}</th>\r\n                                        <td>Noor</td>\r\n                                        <td>NoorJayaz@gmail.com</td>\r\n                                        <td>12-9-2020</td>\r\n                                        <td onClick={() => { if (window.confirm('Change user account to premium?')) { premiumHandler() } }}>\r\n                                            {false ?\r\n                                                <BootstrapSwitchButton\r\n                                                    checked={true}\r\n                                                    disabled={true}\r\n                                                    onlabel='Premium User'\r\n                                                    onstyle='success'\r\n                                                    offlabel='Basic User'\r\n                                                    offstyle='danger'\r\n                                                    style='w-100'\r\n                                                />\r\n                                                :\r\n                                                <BootstrapSwitchButton\r\n                                                    checked={false}\r\n                                                    disabled={true}\r\n                                                    onlabel='Premium User'\r\n                                                    onstyle='success'\r\n                                                    offlabel='Basic User'\r\n                                                    offstyle='danger'\r\n                                                    style='w-100'\r\n                                                />\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th scope=\"row\">{serNo += 1}</th>\r\n                                        <td>Hamad</td>\r\n                                        <td>hamad@gmail.com</td>\r\n                                        <td>12-12-2020</td>\r\n                                        <td onClick={() => { if (window.confirm('Change user account to premium?')) { premiumHandler() } }}>\r\n                                            {false ?\r\n                                                <BootstrapSwitchButton\r\n                                                    checked={true}\r\n                                                    disabled={true}\r\n                                                    onlabel='Premium User'\r\n                                                    onstyle='success'\r\n                                                    offlabel='Basic User'\r\n                                                    offstyle='danger'\r\n                                                    style='w-100'\r\n                                                />\r\n                                                :\r\n                                                <BootstrapSwitchButton\r\n                                                    checked={false}\r\n                                                    disabled={true}\r\n                                                    onlabel='Premium User'\r\n                                                    onstyle='success'\r\n                                                    offlabel='Basic User'\r\n                                                    offstyle='danger'\r\n                                                    style='w-100'\r\n                                                />\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestPremiumScreen","G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\frequectChart.js",["602","603","604","605"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../../App.css';\r\nimport Chart from \"react-google-charts\";\r\n\r\nconst FrequentChartScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    console.log(props);\r\n    const getProductAssociation = () => {\r\n        var data = []\r\n        data.push(['Item', \"Frequency\"])\r\n\r\n        props?.frequentItemsets.map(item =>\r\n            data.push([item.toString(), item?.length])\r\n        )\r\n        return data\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Chart\r\n                // width={'500px'}\r\n                height={'300px'}\r\n                chartType=\"ComboChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={\r\n                    getProductAssociation()\r\n                }\r\n                options={{\r\n                    // colors: ['#FB7A21'],\r\n                    // backgroundColor: '#2F4F4F',\r\n                    chart: {\r\n                        title: 'Frequent Items',\r\n                        subtitle: 'Frequent Items and Frequency',\r\n                    },\r\n                    legend: { position: 'none' },\r\n                    title: \"Maximium Frequent Items\",\r\n                    titleTextStyle: { color: '#3366CC' },\r\n                    vAxis: { title: 'Frequency', },\r\n                    hAxis: { title: 'Frequent Items', fontSize: 28, },\r\n                    seriesType: 'bars',\r\n                    series: { 5: { type: 'line' } },\r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default FrequentChartScreen;","G:\\expert system\\server\\client\\src\\screen\\verified.js",["606","607","608"],"import React, { useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport contactImg from './assets/contact.png'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { accountConformation } from '../action/auth';\r\nconst VerifiedScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const token = props.match.params.token\r\n    const accountConformationRed = useSelector(state => state.accountConformationRed);\r\n    const { loading, success, accConfirm, error } = accountConformationRed;\r\n    \r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(accountConformation(token))\r\n        }\r\n\r\n    }, [token])\r\n\r\n    return (\r\n        <>\r\n            {loading?\r\n                <div class=\"d-flex justify-content-center align-items-center vh-100\">\r\n                    <div class=\"spinner-border text-primary \" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>:\r\n            \r\n            <div className=\"jumbotron text-center\">\r\n                <h1 className=\"display-3\">Thank You!</h1>\r\n                {error && <p className=\"lead text-danger\"><strong>{error.message}</strong></p>}\r\n                {success && <p className=\"lead\"><strong>{accConfirm.message}</strong></p>}\r\n\r\n                {/* <hr> */}\r\n                {/* <p>\r\n                Having trouble? <a href=\"\">Contact us</a>\r\n                </p> \r\n                */}\r\n                <p className=\"lead\">\r\n                    <Link to='/signin' className=\"btn btn-primary btn-sm\" role=\"button\">Continue to login</Link>\r\n                </p>\r\n            </div>\r\n}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VerifiedScreen","G:\\expert system\\server\\client\\src\\action\\premium.js",[],"G:\\expert system\\server\\client\\src\\contant\\premium.js",[],"G:\\expert system\\server\\client\\src\\reducer\\premium.js",["609","610","611"],"G:\\expert system\\server\\client\\src\\reducer\\message.js",[],"G:\\expert system\\server\\client\\src\\contant\\message.js",[],"G:\\expert system\\server\\client\\src\\action\\message.js",[],"G:\\expert system\\server\\client\\src\\reducer\\user.js",[],"G:\\expert system\\server\\client\\src\\contant\\user.js",[],"G:\\expert system\\server\\client\\src\\action\\user.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\auth.js",[],"G:\\expert system\\server\\client\\src\\contant\\admin\\auth.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\message.js",[],"G:\\expert system\\server\\client\\src\\contant\\admin\\message.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\premium.js",[],"G:\\expert system\\server\\client\\src\\contant\\admin\\premium.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\user.js",[],"G:\\expert system\\server\\client\\src\\contant\\admin\\user.js",[],{"ruleId":"612","replacedBy":"613"},{"ruleId":"614","replacedBy":"615"},{"ruleId":"616","severity":1,"message":"617","line":2,"column":10,"nodeType":"618","messageId":"619","endLine":2,"endColumn":23},{"ruleId":"616","severity":1,"message":"620","line":2,"column":32,"nodeType":"618","messageId":"619","endLine":2,"endColumn":38},{"ruleId":"616","severity":1,"message":"621","line":2,"column":40,"nodeType":"618","messageId":"619","endLine":2,"endColumn":46},{"ruleId":"616","severity":1,"message":"622","line":40,"column":22,"nodeType":"618","messageId":"619","endLine":40,"endColumn":35},{"ruleId":"616","severity":1,"message":"623","line":40,"column":44,"nodeType":"618","messageId":"619","endLine":40,"endColumn":55},{"ruleId":"624","severity":1,"message":"625","line":57,"column":8,"nodeType":"626","endLine":57,"endColumn":18,"suggestions":"627"},{"ruleId":"628","severity":1,"message":"629","line":158,"column":37,"nodeType":"630","messageId":"631","endLine":158,"endColumn":46},{"ruleId":"616","severity":1,"message":"622","line":30,"column":22,"nodeType":"618","messageId":"619","endLine":30,"endColumn":35},{"ruleId":"616","severity":1,"message":"623","line":30,"column":44,"nodeType":"618","messageId":"619","endLine":30,"endColumn":55},{"ruleId":"624","severity":1,"message":"625","line":41,"column":8,"nodeType":"626","endLine":41,"endColumn":18,"suggestions":"632"},{"ruleId":"628","severity":1,"message":"629","line":102,"column":37,"nodeType":"630","messageId":"631","endLine":102,"endColumn":46},{"ruleId":"616","severity":1,"message":"633","line":1,"column":28,"nodeType":"618","messageId":"619","endLine":1,"endColumn":36},{"ruleId":"616","severity":1,"message":"634","line":12,"column":8,"nodeType":"618","messageId":"619","endLine":12,"endColumn":21},{"ruleId":"616","severity":1,"message":"635","line":24,"column":32,"nodeType":"618","messageId":"619","endLine":24,"endColumn":47},{"ruleId":"616","severity":1,"message":"636","line":24,"column":56,"nodeType":"618","messageId":"619","endLine":24,"endColumn":69},{"ruleId":"616","severity":1,"message":"637","line":27,"column":36,"nodeType":"618","messageId":"619","endLine":27,"endColumn":55},{"ruleId":"616","severity":1,"message":"638","line":27,"column":64,"nodeType":"618","messageId":"619","endLine":27,"endColumn":81},{"ruleId":"616","severity":1,"message":"639","line":30,"column":32,"nodeType":"618","messageId":"619","endLine":30,"endColumn":47},{"ruleId":"616","severity":1,"message":"640","line":30,"column":56,"nodeType":"618","messageId":"619","endLine":30,"endColumn":69},{"ruleId":"624","severity":1,"message":"625","line":38,"column":8,"nodeType":"626","endLine":38,"endColumn":18,"suggestions":"641"},{"ruleId":"616","severity":1,"message":"622","line":30,"column":22,"nodeType":"618","messageId":"619","endLine":30,"endColumn":35},{"ruleId":"616","severity":1,"message":"623","line":30,"column":44,"nodeType":"618","messageId":"619","endLine":30,"endColumn":55},{"ruleId":"624","severity":1,"message":"625","line":41,"column":8,"nodeType":"626","endLine":41,"endColumn":18,"suggestions":"642"},{"ruleId":"628","severity":1,"message":"629","line":102,"column":37,"nodeType":"630","messageId":"631","endLine":102,"endColumn":46},{"ruleId":"624","severity":1,"message":"643","line":26,"column":8,"nodeType":"626","endLine":26,"endColumn":18,"suggestions":"644"},{"ruleId":"616","severity":1,"message":"622","line":29,"column":22,"nodeType":"618","messageId":"619","endLine":29,"endColumn":35},{"ruleId":"616","severity":1,"message":"623","line":29,"column":44,"nodeType":"618","messageId":"619","endLine":29,"endColumn":55},{"ruleId":"616","severity":1,"message":"645","line":35,"column":22,"nodeType":"618","messageId":"619","endLine":35,"endColumn":33},{"ruleId":"616","severity":1,"message":"646","line":35,"column":42,"nodeType":"618","messageId":"619","endLine":35,"endColumn":51},{"ruleId":"624","severity":1,"message":"625","line":40,"column":8,"nodeType":"626","endLine":40,"endColumn":18,"suggestions":"647"},{"ruleId":"648","severity":1,"message":"649","line":42,"column":22,"nodeType":"650","messageId":"651","endLine":42,"endColumn":39,"fix":"652"},{"ruleId":"648","severity":1,"message":"653","line":44,"column":20,"nodeType":"650","messageId":"651","endLine":44,"endColumn":35,"fix":"654"},{"ruleId":"648","severity":1,"message":"653","line":46,"column":20,"nodeType":"650","messageId":"651","endLine":46,"endColumn":35,"fix":"655"},{"ruleId":"648","severity":1,"message":"656","line":92,"column":15,"nodeType":"650","messageId":"651","endLine":92,"endColumn":25,"fix":"657"},{"ruleId":"648","severity":1,"message":"658","line":93,"column":17,"nodeType":"650","messageId":"651","endLine":93,"endColumn":28,"fix":"659"},{"ruleId":"648","severity":1,"message":"660","line":94,"column":24,"nodeType":"650","messageId":"651","endLine":94,"endColumn":42,"fix":"661"},{"ruleId":"648","severity":1,"message":"653","line":95,"column":21,"nodeType":"650","messageId":"651","endLine":95,"endColumn":36,"fix":"662"},{"ruleId":"628","severity":1,"message":"629","line":101,"column":37,"nodeType":"630","messageId":"631","endLine":101,"endColumn":46},{"ruleId":"648","severity":1,"message":"663","line":179,"column":62,"nodeType":"650","messageId":"651","endLine":179,"endColumn":78,"fix":"664"},{"ruleId":"648","severity":1,"message":"658","line":183,"column":78,"nodeType":"650","messageId":"651","endLine":183,"endColumn":89,"fix":"665"},{"ruleId":"648","severity":1,"message":"660","line":184,"column":78,"nodeType":"650","messageId":"651","endLine":184,"endColumn":96,"fix":"666"},{"ruleId":"648","severity":1,"message":"653","line":186,"column":90,"nodeType":"650","messageId":"651","endLine":186,"endColumn":105,"fix":"667"},{"ruleId":"648","severity":1,"message":"653","line":186,"column":175,"nodeType":"650","messageId":"651","endLine":186,"endColumn":190,"fix":"668"},{"ruleId":"648","severity":1,"message":"656","line":189,"column":204,"nodeType":"650","messageId":"651","endLine":189,"endColumn":214,"fix":"669"},{"ruleId":"648","severity":1,"message":"656","line":190,"column":214,"nodeType":"650","messageId":"651","endLine":190,"endColumn":224,"fix":"670"},{"ruleId":"648","severity":1,"message":"656","line":198,"column":115,"nodeType":"650","messageId":"651","endLine":198,"endColumn":125,"fix":"671"},{"ruleId":"648","severity":1,"message":"653","line":225,"column":176,"nodeType":"650","messageId":"651","endLine":225,"endColumn":191,"fix":"672"},{"ruleId":"616","severity":1,"message":"633","line":1,"column":28,"nodeType":"618","messageId":"619","endLine":1,"endColumn":36},{"ruleId":"624","severity":1,"message":"673","line":27,"column":8,"nodeType":"626","endLine":27,"endColumn":18,"suggestions":"674"},{"ruleId":"628","severity":1,"message":"629","line":32,"column":37,"nodeType":"630","messageId":"631","endLine":32,"endColumn":46},{"ruleId":"648","severity":1,"message":"663","line":75,"column":50,"nodeType":"650","messageId":"651","endLine":75,"endColumn":72,"fix":"675"},{"ruleId":"648","severity":1,"message":"676","line":78,"column":71,"nodeType":"650","messageId":"651","endLine":78,"endColumn":87,"fix":"677"},{"ruleId":"648","severity":1,"message":"676","line":78,"column":116,"nodeType":"650","messageId":"651","endLine":78,"endColumn":132,"fix":"678"},{"ruleId":"648","severity":1,"message":"676","line":78,"column":162,"nodeType":"650","messageId":"651","endLine":78,"endColumn":178,"fix":"679"},{"ruleId":"648","severity":1,"message":"680","line":79,"column":62,"nodeType":"650","messageId":"651","endLine":79,"endColumn":77,"fix":"681"},{"ruleId":"648","severity":1,"message":"682","line":80,"column":62,"nodeType":"650","messageId":"651","endLine":80,"endColumn":77,"fix":"683"},{"ruleId":"616","severity":1,"message":"684","line":4,"column":8,"nodeType":"618","messageId":"619","endLine":4,"endColumn":12},{"ruleId":"616","severity":1,"message":"685","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":14},{"ruleId":"616","severity":1,"message":"686","line":7,"column":8,"nodeType":"618","messageId":"619","endLine":7,"endColumn":12},{"ruleId":"687","severity":1,"message":"688","line":53,"column":29,"nodeType":"689","endLine":53,"endColumn":223},{"ruleId":"690","severity":1,"message":"691","line":53,"column":29,"nodeType":"689","endLine":53,"endColumn":223},{"ruleId":"690","severity":1,"message":"692","line":53,"column":29,"nodeType":"689","endLine":53,"endColumn":223},{"ruleId":"693","severity":1,"message":"694","line":56,"column":37,"nodeType":"689","endLine":56,"endColumn":183},{"ruleId":"616","severity":1,"message":"695","line":1,"column":8,"nodeType":"618","messageId":"619","endLine":1,"endColumn":13},{"ruleId":"616","severity":1,"message":"695","line":1,"column":8,"nodeType":"618","messageId":"619","endLine":1,"endColumn":13},{"ruleId":"616","severity":1,"message":"696","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":21},{"ruleId":"616","severity":1,"message":"697","line":10,"column":30,"nodeType":"618","messageId":"619","endLine":10,"endColumn":45},{"ruleId":"616","severity":1,"message":"698","line":10,"column":54,"nodeType":"618","messageId":"619","endLine":10,"endColumn":67},{"ruleId":"648","severity":1,"message":"699","line":17,"column":14,"nodeType":"650","messageId":"651","endLine":17,"endColumn":29,"fix":"700"},{"ruleId":"648","severity":1,"message":"699","line":17,"column":45,"nodeType":"650","messageId":"651","endLine":17,"endColumn":60,"fix":"701"},{"ruleId":"648","severity":1,"message":"682","line":20,"column":29,"nodeType":"650","messageId":"651","endLine":20,"endColumn":44,"fix":"702"},{"ruleId":"648","severity":1,"message":"680","line":20,"column":46,"nodeType":"650","messageId":"651","endLine":20,"endColumn":61,"fix":"703"},{"ruleId":"648","severity":1,"message":"699","line":30,"column":14,"nodeType":"650","messageId":"651","endLine":30,"endColumn":29,"fix":"704"},{"ruleId":"648","severity":1,"message":"699","line":30,"column":49,"nodeType":"650","messageId":"651","endLine":30,"endColumn":64,"fix":"705"},{"ruleId":"648","severity":1,"message":"699","line":30,"column":86,"nodeType":"650","messageId":"651","endLine":30,"endColumn":101,"fix":"706"},{"ruleId":"648","severity":1,"message":"699","line":30,"column":121,"nodeType":"650","messageId":"651","endLine":30,"endColumn":136,"fix":"707"},{"ruleId":"648","severity":1,"message":"682","line":33,"column":29,"nodeType":"650","messageId":"651","endLine":33,"endColumn":44,"fix":"708"},{"ruleId":"648","severity":1,"message":"680","line":33,"column":46,"nodeType":"650","messageId":"651","endLine":33,"endColumn":61,"fix":"709"},{"ruleId":"616","severity":1,"message":"710","line":8,"column":26,"nodeType":"618","messageId":"619","endLine":8,"endColumn":31},{"ruleId":"624","severity":1,"message":"625","line":31,"column":8,"nodeType":"626","endLine":31,"endColumn":18,"suggestions":"711"},{"ruleId":"628","severity":1,"message":"629","line":35,"column":37,"nodeType":"630","messageId":"631","endLine":35,"endColumn":46},{"ruleId":"687","severity":1,"message":"688","line":105,"column":77,"nodeType":"689","endLine":105,"endColumn":165},{"ruleId":"687","severity":1,"message":"688","line":107,"column":77,"nodeType":"689","endLine":107,"endColumn":218},{"ruleId":"612","replacedBy":"712"},{"ruleId":"614","replacedBy":"713"},{"ruleId":"616","severity":1,"message":"617","line":2,"column":10,"nodeType":"618","messageId":"619","endLine":2,"endColumn":23},{"ruleId":"616","severity":1,"message":"620","line":2,"column":32,"nodeType":"618","messageId":"619","endLine":2,"endColumn":38},{"ruleId":"616","severity":1,"message":"621","line":2,"column":40,"nodeType":"618","messageId":"619","endLine":2,"endColumn":46},{"ruleId":"616","severity":1,"message":"714","line":23,"column":7,"nodeType":"618","messageId":"619","endLine":23,"endColumn":15},{"ruleId":"616","severity":1,"message":"715","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":16},{"ruleId":"616","severity":1,"message":"684","line":4,"column":8,"nodeType":"618","messageId":"619","endLine":4,"endColumn":12},{"ruleId":"616","severity":1,"message":"716","line":6,"column":8,"nodeType":"618","messageId":"619","endLine":6,"endColumn":9},{"ruleId":"616","severity":1,"message":"717","line":10,"column":8,"nodeType":"618","messageId":"619","endLine":10,"endColumn":16},{"ruleId":"616","severity":1,"message":"695","line":1,"column":8,"nodeType":"618","messageId":"619","endLine":1,"endColumn":13},{"ruleId":"616","severity":1,"message":"696","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":21},{"ruleId":"616","severity":1,"message":"697","line":10,"column":30,"nodeType":"618","messageId":"619","endLine":10,"endColumn":45},{"ruleId":"616","severity":1,"message":"698","line":10,"column":54,"nodeType":"618","messageId":"619","endLine":10,"endColumn":67},{"ruleId":"648","severity":1,"message":"699","line":17,"column":14,"nodeType":"650","messageId":"651","endLine":17,"endColumn":29,"fix":"718"},{"ruleId":"648","severity":1,"message":"699","line":17,"column":45,"nodeType":"650","messageId":"651","endLine":17,"endColumn":60,"fix":"719"},{"ruleId":"648","severity":1,"message":"682","line":20,"column":29,"nodeType":"650","messageId":"651","endLine":20,"endColumn":44,"fix":"720"},{"ruleId":"648","severity":1,"message":"680","line":20,"column":46,"nodeType":"650","messageId":"651","endLine":20,"endColumn":61,"fix":"721"},{"ruleId":"648","severity":1,"message":"699","line":30,"column":14,"nodeType":"650","messageId":"651","endLine":30,"endColumn":29,"fix":"722"},{"ruleId":"648","severity":1,"message":"699","line":30,"column":49,"nodeType":"650","messageId":"651","endLine":30,"endColumn":64,"fix":"723"},{"ruleId":"648","severity":1,"message":"699","line":30,"column":86,"nodeType":"650","messageId":"651","endLine":30,"endColumn":101,"fix":"724"},{"ruleId":"648","severity":1,"message":"699","line":30,"column":121,"nodeType":"650","messageId":"651","endLine":30,"endColumn":136,"fix":"725"},{"ruleId":"648","severity":1,"message":"682","line":33,"column":29,"nodeType":"650","messageId":"651","endLine":33,"endColumn":44,"fix":"726"},{"ruleId":"648","severity":1,"message":"680","line":33,"column":46,"nodeType":"650","messageId":"651","endLine":33,"endColumn":61,"fix":"727"},{"ruleId":"612","replacedBy":"728"},{"ruleId":"614","replacedBy":"729"},{"ruleId":"616","severity":1,"message":"695","line":1,"column":8,"nodeType":"618","messageId":"619","endLine":1,"endColumn":13},{"ruleId":"616","severity":1,"message":"685","line":4,"column":10,"nodeType":"618","messageId":"619","endLine":4,"endColumn":14},{"ruleId":"616","severity":1,"message":"730","line":14,"column":13,"nodeType":"618","messageId":"619","endLine":14,"endColumn":20},{"ruleId":"616","severity":1,"message":"731","line":14,"column":22,"nodeType":"618","messageId":"619","endLine":14,"endColumn":29},{"ruleId":"616","severity":1,"message":"732","line":14,"column":41,"nodeType":"618","messageId":"619","endLine":14,"endColumn":46},{"ruleId":"624","severity":1,"message":"643","line":18,"column":12,"nodeType":"626","endLine":18,"endColumn":22,"suggestions":"733"},{"ruleId":"687","severity":1,"message":"688","line":27,"column":29,"nodeType":"689","endLine":27,"endColumn":64},{"ruleId":"616","severity":1,"message":"730","line":22,"column":11,"nodeType":"618","messageId":"619","endLine":22,"endColumn":18},{"ruleId":"624","severity":1,"message":"734","line":43,"column":5,"nodeType":"626","endLine":43,"endColumn":7,"suggestions":"735"},{"ruleId":"687","severity":1,"message":"688","line":64,"column":19,"nodeType":"689","endLine":64,"endColumn":213},{"ruleId":"690","severity":1,"message":"691","line":64,"column":19,"nodeType":"689","endLine":64,"endColumn":213},{"ruleId":"690","severity":1,"message":"692","line":64,"column":19,"nodeType":"689","endLine":64,"endColumn":213},{"ruleId":"693","severity":1,"message":"694","line":67,"column":23,"nodeType":"689","endLine":67,"endColumn":169},{"ruleId":"736","severity":1,"message":"737","line":9,"column":9,"nodeType":"689","endLine":9,"endColumn":104},{"ruleId":"736","severity":1,"message":"737","line":8,"column":17,"nodeType":"689","endLine":8,"endColumn":112},{"ruleId":"612","replacedBy":"738"},{"ruleId":"614","replacedBy":"739"},{"ruleId":"624","severity":1,"message":"643","line":23,"column":8,"nodeType":"626","endLine":23,"endColumn":18,"suggestions":"740"},{"ruleId":"687","severity":1,"message":"688","line":36,"column":29,"nodeType":"689","endLine":36,"endColumn":65},{"ruleId":"616","severity":1,"message":"741","line":5,"column":8,"nodeType":"618","messageId":"619","endLine":5,"endColumn":13},{"ruleId":"616","severity":1,"message":"742","line":4,"column":10,"nodeType":"618","messageId":"619","endLine":4,"endColumn":24},{"ruleId":"616","severity":1,"message":"685","line":6,"column":10,"nodeType":"618","messageId":"619","endLine":6,"endColumn":14},{"ruleId":"616","severity":1,"message":"743","line":15,"column":18,"nodeType":"618","messageId":"619","endLine":15,"endColumn":25},{"ruleId":"624","severity":1,"message":"643","line":36,"column":8,"nodeType":"626","endLine":36,"endColumn":27,"suggestions":"744"},{"ruleId":"745","severity":1,"message":"746","line":75,"column":33,"nodeType":"747","endLine":75,"endColumn":46},{"ruleId":"616","severity":1,"message":"685","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":14},{"ruleId":"616","severity":1,"message":"686","line":7,"column":8,"nodeType":"618","messageId":"619","endLine":7,"endColumn":12},{"ruleId":"687","severity":1,"message":"688","line":53,"column":29,"nodeType":"689","endLine":53,"endColumn":223},{"ruleId":"690","severity":1,"message":"691","line":53,"column":29,"nodeType":"689","endLine":53,"endColumn":223},{"ruleId":"690","severity":1,"message":"692","line":53,"column":29,"nodeType":"689","endLine":53,"endColumn":223},{"ruleId":"693","severity":1,"message":"694","line":56,"column":37,"nodeType":"689","endLine":56,"endColumn":183},{"ruleId":"616","severity":1,"message":"748","line":1,"column":17,"nodeType":"618","messageId":"619","endLine":1,"endColumn":26},{"ruleId":"616","severity":1,"message":"633","line":1,"column":28,"nodeType":"618","messageId":"619","endLine":1,"endColumn":36},{"ruleId":"616","severity":1,"message":"749","line":2,"column":23,"nodeType":"618","messageId":"619","endLine":2,"endColumn":34},{"ruleId":"616","severity":1,"message":"717","line":11,"column":11,"nodeType":"618","messageId":"619","endLine":11,"endColumn":19},{"ruleId":"745","severity":1,"message":"746","line":103,"column":69,"nodeType":"747","endLine":103,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":113,"column":69,"nodeType":"747","endLine":113,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":137,"column":69,"nodeType":"747","endLine":137,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":147,"column":69,"nodeType":"747","endLine":147,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":171,"column":69,"nodeType":"747","endLine":171,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":181,"column":69,"nodeType":"747","endLine":181,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":234,"column":69,"nodeType":"747","endLine":234,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":244,"column":69,"nodeType":"747","endLine":244,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":268,"column":69,"nodeType":"747","endLine":268,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":278,"column":69,"nodeType":"747","endLine":278,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":331,"column":69,"nodeType":"747","endLine":331,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":341,"column":69,"nodeType":"747","endLine":341,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":365,"column":69,"nodeType":"747","endLine":365,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":375,"column":69,"nodeType":"747","endLine":375,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":428,"column":69,"nodeType":"747","endLine":428,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":438,"column":69,"nodeType":"747","endLine":438,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":462,"column":69,"nodeType":"747","endLine":462,"endColumn":81},{"ruleId":"745","severity":1,"message":"746","line":472,"column":69,"nodeType":"747","endLine":472,"endColumn":81},{"ruleId":"616","severity":1,"message":"748","line":1,"column":17,"nodeType":"618","messageId":"619","endLine":1,"endColumn":26},{"ruleId":"616","severity":1,"message":"749","line":2,"column":23,"nodeType":"618","messageId":"619","endLine":2,"endColumn":34},{"ruleId":"616","severity":1,"message":"710","line":7,"column":26,"nodeType":"618","messageId":"619","endLine":7,"endColumn":31},{"ruleId":"616","severity":1,"message":"717","line":12,"column":11,"nodeType":"618","messageId":"619","endLine":12,"endColumn":19},{"ruleId":"687","severity":1,"message":"688","line":31,"column":33,"nodeType":"689","endLine":31,"endColumn":68},{"ruleId":"616","severity":1,"message":"716","line":4,"column":8,"nodeType":"618","messageId":"619","endLine":4,"endColumn":9},{"ruleId":"616","severity":1,"message":"686","line":6,"column":8,"nodeType":"618","messageId":"619","endLine":6,"endColumn":12},{"ruleId":"616","severity":1,"message":"750","line":7,"column":8,"nodeType":"618","messageId":"619","endLine":7,"endColumn":14},{"ruleId":"616","severity":1,"message":"751","line":10,"column":8,"nodeType":"618","messageId":"619","endLine":10,"endColumn":13},{"ruleId":"624","severity":1,"message":"643","line":22,"column":8,"nodeType":"626","endLine":22,"endColumn":18,"suggestions":"752"},{"ruleId":"616","severity":1,"message":"686","line":4,"column":8,"nodeType":"618","messageId":"619","endLine":4,"endColumn":12},{"ruleId":"616","severity":1,"message":"750","line":5,"column":8,"nodeType":"618","messageId":"619","endLine":5,"endColumn":14},{"ruleId":"624","severity":1,"message":"643","line":27,"column":8,"nodeType":"626","endLine":27,"endColumn":22,"suggestions":"753"},{"ruleId":"616","severity":1,"message":"754","line":1,"column":17,"nodeType":"618","messageId":"619","endLine":1,"endColumn":30},{"ruleId":"616","severity":1,"message":"716","line":4,"column":8,"nodeType":"618","messageId":"619","endLine":4,"endColumn":9},{"ruleId":"616","severity":1,"message":"686","line":6,"column":8,"nodeType":"618","messageId":"619","endLine":6,"endColumn":12},{"ruleId":"616","severity":1,"message":"750","line":7,"column":8,"nodeType":"618","messageId":"619","endLine":7,"endColumn":14},{"ruleId":"616","severity":1,"message":"685","line":8,"column":10,"nodeType":"618","messageId":"619","endLine":8,"endColumn":14},{"ruleId":"616","severity":1,"message":"755","line":9,"column":8,"nodeType":"618","messageId":"619","endLine":9,"endColumn":9},{"ruleId":"624","severity":1,"message":"643","line":23,"column":8,"nodeType":"626","endLine":23,"endColumn":18,"suggestions":"756"},{"ruleId":"616","severity":1,"message":"748","line":1,"column":17,"nodeType":"618","messageId":"619","endLine":1,"endColumn":26},{"ruleId":"616","severity":1,"message":"716","line":4,"column":8,"nodeType":"618","messageId":"619","endLine":4,"endColumn":9},{"ruleId":"616","severity":1,"message":"686","line":6,"column":8,"nodeType":"618","messageId":"619","endLine":6,"endColumn":12},{"ruleId":"616","severity":1,"message":"750","line":7,"column":8,"nodeType":"618","messageId":"619","endLine":7,"endColumn":14},{"ruleId":"616","severity":1,"message":"748","line":1,"column":17,"nodeType":"618","messageId":"619","endLine":1,"endColumn":26},{"ruleId":"616","severity":1,"message":"742","line":7,"column":10,"nodeType":"618","messageId":"619","endLine":7,"endColumn":24},{"ruleId":"616","severity":1,"message":"710","line":7,"column":26,"nodeType":"618","messageId":"619","endLine":7,"endColumn":31},{"ruleId":"687","severity":1,"message":"688","line":42,"column":33,"nodeType":"689","endLine":42,"endColumn":68},{"ruleId":"616","severity":1,"message":"748","line":1,"column":17,"nodeType":"618","messageId":"619","endLine":1,"endColumn":26},{"ruleId":"616","severity":1,"message":"633","line":1,"column":28,"nodeType":"618","messageId":"619","endLine":1,"endColumn":36},{"ruleId":"616","severity":1,"message":"749","line":2,"column":23,"nodeType":"618","messageId":"619","endLine":2,"endColumn":34},{"ruleId":"616","severity":1,"message":"757","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":16},{"ruleId":"616","severity":1,"message":"742","line":4,"column":10,"nodeType":"618","messageId":"619","endLine":4,"endColumn":24},{"ruleId":"616","severity":1,"message":"710","line":4,"column":26,"nodeType":"618","messageId":"619","endLine":4,"endColumn":31},{"ruleId":"616","severity":1,"message":"685","line":6,"column":10,"nodeType":"618","messageId":"619","endLine":6,"endColumn":14},{"ruleId":"616","severity":1,"message":"717","line":12,"column":11,"nodeType":"618","messageId":"619","endLine":12,"endColumn":19},{"ruleId":"687","severity":1,"message":"688","line":26,"column":33,"nodeType":"689","endLine":26,"endColumn":68},{"ruleId":"616","severity":1,"message":"748","line":1,"column":17,"nodeType":"618","messageId":"619","endLine":1,"endColumn":26},{"ruleId":"616","severity":1,"message":"749","line":2,"column":23,"nodeType":"618","messageId":"619","endLine":2,"endColumn":34},{"ruleId":"616","severity":1,"message":"717","line":9,"column":11,"nodeType":"618","messageId":"619","endLine":9,"endColumn":19},{"ruleId":"616","severity":1,"message":"758","line":10,"column":12,"nodeType":"618","messageId":"619","endLine":10,"endColumn":23},{"ruleId":"616","severity":1,"message":"759","line":10,"column":25,"nodeType":"618","messageId":"619","endLine":10,"endColumn":40},{"ruleId":"616","severity":1,"message":"760","line":11,"column":9,"nodeType":"618","messageId":"619","endLine":11,"endColumn":20},{"ruleId":"616","severity":1,"message":"748","line":1,"column":17,"nodeType":"618","messageId":"619","endLine":1,"endColumn":26},{"ruleId":"745","severity":1,"message":"746","line":69,"column":53,"nodeType":"747","endLine":69,"endColumn":66},{"ruleId":"745","severity":1,"message":"746","line":79,"column":53,"nodeType":"747","endLine":79,"endColumn":66},{"ruleId":"745","severity":1,"message":"746","line":98,"column":53,"nodeType":"747","endLine":98,"endColumn":66},{"ruleId":"745","severity":1,"message":"746","line":108,"column":53,"nodeType":"747","endLine":108,"endColumn":66},{"ruleId":"745","severity":1,"message":"746","line":127,"column":53,"nodeType":"747","endLine":127,"endColumn":66},{"ruleId":"745","severity":1,"message":"746","line":137,"column":53,"nodeType":"747","endLine":137,"endColumn":66},{"ruleId":"616","severity":1,"message":"748","line":1,"column":17,"nodeType":"618","messageId":"619","endLine":1,"endColumn":26},{"ruleId":"616","severity":1,"message":"633","line":1,"column":28,"nodeType":"618","messageId":"619","endLine":1,"endColumn":36},{"ruleId":"616","severity":1,"message":"749","line":2,"column":23,"nodeType":"618","messageId":"619","endLine":2,"endColumn":34},{"ruleId":"616","severity":1,"message":"717","line":9,"column":11,"nodeType":"618","messageId":"619","endLine":9,"endColumn":19},{"ruleId":"616","severity":1,"message":"750","line":2,"column":8,"nodeType":"618","messageId":"619","endLine":2,"endColumn":14},{"ruleId":"616","severity":1,"message":"761","line":3,"column":8,"nodeType":"618","messageId":"619","endLine":3,"endColumn":18},{"ruleId":"624","severity":1,"message":"734","line":18,"column":8,"nodeType":"626","endLine":18,"endColumn":15,"suggestions":"762"},{"ruleId":"616","severity":1,"message":"763","line":1,"column":10,"nodeType":"618","messageId":"619","endLine":1,"endColumn":30},{"ruleId":"616","severity":1,"message":"764","line":1,"column":32,"nodeType":"618","messageId":"619","endLine":1,"endColumn":55},{"ruleId":"616","severity":1,"message":"765","line":1,"column":57,"nodeType":"618","messageId":"619","endLine":1,"endColumn":80},"no-native-reassign",["766"],"no-negated-in-lhs",["767"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'DeleteLoading' is assigned a value but never used.","'deleteError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["768"],"array-callback-return","Array.prototype.filter() expects a return value from function.","FunctionExpression","expectedInside",["769"],"'useState' is defined but never used.","'RegulareChart' is defined but never used.","'listAreaLoading' is assigned a value but never used.","'listAreaError' is assigned a value but never used.","'listCategoryLoading' is assigned a value but never used.","'listCategoryError' is assigned a value but never used.","'listUnitLoading' is assigned a value but never used.","'listUnitError' is assigned a value but never used.",["770"],["771"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["772"],"'editLoading' is assigned a value but never used.","'editError' is assigned a value but never used.",["773"],"no-whitespace-before-property","Unexpected whitespace before property filter.","MemberExpression","unexpectedWhitespace",{"range":"774","text":"775"},"Unexpected whitespace before property isActive.",{"range":"776","text":"775"},{"range":"777","text":"775"},"Unexpected whitespace before property _id.",{"range":"778","text":"775"},"Unexpected whitespace before property name.",{"range":"779","text":"775"},"Unexpected whitespace before property description.",{"range":"780","text":"775"},{"range":"781","text":"775"},"Unexpected whitespace before property map.",{"range":"782","text":"775"},{"range":"783","text":"775"},{"range":"784","text":"775"},{"range":"785","text":"775"},{"range":"786","text":"775"},{"range":"787","text":"775"},{"range":"788","text":"775"},{"range":"789","text":"775"},{"range":"790","text":"775"},"React Hook useEffect has missing dependencies: 'dispatch', 'itemId', and 'props.history'. Either include them or remove the dependency array.",["791"],{"range":"792","text":"775"},"Unexpected whitespace before property createdAt.",{"range":"793","text":"775"},{"range":"794","text":"775"},{"range":"795","text":"775"},"Unexpected whitespace before property minPrice.",{"range":"796","text":"775"},"Unexpected whitespace before property maxPrice.",{"range":"797","text":"775"},"'Logo' is defined but never used.","'Link' is defined but never used.","'logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role img. This role is implicit on the element img.","The attribute aria-expanded is not supported by the role img. This role is implicit on the element img.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'react' is defined but never used.","'useDispatch' is defined but never used.","'listItemLoading' is assigned a value but never used.","'listItemError' is assigned a value but never used.","Unexpected whitespace before property category.",{"range":"798","text":"775"},{"range":"799","text":"775"},{"range":"800","text":"775"},{"range":"801","text":"775"},{"range":"802","text":"775"},{"range":"803","text":"775"},{"range":"804","text":"775"},{"range":"805","text":"775"},{"range":"806","text":"775"},{"range":"807","text":"775"},"'toast' is defined but never used.",["808"],["766"],["767"],"'location' is assigned a value but never used.","'signin' is defined but never used.","'$' is defined but never used.","'dispatch' is assigned a value but never used.",{"range":"809","text":"775"},{"range":"810","text":"775"},{"range":"811","text":"775"},{"range":"812","text":"775"},{"range":"813","text":"775"},{"range":"814","text":"775"},{"range":"815","text":"775"},{"range":"816","text":"775"},{"range":"817","text":"775"},{"range":"818","text":"775"},["766"],["767"],"'loading' is assigned a value but never used.","'success' is assigned a value but never used.","'error' is assigned a value but never used.",["819"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["820"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["766"],["767"],["821"],"'Chart' is defined but never used.","'ToastContainer' is defined but never used.","'setType' is assigned a value but never used.",["822"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'Navbar' is defined but never used.","'axios' is defined but never used.",["823"],["824"],"'useDebugValue' is defined but never used.","'e' is defined but never used.",["825"],"'signup' is defined but never used.","'chartSelect' is assigned a value but never used.","'setcChartSelect' is assigned a value but never used.","'weeklyTitle' is assigned a value but never used.","'contactImg' is defined but never used.",["826"],"'CONFIRM_PREMIUM_FAIL' is defined but never used.","'CONFIRM_PREMIUM_REQUEST' is defined but never used.","'CONFIRM_PREMIUM_SUCCESS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"827","fix":"828"},{"desc":"827","fix":"829"},{"desc":"827","fix":"830"},{"desc":"827","fix":"831"},{"desc":"832","fix":"833"},{"desc":"827","fix":"834"},[1694,1697],"?.",[1788,1791],[1880,1883],[2931,2934],[2959,2962],[2995,2998],[3035,3038],[8085,8088],[8427,8430],[8522,8525],[8713,8716],[8798,8801],[9205,9208],[9478,9481],[10066,10069],[13217,13220],{"desc":"835","fix":"836"},[3367,3370],[3603,3606],[3648,3651],[3694,3697],[3793,3796],[3876,3879],[565,568],[596,599],[690,693],[707,710],[933,936],[968,971],[1005,1008],[1040,1043],[1141,1144],[1158,1161],{"desc":"827","fix":"837"},[565,568],[596,599],[690,693],[707,710],[933,936],[968,971],[1005,1008],[1040,1043],[1141,1144],[1158,1161],{"desc":"832","fix":"838"},{"desc":"839","fix":"840"},{"desc":"832","fix":"841"},{"desc":"842","fix":"843"},{"desc":"832","fix":"844"},{"desc":"845","fix":"846"},{"desc":"832","fix":"847"},{"desc":"848","fix":"849"},"Update the dependencies array to be: [dispatch, props.history, userInfo]",{"range":"850","text":"851"},{"range":"852","text":"851"},{"range":"853","text":"851"},{"range":"854","text":"851"},"Update the dependencies array to be: [props.history, userInfo]",{"range":"855","text":"856"},{"range":"857","text":"851"},"Update the dependencies array to be: [dispatch, itemId, props.history, userInfo]",{"range":"858","text":"859"},{"range":"860","text":"851"},{"range":"861","text":"856"},"Update the dependencies array to be: [dispatch]",{"range":"862","text":"863"},{"range":"864","text":"856"},"Update the dependencies array to be: [userInfo, success, props.history]",{"range":"865","text":"866"},{"range":"867","text":"856"},"Update the dependencies array to be: [props.history, saveUserInfo]",{"range":"868","text":"869"},{"range":"870","text":"856"},"Update the dependencies array to be: [dispatch, token]",{"range":"871","text":"872"},[2455,2465],"[dispatch, props.history, userInfo]",[1700,1710],[1657,1667],[1783,1793],[1043,1053],"[props.history, userInfo]",[1652,1662],[988,998],"[dispatch, itemId, props.history, userInfo]",[1070,1080],[568,578],[1268,1270],"[dispatch]",[895,905],[1236,1255],"[userInfo, success, props.history]",[783,793],[982,996],"[props.history, saveUserInfo]",[891,901],[679,686],"[dispatch, token]"]