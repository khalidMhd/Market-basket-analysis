[{"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\index.js":"1","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\App.js":"2","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reportWebVitals.js":"3","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\store\\Store.js":"4","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\item.js":"5","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\unit.js":"6","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Dashboard.js":"7","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\category.js":"8","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\settings.js":"9","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\area.js":"10","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\regulate.js":"11","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\auth\\singin.js":"12","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\auth.js":"13","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\items.js":"14","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\category.js":"15","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\unit.js":"16","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\area.js":"17","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\regulateItems.js":"18","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Navbar.js":"19","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\items.js":"20","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\unit.js":"21","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\category.js":"22","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\area.js":"23","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\auth.js":"24","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\regulateItems.js":"25","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\area.js":"26","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\regulateItem.js":"27","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\category.js":"28","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\unit.js":"29","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\items.js":"30","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\auth.js":"31","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\regulateChart.js":"32","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\itemBarChart.js":"33","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\complaint.js":"34","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\complaint.js":"35","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\complaint.js":"36","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\complaint.js":"37","G:\\expert system\\server\\client\\src\\index.js":"38","G:\\expert system\\server\\client\\src\\App.js":"39","G:\\expert system\\server\\client\\src\\reportWebVitals.js":"40","G:\\expert system\\server\\client\\src\\store\\Store.js":"41","G:\\expert system\\server\\client\\src\\screen\\auth\\singin.js":"42","G:\\expert system\\server\\client\\src\\reducer\\auth.js":"43","G:\\expert system\\server\\client\\src\\action\\auth.js":"44","G:\\expert system\\server\\client\\src\\screen\\chart\\itemBarChart.js":"45","G:\\expert system\\server\\client\\src\\screen\\chart\\regulateChart.js":"46","G:\\expert system\\server\\client\\src\\contant\\auth.js":"47","G:\\expert system\\server\\client\\src\\screen\\StartScreen.js":"48","G:\\expert system\\server\\client\\src\\screen\\Navbar.js":"49","G:\\expert system\\server\\client\\src\\screen\\actionButton.js":"50","G:\\expert system\\server\\client\\src\\screen\\ActionButton.js":"51","G:\\expert system\\server\\client\\src\\screen\\Contact.js":"52","G:\\expert system\\server\\client\\src\\screen\\DetailScreen.js":"53","G:\\expert system\\server\\client\\src\\screen\\auth\\signup.js":"54","G:\\expert system\\server\\client\\src\\screen\\admin\\Navbar.js":"55","G:\\expert system\\server\\client\\src\\screen\\admin\\Dashboard.js":"56","G:\\expert system\\server\\client\\src\\screen\\admin\\DetailScreen.js":"57","G:\\expert system\\server\\client\\src\\screen\\admin\\user.js":"58","G:\\expert system\\server\\client\\src\\screen\\admin\\Message.js":"59","G:\\expert system\\server\\client\\src\\screen\\admin\\Setting.js":"60","G:\\expert system\\server\\client\\src\\screen\\Signin.js":"61","G:\\expert system\\server\\client\\src\\screen\\signup.js":"62","G:\\expert system\\server\\client\\src\\screen\\forgotPassord.js":"63","G:\\expert system\\server\\client\\src\\screen\\newPassword.js":"64","G:\\expert system\\server\\client\\src\\screen\\Profile.js":"65","G:\\expert system\\server\\client\\src\\screen\\admin\\UplaodFile.js":"66","G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\PremiumChart.js":"67","G:\\expert system\\server\\client\\src\\screen\\admin\\RequestPremium.js":"68","G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\frequectChart.js":"69","G:\\expert system\\server\\client\\src\\screen\\verified.js":"70","G:\\expert system\\server\\client\\src\\action\\premium.js":"71","G:\\expert system\\server\\client\\src\\contant\\premium.js":"72","G:\\expert system\\server\\client\\src\\reducer\\premium.js":"73","G:\\expert system\\server\\client\\src\\reducer\\message.js":"74","G:\\expert system\\server\\client\\src\\contant\\message.js":"75","G:\\expert system\\server\\client\\src\\action\\message.js":"76","G:\\expert system\\server\\client\\src\\reducer\\user.js":"77","G:\\expert system\\server\\client\\src\\contant\\user.js":"78","G:\\expert system\\server\\client\\src\\action\\user.js":"79","G:\\expert system\\server\\client\\src\\reducer\\admin\\auth.js":"80","G:\\expert system\\server\\client\\src\\contant\\admin\\auth.js":"81","G:\\expert system\\server\\client\\src\\reducer\\admin\\message.js":"82","G:\\expert system\\server\\client\\src\\contant\\admin\\message.js":"83","G:\\expert system\\server\\client\\src\\reducer\\admin\\premium.js":"84","G:\\expert system\\server\\client\\src\\contant\\admin\\premium.js":"85","G:\\expert system\\server\\client\\src\\reducer\\admin\\user.js":"86","G:\\expert system\\server\\client\\src\\contant\\admin\\user.js":"87","G:\\expert system\\server\\client\\src\\action\\admin\\auth.js":"88","G:\\expert system\\server\\client\\src\\action\\admin\\premium.js":"89","G:\\expert system\\server\\client\\src\\action\\admin\\user.js":"90","G:\\expert system\\server\\client\\src\\action\\admin\\message.js":"91","G:\\expert system\\server\\client\\src\\reducer\\association.js":"92","G:\\expert system\\server\\client\\src\\contant\\association.js":"93","G:\\expert system\\server\\client\\src\\action\\association.js":"94"},{"size":662,"mtime":1627510351000,"results":"95","hashOfConfig":"96"},{"size":1478,"mtime":1630595486179,"results":"97","hashOfConfig":"96"},{"size":362,"mtime":1627510351000,"results":"98","hashOfConfig":"96"},{"size":1912,"mtime":1630595014082,"results":"99","hashOfConfig":"96"},{"size":30159,"mtime":1633631227303,"results":"100","hashOfConfig":"96"},{"size":20042,"mtime":1628420703519,"results":"101","hashOfConfig":"96"},{"size":11323,"mtime":1628428189293,"results":"102","hashOfConfig":"96"},{"size":20298,"mtime":1628483765210,"results":"103","hashOfConfig":"96"},{"size":4469,"mtime":1627510351000,"results":"104","hashOfConfig":"96"},{"size":19136,"mtime":1628483724031,"results":"105","hashOfConfig":"96"},{"size":4364,"mtime":1628419779376,"results":"106","hashOfConfig":"96"},{"size":2836,"mtime":1627510351000,"results":"107","hashOfConfig":"96"},{"size":1591,"mtime":1627510351000,"results":"108","hashOfConfig":"96"},{"size":2035,"mtime":1628415414564,"results":"109","hashOfConfig":"96"},{"size":2216,"mtime":1627510351000,"results":"110","hashOfConfig":"96"},{"size":2034,"mtime":1627510351000,"results":"111","hashOfConfig":"96"},{"size":2034,"mtime":1627510351000,"results":"112","hashOfConfig":"96"},{"size":630,"mtime":1628415482817,"results":"113","hashOfConfig":"96"},{"size":7203,"mtime":1632407511850,"results":"114","hashOfConfig":"96"},{"size":2184,"mtime":1628403072224,"results":"115","hashOfConfig":"96"},{"size":2002,"mtime":1628139068621,"results":"116","hashOfConfig":"96"},{"size":2172,"mtime":1628483776451,"results":"117","hashOfConfig":"96"},{"size":2005,"mtime":1628138531021,"results":"118","hashOfConfig":"96"},{"size":1792,"mtime":1627658970109,"results":"119","hashOfConfig":"96"},{"size":757,"mtime":1628418262041,"results":"120","hashOfConfig":"96"},{"size":631,"mtime":1627510351000,"results":"121","hashOfConfig":"96"},{"size":211,"mtime":1628415356035,"results":"122","hashOfConfig":"96"},{"size":726,"mtime":1627510351000,"results":"123","hashOfConfig":"96"},{"size":631,"mtime":1627510351000,"results":"124","hashOfConfig":"96"},{"size":633,"mtime":1627510351000,"results":"125","hashOfConfig":"96"},{"size":530,"mtime":1627510351000,"results":"126","hashOfConfig":"96"},{"size":978,"mtime":1628315462938,"results":"127","hashOfConfig":"96"},{"size":2904,"mtime":1632407342995,"results":"128","hashOfConfig":"96"},{"size":590,"mtime":1630595063933,"results":"129","hashOfConfig":"96"},{"size":187,"mtime":1630594864176,"results":"130","hashOfConfig":"96"},{"size":6654,"mtime":1631566237351,"results":"131","hashOfConfig":"96"},{"size":689,"mtime":1630594800803,"results":"132","hashOfConfig":"96"},{"size":662,"mtime":1638468181206,"results":"133","hashOfConfig":"134"},{"size":2574,"mtime":1644825661865,"results":"135","hashOfConfig":"134"},{"size":362,"mtime":1627510351000,"results":"136","hashOfConfig":"134"},{"size":2274,"mtime":1644823539718,"results":"137","hashOfConfig":"134"},{"size":2607,"mtime":1643788067091,"results":"138","hashOfConfig":"134"},{"size":3160,"mtime":1643736502325,"results":"139","hashOfConfig":"134"},{"size":3125,"mtime":1644003477536,"results":"140","hashOfConfig":"134"},{"size":2904,"mtime":1632407342995,"results":"141","hashOfConfig":"134"},{"size":978,"mtime":1628315462938,"results":"142","hashOfConfig":"134"},{"size":1163,"mtime":1643644957044,"results":"143","hashOfConfig":"134"},{"size":5526,"mtime":1645082706558,"results":"144","hashOfConfig":"134"},{"size":4284,"mtime":1644048115767,"results":"145","hashOfConfig":"134"},{"size":425,"mtime":1638910053899,"results":"146","hashOfConfig":"134"},{"size":425,"mtime":1638910053899,"results":"147","hashOfConfig":"134"},{"size":3708,"mtime":1644824336055,"results":"148","hashOfConfig":"134"},{"size":5499,"mtime":1645089505388,"results":"149","hashOfConfig":"134"},{"size":4330,"mtime":1644003608165,"results":"150","hashOfConfig":"134"},{"size":6502,"mtime":1644003595670,"results":"151","hashOfConfig":"134"},{"size":9450,"mtime":1644146527068,"results":"152","hashOfConfig":"134"},{"size":4133,"mtime":1645089690580,"results":"153","hashOfConfig":"134"},{"size":36291,"mtime":1645089790962,"results":"154","hashOfConfig":"134"},{"size":6648,"mtime":1645089740388,"results":"155","hashOfConfig":"134"},{"size":4881,"mtime":1644044591481,"results":"156","hashOfConfig":"134"},{"size":3410,"mtime":1643711721928,"results":"157","hashOfConfig":"134"},{"size":3582,"mtime":1643881998896,"results":"158","hashOfConfig":"134"},{"size":3002,"mtime":1643694601953,"results":"159","hashOfConfig":"134"},{"size":3183,"mtime":1643655694517,"results":"160","hashOfConfig":"134"},{"size":4612,"mtime":1644044219318,"results":"161","hashOfConfig":"134"},{"size":3162,"mtime":1643996174735,"results":"162","hashOfConfig":"134"},{"size":6072,"mtime":1644146760485,"results":"163","hashOfConfig":"134"},{"size":6912,"mtime":1645089758458,"results":"164","hashOfConfig":"134"},{"size":1776,"mtime":1644827593544,"results":"165","hashOfConfig":"134"},{"size":1749,"mtime":1643644218224,"results":"166","hashOfConfig":"134"},{"size":680,"mtime":1644003509923,"results":"167","hashOfConfig":"134"},{"size":175,"mtime":1643696180133,"results":"168","hashOfConfig":"134"},{"size":656,"mtime":1643738990041,"results":"169","hashOfConfig":"134"},{"size":541,"mtime":1643701471448,"results":"170","hashOfConfig":"134"},{"size":175,"mtime":1643700844815,"results":"171","hashOfConfig":"134"},{"size":694,"mtime":1644003489334,"results":"172","hashOfConfig":"134"},{"size":535,"mtime":1643735485679,"results":"173","hashOfConfig":"134"},{"size":175,"mtime":1643734493576,"results":"174","hashOfConfig":"134"},{"size":663,"mtime":1644003544975,"results":"175","hashOfConfig":"134"},{"size":1635,"mtime":1643882356149,"results":"176","hashOfConfig":"134"},{"size":578,"mtime":1643737083128,"results":"177","hashOfConfig":"134"},{"size":575,"mtime":1643738091929,"results":"178","hashOfConfig":"134"},{"size":175,"mtime":1643736578225,"results":"179","hashOfConfig":"134"},{"size":1760,"mtime":1643875840558,"results":"180","hashOfConfig":"134"},{"size":559,"mtime":1643738651133,"results":"181","hashOfConfig":"134"},{"size":1923,"mtime":1643877751607,"results":"182","hashOfConfig":"134"},{"size":635,"mtime":1643739594545,"results":"183","hashOfConfig":"134"},{"size":1982,"mtime":1644003402005,"results":"184","hashOfConfig":"134"},{"size":1640,"mtime":1644003357364,"results":"185","hashOfConfig":"134"},{"size":1737,"mtime":1644003458487,"results":"186","hashOfConfig":"134"},{"size":691,"mtime":1644003371159,"results":"187","hashOfConfig":"134"},{"size":600,"mtime":1644823495205,"results":"188","hashOfConfig":"134"},{"size":219,"mtime":1645079310756,"results":"189","hashOfConfig":"134"},{"size":775,"mtime":1645079408292,"results":"190","hashOfConfig":"134"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},"n71n87",{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"193"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"193"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"193"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"193"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"193"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":16,"source":"218","usedDeprecatedRules":"193"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":6,"source":"221","usedDeprecatedRules":"193"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"193"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"193"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"193"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":10,"source":"269","usedDeprecatedRules":"193"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"193"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},"1g3zd92",{"filePath":"282","messages":"283","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"281"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"281"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":10,"source":"269","usedDeprecatedRules":"298"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"298"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"281"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"313"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"281"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"281"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"281"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"281"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"281"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"281"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"281"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"281"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"281"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"281"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"281"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"281"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"281"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"281"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"281"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"281"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\index.js",[],["416","417"],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\App.js",["418","419","420"],"import './App.css';\nimport { BrowserRouter, Route, Router, Switch, useLocation } from 'react-router-dom'\nimport SigninScreen from './screen/auth/singin';\nimport DashboardScreen from './screen/Dashboard';\nimport ItemsScreen from './screen/item';\nimport UnitScreen from './screen/unit';\nimport CategoryScreen from './screen/category';\nimport AreaScreen from './screen/area';\nimport SettingScreen from './screen/settings';\nimport RegulateScreen from './screen/regulate';\nimport ComplaintScreen from './screen/complaint';\n\nfunction App() {\n  var location = useLocation();\n  return (\n    <>\n\n      {location.pathname === '/signin'?\n        <Route exact path='/signin' component={SigninScreen} />\n      :\n          <div className=\"containerMain\">        \n                \n                {/* <Route exact path='/signup' component={signupScreen} /> */}\n                <Route exact path='/' component={DashboardScreen} />\n                <Route exact path='/items' component={ItemsScreen} />\n                <Route exact path='/units' component={UnitScreen} />\n                <Route exact path='/category' component={CategoryScreen} />\n                <Route exact path='/area' component={AreaScreen} />\n                <Route exact path='/settings' component={SettingScreen} />\n                <Route path='/regulate/:id' component={RegulateScreen} />\n                <Route path='/complaint' component={ComplaintScreen} />\n        </div>\n      }\n    </>\n  );\n}\n\nexport default App;\n","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reportWebVitals.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\store\\Store.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\item.js",["421","422","423","424"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { addItemsAction, deleteItemsAction, editItemsAction, listItemsAction } from \"../action/items\";\nimport { listCategoryAction } from \"../action/category\";\nimport { listUnitAction } from \"../action/unit\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { Link } from \"../../node_modules/react-router-dom/cjs/react-router-dom\";\nconst ItemsScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [minPrice, setMinPrice] = useState(\"\")\n    const [maxPrice, setMaxPrice] = useState(\"\")\n    const [unitId, setUnitId] = useState(\"\")\n    const [categoryId, setCategoryId] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    const [categoryFilter, setCategoryFilter] = useState(\"all\")\n    const [unitFilter, setUnitFilter] = useState(\"all\")\n    const [statusFilter, setStatusFilter] = useState(\"all\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const itemListData = useSelector(state => state.itemListData);\n    const { itemList, loading, error } = itemListData;\n\n    const itemAddData = useSelector(state => state.itemAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = itemAddData;\n\n    const itemDeleteData = useSelector(state => state.itemDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = itemDeleteData;\n\n    const itemEditData = useSelector(state => state.itemEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = itemEditData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList } = categoryListData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList } = unitListData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/items') : props.history.push('/signin');\n        dispatch(listItemsAction())\n        dispatch(listCategoryAction())\n        dispatch(listUnitAction())\n\n    }, [userInfo])\n\n    var selectItems = itemList?.filter(function (data) {\n        if (categoryFilter !== 'all' && unitFilter !== 'all' && statusFilter === \"all\") {\n            return data?.category === categoryFilter && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter === 'all' && unitFilter !== 'all' && statusFilter === \"active\") {\n            return data?.isActive === true && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter === 'all' && unitFilter !== 'all' && statusFilter === \"inActive\") {\n            return data?.isActive === false && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter !== 'all' && unitFilter === 'all' && statusFilter === \"active\") {\n            return data?.isActive === true && data?.category === categoryFilter;\n        }\n\n        if (categoryFilter !== 'all' && unitFilter === 'all' && statusFilter === \"inActive\") {\n            return data?.isActive === false && data?.category === categoryFilter;\n        }\n\n        if (categoryFilter !== 'all' && statusFilter === \"active\" && unitFilter !== 'all') {\n            return data.isActive === true && data?.category === categoryFilter && data.unit === unitFilter;\n        }\n        if (categoryFilter !== 'all' && statusFilter === \"inActive\" && unitFilter !== 'all') {\n            return data.isActive === false && data?.category === categoryFilter && data.unit === unitFilter;\n        }\n        if (unitFilter !== 'all') {\n            return data?.unit === unitFilter;\n        }\n        if (categoryFilter !== 'all') {\n            return data?.category === categoryFilter\n        }\n        if (statusFilter === \"active\") {\n            return data?.isActive === true;\n        }\n        if (statusFilter === \"inActive\") {\n            return data?.isActive === false;\n        }\n        if (statusFilter === \"all\") {\n            return data\n        }\n        else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Item Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Item Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Item Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addItemsAction(name, unitId, categoryId, isActive, minPrice, maxPrice))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editItemsAction(id, name, unitId, categoryId, isActive, minPrice, maxPrice))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteItemsAction(id))\n    }\n\n    const updateHandler = (item) => {\n        setId(item?._id)\n        setName(item?.name)\n        setMinPrice(item?.minPrice)\n        setMaxPrice(item?.maxPrice)\n        setUnitId(item?.unitId)\n        setCategoryId(item?.categoryId)\n        setIsActive(item.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Items</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select className=\"form-control bg-light rounded\" onChange={(e) => setStatusFilter(e.target.value)} id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Status</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group\">\n                                                        <select onChange={(e) => setCategoryFilter(e.target.value)} className=\"form-control  bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Category</option>\n                                                            <option value=\"all\">All</option>\n                                                            {categoryList?.map(category =>\n                                                                <option value={category?.name}>{category?.name}</option>\n                                                            )}\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group\">\n                                                        <select onChange={(e) => setUnitFilter(e.target.value)} className=\"form-control  bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Unit</option>\n                                                            <option value=\"all\">All</option>\n                                                            {unitList?.map(unit =>\n                                                                <option value={unit?.name}>{unit?.name}</option>\n                                                            )}\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {itemList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Min Price</th>\n                                                            <th scope=\"col\">Max Price</th>\n                                                            <th scope=\"col\">Unit</th>\n                                                            <th scope=\"col\">Category</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        {selectItems?.map(item =>\n                                                            <>\n                                                                <tr>\n                                                                    <th scope=\"row\">{serNo += 1}</th>\n                                                                    <td>{item?.name}</td>\n                                                                    <td>{item?.minPrice}</td>\n                                                                    <td>{item?.maxPrice}</td>\n                                                                    <td>{item?.unit}</td>\n                                                                    <td>{item?.category}</td>\n                                                                    <td>\n                                                                        <span class={item?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {item?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                    </td>\n                                                                    <td>\n                                                                        <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(item)} data-target={\"#edititems\" + item?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                        <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this item?')) deleteHandler(item?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                        <Link to={'/regulate/' + item?._id} title=\"Regulate\">\n                                                                            <i className=\"fa fa-eye text-success  ml-2\" style={{ cursor: \"pointer\" }} ></i>\n                                                                        </Link>\n                                                                        {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} title=\"active\"></i> */}\n                                                                    </td>\n                                                                </tr>\n\n\n                                                                {/* edit model */}\n\n                                                                <div className=\"modal fade\" id={\"edititems\" + item?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                        <div className=\"modal-content\">\n                                                                            <div className=\"modal-header text-center\">\n                                                                                <div className='modal-title w-100 '>\n                                                                                    <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                    <h4 className=\"text-muted\">Edit Item</h4>\n                                                                                </div>\n\n                                                                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                    <span aria-hidden=\"true\">&times;</span>\n                                                                                </button>\n                                                                            </div>\n\n                                                                            {editLoading &&\n                                                                                <div className=\"text-center\">\n                                                                                    <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                        <span className=\"sr-only\">Loading...</span>\n                                                                                    </div>\n                                                                                </div>}\n                                                                            {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n                                                                            <div className=\"modal-body\">\n                                                                                <form onSubmit={submitUpdHandler}>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Name\" />\n                                                                                    </div>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"number\" value={minPrice} onChange={(e) => setMinPrice(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Min Price\" />\n                                                                                    </div>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"number\" value={maxPrice} onChange={(e) => setMaxPrice(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Max Price\" />\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group\">\n                                                                                        <select value={unitId} onChange={(e) => setUnitId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\">\n                                                                                            <option value=\"\" disabled selected>Unit</option>\n                                                                                            {unitList?.map(unit =>\n                                                                                                <> {unit.isActive === true && <option value={unit?._id}>{unit?.name}</option>}</>\n                                                                                            )}\n\n                                                                                        </select>\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group\">\n                                                                                        <select value={categoryId} onChange={(e) => setCategoryId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\">\n                                                                                            <option value=\"\" disabled selected>Category</option>\n                                                                                            {categoryList?.map(category =>\n                                                                                                <> {category.isActive === true && <option value={category?._id}>{category?.name}</option>}</>\n                                                                                            )}\n                                                                                        </select>\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group \">\n                                                                                        <label className=\"checkbox checkbox-primary\">\n                                                                                            <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={item?.isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                                            <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                    </div>\n\n                                                                                    <div>\n                                                                                        <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Item</button>\n                                                                                    </div>\n\n                                                                                </form>\n                                                                            </div>\n\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </>\n                                                        )}\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Item</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Item Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Name\" required />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"number\" onChange={(e) => setMinPrice(e.target.value)} value={minPrice} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Min Price\" required />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"number\" onChange={(e) => setMaxPrice(e.target.value)} value={maxPrice} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Max Price\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <select onChange={(e) => setUnitId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\" required>\n                                                                <option value=\"\" disabled selected>Unit</option>\n                                                                {unitList?.map(unit =>\n                                                                    <> {unit.isActive === true && <option value={unit?._id}>{unit?.name}</option>}</>\n                                                                )}\n                                                            </select>\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <select onChange={(e) => setCategoryId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\" required>\n                                                                <option value=\"\" disabled selected>Category</option>\n                                                                {categoryList.map(category =>\n                                                                    <> {category.isActive === true && <option value={category?._id}>{category?.name}</option>}</>\n                                                                )}\n                                                            </select>\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Item</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default ItemsScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\unit.js",["425","426","427","428"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { addUnitAction, deleteUnitAction, editUnirAction, listUnitAction } from \"../action/unit\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\n\nconst UnitScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const unitAddData = useSelector(state => state.unitAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = unitAddData;\n\n    const unitDeleteData = useSelector(state => state.unitDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = unitDeleteData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList, loading, error } = unitListData;\n\n    const unitEditData = useSelector(state => state.unitEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = unitEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/units') : props.history.push('/signin');\n        dispatch(listUnitAction())\n    }, [userInfo])\n\n    var selectUnit = unitList?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Unit Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Unit Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Unit Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addUnitAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editUnirAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteUnitAction(id))\n    }\n\n    const updateHandler = (unit) => {\n        setId(unit?._id)\n        setName(unit?.name)\n        setDescription(unit?.description)\n        setIsActive(unit.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n                < div className=\" m-4\">\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Units</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Status</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {unitList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectUnit?.map(unit =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{unit?.name}</td>\n                                                                        <td>{unit?.description}</td>\n                                                                        <td>\n                                                                            <span class={unit?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {unit?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(unit)} data-target={\"#edititems\" + unit?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this unit?')) deleteHandler(unit?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + unit?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Unit</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                {editLoading &&\n                                                                                    <div className=\"text-center\">\n                                                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                            <span className=\"sr-only\">Loading...</span>\n                                                                                        </div>\n                                                                                    </div>}\n                                                                                {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={unit?.isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Unit</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Unit</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Unit Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} value={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Unit</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default UnitScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Dashboard.js",["429","430","431","432","433","434","435","436","437"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { listItemsAction } from \"../action/items\";\nimport { listCategoryAction } from \"../action/category\";\nimport { listUnitAction } from \"../action/unit\";\nimport { listAreaAction } from \"../action/area\";\nimport RegulareChart from \"./chart/regulateChart\";\nimport ItemBarChart from \"./chart/itemBarChart\";\nconst DashboardScreen = (props) => {\n    const dispatch = useDispatch()\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const itemListData = useSelector(state => state.itemListData);\n    const { itemList, loading: listItemLoading, error: listItemError } = itemListData;\n\n    const areaListData = useSelector(state => state.areaListData);\n    const { areaList, loading: listAreaLoading, error: listAreaError } = areaListData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList, loading: listCategoryLoading, error: listCategoryError } = categoryListData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList, loading: listUnitLoading, error: listUnitError } = unitListData;\n    useEffect(() => {\n        userInfo ? props.history.push('/') : props.history.push('/signin')\n        dispatch(listItemsAction())\n        dispatch(listCategoryAction())\n        dispatch(listUnitAction())\n        dispatch(listAreaAction())\n\n    }, [userInfo])\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {listItemLoading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div> :\n                        <>\n                            {listItemError ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n\n                                    <div className=\"row d-flex \">\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#ff9f00', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart orange\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{itemList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: \"#ff9f00\" }}>{itemList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Items</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#4CC790', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart green\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{areaList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: \"#4CC790\" }}>{areaList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Areas</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart \" style={{ borderBottomColor: '#3c9ee5' }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart blue\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{categoryList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: '#3c9ee5' }}>{categoryList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Categories</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#F75A5F', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart red\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{unitList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: '#F75A5F' }}>{unitList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Units</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-sm\">\n                                            <div className=\"shadow bg-white rounded p-2\">\n                                                <ItemBarChart />\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                </>\n                            }\n\n                        </>\n                    }\n\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default DashboardScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\category.js",["438","439","440","441"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { addCategoryAction, deleteCategoryAction, editCategoryAction, listCategoryAction } from \"../action/category\";\n\nconst CategoryScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const categoryAddData = useSelector(state => state.categoryAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = categoryAddData;\n\n    const categoryDeleteData = useSelector(state => state.categoryDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = categoryDeleteData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList, loading, error } = categoryListData;\n\n    const categoryEditData = useSelector(state => state.categoryEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = categoryEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/category') : props.history.push('/signin');\n        dispatch(listCategoryAction())\n    }, [userInfo])\n\n    var selectCategory = categoryList?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Category Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Category Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast(\"Category Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addCategoryAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editCategoryAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteCategoryAction(id))\n    }\n\n    const updateHandler = (category) => {\n        setId(category?._id)\n        setName(category?.name)\n        setDescription(category?.description)\n        setIsActive(category.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Categories</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option defaultValue=\"\" disabled selected>Status</option>\n                                                            <option defaultValue=\"all\">All</option>\n                                                            <option defaultValue=\"active\">Active</option>\n                                                            <option defaultValue=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {categoryList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectCategory?.map(category =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{category?.name}</td>\n                                                                        <td>{category?.description}</td>\n                                                                        <td>\n                                                                            <span className={category?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {category?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(category)} data-target={\"#edititems\" + category?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this category?')) deleteHandler(category?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\" ></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + category?._id} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Category</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                {editLoading &&\n                                                                                    <div className=\"text-center\">\n                                                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                            <span className=\"sr-only\">Loading...</span>\n                                                                                        </div>\n                                                                                    </div>}\n                                                                                {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" defaultValue={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" defaultValue={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={category?.isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Category</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Category</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Category Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} defaultValue={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} defaultValue={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Category</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default CategoryScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\settings.js",["442"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport { editPasswordAction } from \"../action/auth\";\n\nconst SettingScreen = (props) => {\n    const dispatch = useDispatch()\n    const [currentPassword, setCurrentPassword] = useState(\"\")\n    const [matchPassword, setMatchPassword] = useState(\"\")\n    const [updatePassword, setUpdatePassword] = useState(\"\")\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const passwordEditData = useSelector(state => state.passwordEditData);\n    const { loading, error, success } = passwordEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/settings') : props.history.push('/signin');\n    }, [userInfo])\n\n    if (success) {\n        toast.success(\"Password Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(editPasswordAction(currentPassword, updatePassword))\n    }\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n                    <ToastContainer />\n                    <div className='cart shadow bg-white rounded '>\n                        <div className='border border-top-0 border-left-0 border-right-0 '>\n                            <h5 className=\"text-muted pt-4 pb-4 pl-4\">Change Password</h5>\n                        </div>\n\n                        <form onSubmit={submitHandler} className=' p-3 mt-3'>\n                            {loading &&\n                                <div className=\"text-center\">\n                                    <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                        <span className=\"sr-only\">Loading...</span>\n                                    </div>\n                                </div>\n                            }\n\n                            {error &&\n                                <div className=' text-center'>\n                                    <p className=\"text-danger\">The current password is not match with old password.</p>\n                                </div>\n                            }\n\n                            <div className=\"form-group\">\n                                <input type=\"password\" onChange={(e) => setCurrentPassword(e.target.value)} value={currentPassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Current Password\" required />\n                            </div>\n                            <div className=\"form-group py-3\">\n                                <input type=\"password\" onChange={(e) => setUpdatePassword(e.target.value)} value={updatePassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password\" required />\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" onChange={(e) => setMatchPassword(e.target.value)} value={matchPassword} className={matchPassword !== updatePassword ? \"form-control is-invalid\" : \"form-control\"} id=\"validationServer03\" placeholder=\"City\" required />\n                                {matchPassword !== updatePassword &&\n                                    <div className=\"invalid-feedback\">\n                                        Please enter the same value again.\n                                    </div>\n                                }\n                            </div>\n                            <div className='pt-4'>\n                                <button type=\"submit\" className=\"btn btn-primary mr-3\" style={{ width: '100px' }} disabled={matchPassword !== updatePassword}>Save</button>\n                                <button className=\"btn btn-secondary\" onClick={() => props.history.push('/')} style={{ width: '100px' }}>Cancel</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default SettingScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\area.js",["443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport $ from 'jquery'\nimport { addAreaAction, deleteAreaAction, editAreaAction, listAreaAction } from \"../action/area\";\n\nconst AreaScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const areaAddData = useSelector(state => state.areaAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = areaAddData;\n\n    const areaDeleteData = useSelector(state => state.areaDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = areaDeleteData;\n\n    const areaListData = useSelector(state => state.areaListData);\n    const { areaList, loading, error } = areaListData;\n\n    const areaEditData = useSelector(state => state.areaEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = areaEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/area') : props.history.push('/signin');\n        dispatch(listAreaAction())\n    }, [userInfo])\n\n    var selectarea = areaList ?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data ?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data ?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Area Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Area Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Area Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addAreaAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editAreaAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteAreaAction(id))\n    }\n\n    const updateHandler = (area) => {\n        setId(area ?._id)\n        setName(area ?.name)\n        setDescription(area ?.description)\n        setIsActive(area ?.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Area</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Search</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {areaList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectarea ?.map(area =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{area ?.name}</td>\n                                                                        <td>{area ?.description}</td>\n                                                                        <td>\n                                                                            <span class={area ?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {area ?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(area)} data-target={\"#edititems\" + area ?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this area?')) deleteHandler(area ?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + area ?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Area</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={area ?.isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Area</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add area</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">area Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} value={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Area</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                    <ToastContainer />\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default AreaScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\regulate.js",["465","466","467","468","469","470","471","472","473"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { listRegulateItemsAction } from \"../action/regulateItems\";\n\nconst RegulateScreen = (props) => {\n    const dispatch = useDispatch()\n    let serNo = 0   \n    const itemId = props.match.params.id\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const regulateItemListData = useSelector(state => state.regulateItemListData);\n    const { regulateItemList, loading, error } = regulateItemListData;\n    \n    useEffect(() => {\n        userInfo ? props.history.push('/regulate/'+itemId) : props.history.push('/signin');\n        dispatch(listRegulateItemsAction(itemId))\n\n    }, [userInfo])\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <div className='cart shadow bg-white rounded p-3 '>\n                                    <div>\n                                        <h5 className=\"text-muted\">Regulate Items</h5>\n                                    </div>\n\n                                    {/* table */}\n                                    <div className='table-responsive '>\n                                        <table className=\"table table-bordered table table-hover\">\n                                            <thead>\n                                                <tr className='table-active'>\n                                                    <th scope=\"col\">#</th>\n                                                    <th scope=\"col\">Date</th>\n                                                    <th scope=\"col\">Min Price</th>\n                                                    <th scope=\"col\">Max Price</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody id=\"myTable\">\n                                                {regulateItemList ?.map(item =>\n                                                    <tr>\n                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                        <td>{new Date(item ?.createdAt).getDate() + '-' + new Date(item ?.createdAt).getMonth() + '-' + new Date(item ?.createdAt).getFullYear()}</td>\n                                                        <td>{item ?.minPrice}</td>\n                                                        <td>{item ?.maxPrice}</td>\n                                                    </tr>\n                                                )}\n                                            </tbody>\n                                        </table>\n                                    </div>\n\n                                </div>\n\n                            }\n                        </>\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default RegulateScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\auth\\singin.js",["474"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { signin } from '../../action/auth'\nimport Logo from '../assets/Logo.jpeg'\nimport '../style/Login.css'\nimport $ from 'jquery'\nimport 'jquery-validation'\n\nconst SigninScreen = (props) => {\n\tconst dispatch = useDispatch()\n\tconst [email, setEmail] = useState();\n\tconst [password, setPassword] = useState();\n\tconst userSignin = useSelector(state => state.userSignin);\n\tconst { loading, userInfo, error } = userSignin;\n\n\tuseEffect(() => {\n\t\tif (userInfo) {\n      window.location.href = \"/\"\n      // window.location.reload()\n    }\t\t\n\t}, [userInfo])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(signin(email, password));\n\t}\n\n\treturn (\n\n\t\t<div className='login'>\n\n\t\t\t<div className=\"cover\"></div>\n\t\t\t<div style={{ maxWidth: \"430px\", margin: \"100px auto 50px\" }}>\n\t\t\t\t<div className=\"text-center mb-5\">\n\t\t\t\t\t<span className=\"auth-head-icon\"><i className=\"fa fa-user\"></i></span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ibox login-box\">\n\t\t\t\t\t<form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\n\t\t\t\t\t\t<h4 className=\"font-strong text-center py-4 \">LOG IN</h4>\n\n\t\t\t\t\t\t{loading &&\n\t\t\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t\t\t<div class=\"spinner-border text-primary\" role=\"status\">\n\t\t\t\t\t\t\t\t\t<span class=\"sr-only\">Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{error && <div className=\"text-danger text-center\">Invaled Username or Password</div>}\n\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setEmail(e.target.value)} value={email} type=\"text\" name=\"email\" placeholder=\"Email\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} value={password} type=\"password\" name=\"password\" placeholder=\"Password\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"flexbox mb-5\">\n\t\t\t\t\t\t\t<label className=\"checkbox checkbox-primary\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"remember\" id=\"remember\" />\n\t\t\t\t\t\t\t\t<span className=\"input-span\"></span> Remember\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<a className=\"color-inherit\" >Forgot password?</a>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div className=\"text-center pb-4\">\n\t\t\t\t\t\t\t<button type='submit' className=\"btn btn-primary btn-rounded btn-block\">LOGIN</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t)\n}\n$(function () {\n\t$('#login-form').validate({\n\t\terrorClass: \"help-block\",\n\n\t\trules: {\n\t\t\temail: {\n\t\t\t\trequired: true,\n\t\t\t\temail: true\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\trequired: true\n\t\t\t}\n\t\t},\n\t\thighlight: function (e) {\n\t\t\t$(e).closest(\".form-group\").addClass(\"has-error\")\n\t\t},\n\t\tunhighlight: function (e) {\n\t\t\t$(e).closest(\".form-group\").removeClass(\"has-error\")\n\t\t},\n\t});\n});\nexport default SigninScreen\n\n\n","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\regulateItems.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Navbar.js",["475","476","477","478","479","480"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\nimport Cookie from 'js-cookie'\nimport ProfileImg from './assets/profile.png'\nimport 'bootstrap/js/dist/tab';\nimport logo from './assets/Logo.jpeg'\nimport './style/Navbar.css'\nimport './style/Sidebar.css'\n\nconst Navbar = () => {\n    const history = useHistory()\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n    const [sidebarOpen, setsidebarOpen] = useState(false);\n    const openSidebar = () => {\n        setsidebarOpen(true);\n    };\n    const closeSidebar = () => {\n        setsidebarOpen(false);\n    };\n\n    const logoutHandler = () => {\n        Cookie.remove(\"userInfo\");\n        history.push('/signin')\n        window.location.reload()\n    };\n\n\n    return (\n        <>\n\n            <nav className=\"navbar shadow\">\n                <div className=\"nav_icon\" onClick={() => openSidebar()}>\n                    <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"navbar__left\">\n                    {/* <a href=\"#\">Subscribers</a>\n                <a href=\"#\">Video Management</a>\n                <a className=\"active_link\" href=\"#\">\n                Admin\n                </a> */}\n                </div>\n                <div className=\"navbar__right\">\n                    {/* <a href=\"#\">\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </a>\n                <a href=\"#\">\n                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\n                </a> */}\n                    <div className='chip'>\n                        <span className=\"dropdown\">\n                            <img src={ProfileImg} style={{ cursor: 'pointer' }} className=\"rounded-circle dropdown-toggle navImg\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\n                            <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                                <div style={{ width: '200px', margin: 'auto' }}>\n                                    <img src={ProfileImg} className=\"card-img-top rounded-circle\" style={{ width: '100px', display: \"block\", margin: 'auto' }} alt=\"Card image cap\" />\n                                    <h5 className=\"card-title text-center\">{userInfo?.data?.name}</h5>\n                                    <div className=\"card-body text-center\">\n                                        {/* <Link to='/profile' className=\" btn btn-info shadow rounded mr-2\"> <i className=\"fas fa-user\"></i></Link> */}\n                                        <button onClick={() => { if (window.confirm('Are you sure you want to log out?')) { logoutHandler() }; }} className=\" btn btn-danger shadow rounded\"> <i className=\"fas fa-sign-out-alt\"></i></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </span>\n                        <span className=\"text-dark mx-2 h6\">{userInfo?.data?.name}</span>\n                    </div>\n                </div>\n            </nav>\n\n            <div className={sidebarOpen ? \"sidebar_responsive\" : \"\"} id=\"sidebar\">\n                <div className=\"sidebar__title\">\n                    <div className=\"sidebar__img\">\n                        {/* <Link to='/'>\n                    <img src={logo} alt=\"logo\" />\n\n                    </Link> */}\n                        <h4 className=\"title\">ADMIN</h4>\n                    </div>\n                    <i\n                        onClick={() => closeSidebar()}\n                        className=\"fa fa-times\"\n                        id=\"sidebarIcon\"\n                        aria-hidden=\"true\"\n                    ></i>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/' activeClassName='text-success'>\n                            <i className=\"fa fa-home icon\"> </i>\n                            <p>Dashboard</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                {/* <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/regulate' activeClassName='text-success'>\n                            <i className=\"fa fa-save icon\"> </i>\n                            <p>Regulate Items</p>\n                        </NavLink>\n                    </div>\n                </div> */}\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/items' activeClassName='text-success'>\n                            <i className=\"fa fa-columns icon\"> </i>\n                            <p>Items</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/category' activeClassName='text-success'>\n                            <i className=\"fa fa-align-justify icon\"> </i>\n                            <p>Categories</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/units' activeClassName='text-success'>\n                            <i className=\"fa fa-grip-lines icon\"> </i>\n                            <p>Units</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/area' activeClassName='text-success'>\n                            <i className=\"fa fa-compass icon\"> </i>\n                            <p>Area</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/complaint' activeClassName='text-success'>\n                            <i className=\"fa fa-comment icon\"> </i>\n                            <p>Complaints</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/settings' activeClassName='text-success'>\n                            <i className=\"fa fa-cog icon\"> </i>\n                            <p>Settings</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n            </div>\n\n        </>\n    )\n}\n\nexport default Navbar;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\regulateItems.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\regulateItem.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\regulateChart.js",["481"],"import react from 'react'\r\nimport { Chart } from \"react-google-charts\";\r\n\r\n\r\nconst RegulareChart = () => {\r\n\r\n    return (\r\n        <>\r\n        <h4 className='text-center pt-2'>Rates Analytics </h4>\r\n        <Chart\r\n        \r\n        chartType=\"AreaChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={[\r\n          ['Style', 'Fruit', 'Vagetible', 'Poultry'],\r\n          ['Sun', 92, 96, 2],\r\n          ['Mon', 86, 80, 32],\r\n          ['Tue', 76, 70, 23],\r\n          ['Wed', 56, 60, 34],\r\n          ['Thu', 59, 50, 63],\r\n          ['Fri', 72, 22, 60],\r\n          ['Sat', 80, 17, 40],\r\n        ]}\r\n        options={{\r\n          isStacked: false,\r\n          height: 300,\r\n          legend: { position: 'top', maxLines: 3 },\r\n          vAxis: {\r\n            minValue: 0,\r\n          },\r\n          hAxis: {\r\n            title: 'Date'\r\n          },\r\n        }}\r\n        rootProps={{ 'data-testid': '2' }}\r\n      /> \r\n      </>      \r\n    )\r\n}\r\n\r\nexport default RegulareChart","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\itemBarChart.js",["482","483","484","485","486","487","488","489","490","491","492","493","494","495"],"import react, { useState } from 'react'\r\nimport { Chart } from \"react-google-charts\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nconst ItemBarChart = (props) => {\r\n  const [chartSelect, setcChartSelect] = useState(1)\r\n\r\n  const itemListData = useSelector(state => state.itemListData);\r\n  const { itemList, loading: listItemLoading, error: listItemError } = itemListData;\r\n\r\n  const getFruits = () => {\r\n    var data = []\r\n    data.push(['Item', \"Max Price\", \"Min Price\"])\r\n\r\n    var fruitData = itemList.filter(function (item) {\r\n      return item ?.category === 'fruit' || item ?.category === 'fruits' \r\n    })\r\n    fruitData.map(item =>\r\n      data.push([item.name, item ?.maxPrice, item ?.minPrice])\r\n    )\r\n    return data\r\n  }\r\n\r\n  const getVagetable = () => {\r\n    var data = []\r\n    data.push(['Item', \"Max Price\", \"Min Price\"])\r\n\r\n    var vagetableData = itemList.filter(function (item) {\r\n      return item ?.category === 'vegetable' || item ?.category === 'vegetables' ||  item ?.category === 'vagetable' || item ?.category === 'vagetables'\r\n    })\r\n    vagetableData.map(item =>\r\n      data.push([item.name, item ?.maxPrice, item ?.minPrice])\r\n    )\r\n    return data\r\n  }\r\n\r\n  function chartData() {\r\n    if (chartSelect === 1) {\r\n      return getFruits()\r\n    }\r\n    if (chartSelect === 2) {\r\n      return getVagetable()\r\n    }\r\n    else {\r\n      return getFruits()\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='d-flex justify-content-between'>\r\n        <div className=''>\r\n          <h3 className='text-center text-muted '>Rates Analytics</h3>\r\n        </div>\r\n\r\n        <div className=\"dropdown d-flex justify-content-end mt-2\">\r\n\r\n          <button className=\"btn btn-primary mx-1 mb-1\" onClick={() => setcChartSelect(1)} >Fruits</button>\r\n          <button className=\"btn btn-success mx-1 mb-1\" onClick={() => setcChartSelect(2)}>Vegetables</button>\r\n        </div>\r\n      </div>\r\n      <Chart\r\n        // width={'500px'}\r\n        // height={'300px'}\r\n\r\n        chartType=\"ComboChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={\r\n          chartData()\r\n        }\r\n        options={{\r\n          // colors: ['#FB7A21'],\r\n          // backgroundColor: '#2F4F4F',\r\n          chart: {\r\n            title: 'Company Performance',\r\n            subtitle: 'Sales, Expenses, and Profit: 2014-2017',\r\n          },\r\n          legend: { position: 'none' },\r\n          title: \"weeklyTitle\",\r\n          titleTextStyle: { color: '#FFF' },\r\n          // vAxis: { title: 'Percentage', titleTextStyle: { color: '#FFF' }, textStyle: { color: '#FFF' } },\r\n          // hAxis: { title: 'Month', fontSize: 28, titleTextStyle: { color: '#FFF' }, textStyle: { color: '#FFF' } },\r\n          seriesType: 'bars',\r\n          series: { 5: { type: 'line' } },\r\n        }}\r\n        rootProps={{ 'data-testid': '1' }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ItemBarChart","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\complaint.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\complaint.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\complaint.js",["496","497","498","499","500"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport $ from 'jquery'\nimport { listComplaintAction } from \"../action/complaint\";\nimport NotFound from './assets/notfound.png'\n\nconst ComplaintScreen = (props) => {\n    const dispatch = useDispatch()\n    const [loaded, setLoaded] = useState(false)\n    let serNo = 0\n    function showImage() {\n        return setLoaded(true)\n    }\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const complaintListData = useSelector(state => state.complaintListData);\n    const { complaintList, loading, error } = complaintListData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/complaint') : props.history.push('/signin');\n        dispatch(listComplaintAction())\n    }, [userInfo])\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Area</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {complaintList.length === 0 ? <h5 className=\"text-muted text-center\">Complaint Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Contact</th>\n                                                            <th scope=\"col\">Details</th>\n                                                            <th scope=\"col\">image</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {complaintList?.map(complaint =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{complaint?.name}</td>\n                                                                        <td>{complaint?.contactNo}</td>\n                                                                        <td>{complaint?.detail}</td>\n                                                                        <td>\n                                                                            <img src={NotFound} width=\"100\" height=\"50\" style={loaded ? { display: \"none\" } : {}} />\n\n                                                                            <img src={'http://localhost:5000/' + complaint.image} width=\"100\" height=\"50\" onLoad={showImage} style={loaded ? {} : { display: \"none\" }} />\n\n                                                                        </td>\n\n                                                                    </tr>\n\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                    <ToastContainer />\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default ComplaintScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\complaint.js",[],"G:\\expert system\\server\\client\\src\\index.js",[],["501","502"],"G:\\expert system\\server\\client\\src\\App.js",["503","504","505","506"],"import './App.css';\nimport { BrowserRouter, Route, Router, Switch, useLocation } from 'react-router-dom'\nimport StartScreen from './screen/StartScreen';\nimport DetailScreen from './screen/DetailScreen';\nimport ContactScreen from './screen/Contact';\nimport SigninScreen from './screen/auth/singin';\nimport SignupScreen from './screen/auth/signup';\nimport DashboardScreen from './screen/admin/Dashboard';\nimport AdminDetailScreen from './screen/admin/DetailScreen';\nimport AdminUserScreen from './screen/admin/user';\nimport AdminMessageScreen from './screen/admin/Message';\nimport SettingScreen from './screen/admin/Setting';\nimport ClientSigninScreen from './screen/Signin';\nimport ClientSignupScreen from './screen/signup';\nimport ClientForgotPasswordScreen from './screen/forgotPassord';\nimport ClientNewPasswordScreen from './screen/newPassword';\nimport ProfileScreen from './screen/Profile';\nimport UplaodFileScreen from './screen/admin/UplaodFile';\nimport RequestPremiumScreen from './screen/admin/RequestPremium';\nimport VerifiedScreen from './screen/verified';\n\nfunction App() {\n  var location = useLocation();\n  return (\n    <div className=\"\">\n      <>\n        <Route exact path='/' component={StartScreen} />\n        <Route exact path='/frequent-itemset' component={DetailScreen} />\n        <Route exact path='/contact' component={ContactScreen} />\n        <Route exact path='/profile' component={ProfileScreen} />\n        <Route exact path='/signin' component={ClientSigninScreen} />\n        <Route exact path='/signup' component={ClientSignupScreen} />\n        <Route exact path='/reset-password' component={ClientForgotPasswordScreen} />\n        <Route exact path='/reset/:token' component={ClientNewPasswordScreen} />\n        <Route exact path='/account/confirm/:token' component={VerifiedScreen} />\n      </>\n      <div>\n        <Route exact path='/admin/signin' component={SigninScreen} />\n        <Route exact path='/admin/add-user' component={SignupScreen} />\n        <Route exact path='/admin/dashboard' component={DashboardScreen} />\n        <Route exact path='/admin/product-association' component={UplaodFileScreen} />\n        <Route exact path='/admin/detail' component={AdminDetailScreen} />\n        <Route exact path='/admin/user' component={AdminUserScreen} />\n        <Route exact path='/admin/request-premium' component={RequestPremiumScreen} />\n        <Route exact path='/admin/message' component={AdminMessageScreen} />\n        <Route exact path='/admin/settings' component={SettingScreen} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","G:\\expert system\\server\\client\\src\\reportWebVitals.js",[],"G:\\expert system\\server\\client\\src\\store\\Store.js",[],"G:\\expert system\\server\\client\\src\\screen\\auth\\singin.js",["507","508","509"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { signin } from '../../action/auth'\nimport Logo from '../assets/Logo.png'\nimport '../style/Login.css'\nimport $ from 'jquery'\nimport 'jquery-validation'\nimport { adminSigninAction } from '../../action/admin/auth'\n\nconst SigninScreen = (props) => {\n\tconst dispatch = useDispatch()\n\tconst [email, setEmail] = useState();\n\tconst [password, setPassword] = useState();\n\n\tconst adminSignin = useSelector(state => state.adminSignin);\n\tconst { loading, success, adminInfo, error } = adminSignin;\n\n\tuseEffect(() => {\n\t\tif (adminInfo) {\n\t\t\twindow.location.href = \"/admin/dashboard\"\n\t\t}\n\t}, [adminInfo])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(adminSigninAction(email, password));\n\t}\n\n\treturn (\n\n\t\t<div className='login'>\n\n\t\t\t<div className=\"cover\"></div>\n\t\t\t<div style={{ maxWidth: \"430px\", margin: \"100px auto 50px\" }}>\n\t\t\t\t<div className=\"text-center mb-5\">\n\t\t\t\t\t<span className=\"auth-head-icon\"><i className=\"fa fa-user\"></i></span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ibox login-box\">\n\t\t\t\t\t<form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\n\t\t\t\t\t\t<h4 className=\"font-strong text-center py-4 \">LOG IN</h4>\n\n\t\t\t\t\t\t{loading &&\n\t\t\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t\t\t<div class=\"spinner-border text-primary\" role=\"status\">\n\t\t\t\t\t\t\t\t\t<span class=\"sr-only\">Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{success && <div className=\"text-primary text-center h6\">{adminInfo.message}</div>}\n\t\t\t\t\t\t{error && <div className=\"text-danger text-center h6\">{error.message}</div>}\n\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setEmail(e.target.value)} value={email} type=\"text\" name=\"email\" placeholder=\"Email\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} value={password} type=\"password\" name=\"password\" placeholder=\"Password\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"flexbox mb-5\">\n\t\t\t\t\t\t\t<label className=\"checkbox checkbox-primary\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"remember\" id=\"remember\" />\n\t\t\t\t\t\t\t\t<span className=\"input-span\"></span> Remember\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<a className=\"color-inherit\" >Forgot password?</a>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div className=\"text-center pb-4\">\n\t\t\t\t\t\t\t<button type='submit' className=\"btn btn-success btn-rounded btn-block\">LOGIN</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default SigninScreen\n\n\n","G:\\expert system\\server\\client\\src\\reducer\\auth.js",[],"G:\\expert system\\server\\client\\src\\action\\auth.js",[],"G:\\expert system\\server\\client\\src\\screen\\chart\\itemBarChart.js",["510","511","512","513","514","515","516","517","518","519","520","521","522","523"],["524","525"],"G:\\expert system\\server\\client\\src\\screen\\chart\\regulateChart.js",["526"],"G:\\expert system\\server\\client\\src\\contant\\auth.js",[],"G:\\expert system\\server\\client\\src\\screen\\StartScreen.js",["527","528","529","530","531"],"G:\\expert system\\server\\client\\src\\screen\\Navbar.js",["532","533","534","535","536","537"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport ProfileImg from './assets/profile.png'\r\nimport Cookie from 'js-cookie'\r\nimport { premiumRequest } from '../action/premium';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { refreshUser } from '../action/user';\r\n\r\nconst Navbar = (props) => {\r\n  const dispatch = useDispatch()\r\n  \r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const {userInfo } = userSignin;\r\n  \r\n  const userRefreshRed = useSelector(state => state.userRefreshRed);\r\n  const {userRef } = userRefreshRed;\r\n\r\n  const premiumRequestRed = useSelector(state => state.premiumRequestRed);\r\n  const { loading, success, premiumReq, error } = premiumRequestRed;\r\n\r\n  const logoutHandler = () => {\r\n    Cookie.remove(\"userInfo\");\r\n    window.location.href = \"/signin\"\r\n  };\r\n\r\n  const premiumHandler = () => {\r\n    // e.preventDefault()\r\n    dispatch(premiumRequest())\r\n  }\r\n\r\n  if (success) {\r\n    toast.success(premiumReq.message);\r\n  }\r\n  if (error) {\r\n    toast.error(error.message);\r\n  }\r\n\r\n  useEffect(() =>{\r\n    dispatch(refreshUser())\r\n  },[])\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg bg-white shadow-sm \">\r\n      <NavLink to=\"/\" exact={true} activeClassName='text-success' className=\"navbar-brand mb-0 h1 mx-2 \">Expert System</NavLink>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"fa fa-bars \"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <NavLink to=\"/contact\" exact={true} activeClassName='text-success' className=\"nav-link mb-0 h5  mx-2\" >Get Support </NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n        {true &&\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item active\">\r\n              <div className='chip'>\r\n                <span className=\"dropdown\">\r\n                  <img src={ProfileImg} style={{ cursor: 'pointer' }} className=\"rounded-circle dropdown-toggle navImg\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\r\n                  <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\r\n                    <div style={{ width: '200px', margin: 'auto' }}>\r\n                      <img src={ProfileImg} className=\"card-img-top rounded-circle\" style={{ width: '100px', display: \"block\", margin: 'auto' }} alt=\"Card image cap\" />\r\n                      <h5 className=\"card-title text-center\">{userInfo?.user?.name}</h5>\r\n                      <div className=\"card-body text-center\">\r\n                        {/* <NavLink to='/profile' className=\" btn btn-info shadow rounded mr-2\"> <i className=\"fas fa-user\"></i></NavLink> */}\r\n                        <button onClick={() => { if (window.confirm('Are you sure you want to log out?')) {logoutHandler() }; }} className=\" btn btn-danger shadow rounded\"> <i className=\"fas fa-sign-out-alt\"></i></button>\r\n                        <Link to=\"/profile\" exact={true} activeClassName='text-success' className=\" btn btn-success shadow rounded mx-2\"> <i className=\"fas fa-user-alt\"></i></Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </span>\r\n                <span className=\"text-dark mx-2 h6\"> {userRef?.isPremium === true &&<span className='fas fa-crown text-success'></span>} {userInfo?.user?.name}</span>\r\n              </div>\r\n            </li>\r\n            <li className=\"nav-item active my-1\">\r\n              {userRef?.isPremium === false && <button onClick={() => { if (window.confirm('Request a Premium Account?')) { premiumHandler()} }} className=\" btn btn-success shadow rounded mx-2\"> <i className=\"fas fa-crown\"></i></button>} \r\n            </li>\r\n            <ToastContainer />\r\n          </ul> \r\n        }\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}\r\n\r\nexport default Navbar","G:\\expert system\\server\\client\\src\\screen\\actionButton.js",["538"],"G:\\expert system\\server\\client\\src\\screen\\ActionButton.js",["539"],"import React from 'react'\r\nimport './style/actionButton.css'\r\n\r\nconst ActionButton = () => {\r\n    return (\r\n        <>\r\n            <div className=\"zoom\">\r\n                <a target='_blank' href=\"https://wa.me/+923088887580\" className=\"zoom-btn-large\" id=\"zoomBtn\" >\r\n                    <i className=\"fa fa-whatsapp fa-4x\"></i>\r\n                </a>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionButton",["540","541"],"G:\\expert system\\server\\client\\src\\screen\\Contact.js",["542","543"],"import React, { useEffect, useState } from 'react';\r\nimport Navbar from './Navbar';\r\nimport contactImg from './assets/contact.png'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { messageRequest } from '../action/message';\r\n\r\nconst ContactScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [message, setMessage] = useState(\"\")\r\n    const [file, setFile] = useState(\"\")\r\n    var formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('message', message);\r\n    \r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const messageRequestRed = useSelector(state => state.messageRequestRed);\r\n    const { loading, success, messageReq, error } = messageRequestRed;\r\n\r\n    useEffect(() => {\r\n        userInfo ? props.history.push('/contact') : props.history.push('/signin')\r\n    }, [userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(messageRequest(formData))\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"m-4\">\r\n                <div className='cart shadow bg-white rounded p-3 '>\r\n                    <div className=\"row justify-content-around my-3\">\r\n                        <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                            <img width=\"60%\" src={contactImg} />\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-6\">\r\n                            <h3 className='text-muted text-center pb-3'>Get in touch </h3>\r\n\r\n                            <form onSubmit={submitHandler}>\r\n\r\n                                {loading &&\r\n                                    <div class=\"text-center\">\r\n                                        <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                            <span class=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                                {success && <div className=\"text-primary text-center h6\">{messageReq.message}</div>}\r\n\r\n\r\n                                <div className=\"form-group custom-file mb-3\">\r\n                                    <input onChange={(e) => setFile(e.target.files[0])} type=\"file\" className=\"custom-file-input \" id=\"customFile\"  />\r\n                                    <label  className=\"form-control rounded border-top-0 border-left-0 border-right-0 custom-file-label bg-light rounded\" for=\"customFile\">{file?  file?.name:  \"Choose file (Optional)\"} </label>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <textarea onChange={(e) => setMessage(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0 bg-light rounded\" id=\"exampleFormControlTextarea1\" placeholder=\"Message\" rows=\"3\" required />\r\n                                </div>\r\n\r\n                                <div className=\"text-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-success  text-center\">\r\n                                        Send <i className=\"fas fa-arrow-right\">  </i>\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactScreen","G:\\expert system\\server\\client\\src\\screen\\DetailScreen.js",["544","545","546","547","548","549"],"G:\\expert system\\server\\client\\src\\screen\\auth\\signup.js",["550","551","552","553","554","555","556","557"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { signup } from '../../action/auth'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from 'react-router-dom';\nimport Navbar from '../admin/Navbar';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\nimport { adminSignupAction } from '../../action/admin/auth';\n\nconst SignupScreen = (props) => {\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [name, setName] = useState('');\n    const [accessLevel, setAccessLevel] = useState(1);\n    const [visible, setVisible] = useState(true)\n\n    const adminSignup = useSelector(state => state.adminSignup);\n    const { loading, success, adminSignupInfo, error } = adminSignup;\n\n    const adminSignin = useSelector(state => state.adminSignin);\n    const { adminInfo } = adminSignin;\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(adminSignupAction(name, email, password, visible));\n    }\n\n    useEffect(() => {\n        adminInfo ? props.history.push('/admin/add-user') : props.history.push('/admin/signin')\n    }, [adminInfo])\n\n    return (\n        <div className='containerMain'>\n            <Navbar />\n            <main>\n                <form onSubmit={submitHandler} className='card text-dark bg-white shadow rounded-lg mb-3' style={{ maxWidth: '500px', margin: '20px auto' }}>\n                    <h5 className=\"card-header text-center text-dark\">Add User </h5>\n                    <div className=\"card-body\">\n                        {loading &&\n                            <div class=\"text-center\">\n                                <div class=\"spinner-border text-primary\" role=\"status\">\n                                    <span class=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n                        }\n                        {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\n                        {success && <div className=\"text-primary text-center h6\">{adminSignupInfo.message}</div>}\n\n                        <div className=\"form-group\">\n                            {/* <label className=\"card-title bg-info w-100 text-white\" for=\"name\">Name:</label> */}\n                            <input type=\"text\" className=\"form-control border-top-0 border-left-0 border-right-0\" id=\"name\" placeholder=\"Enter Name\" name=\"name\" onChange={(e) => setName(e.target.value)} required />\n                        </div>\n\n                        <div className=\"form-group\">\n                            {/* <label className=\"card-title bg-info w-100 text-white\" for=\"email\">email:</label> */}\n                            <input type=\"email\" className=\"form-control border-top-0 border-left-0 border-right-0\" id=\"email\" placeholder=\"Enter Email\" name=\"Email\" onChange={(e) => setEmail(e.target.value)} required />\n                        </div>\n\n                        <div className=\"form-group\">\n                            {/* <label className=\"card-title bg-info w-100 text-white\" for=\"pwd\">Password:</label> */}\n                            <input type=\"password\" className=\"form-control border-top-0 border-left-0 border-right-0\" id=\"pwd\" placeholder=\"Enter password\" name=\"pswd\" onChange={(e) => setPassword(e.target.value)} required />\n                        </div>\n\n                        <div className=\"form-group\" >\n                            <BootstrapSwitchButton\n                                checked={visible}\n                                onlabel='Super Admin'\n                                onstyle='success'\n                                offlabel='Sub Admin'\n                                offstyle='info'\n                                style='w-100'\n                               onChange={() => setVisible(!visible)}\n                            />\n                        </div>\n\n\n\n                        <button type=\"submit\" style={{ width: '100%' }} className=\"btn btn-success shadow rounded-lg font-weight-bold\">Submit</button>\n                    </div>\n                </form>\n            </main>\n        </div>\n    )\n}\n\nexport default SignupScreen\n\n\n","G:\\expert system\\server\\client\\src\\screen\\admin\\Navbar.js",["558","559","560","561","562","563","564","565","566","567"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\nimport Cookie from 'js-cookie'\nimport ProfileImg from '../assets/profile.png'\nimport 'bootstrap/js/dist/tab';\nimport logo from '../assets/Logo.png'\nimport '../style/Navbar.css'\nimport '../style/Sidebar.css'\n\nconst Navbar = () => {\n    const history = useHistory()\n    const adminSignin = useSelector(state => state.adminSignin);\n\tconst { loading, success, adminInfo, error } = adminSignin;\n\n    const [sidebarOpen, setsidebarOpen] = useState(false);\n\n    const openSidebar = () => {\n        setsidebarOpen(true);\n    };\n    const closeSidebar = () => {\n        setsidebarOpen(false);\n    };\n\n    const logoutHandler = () => {\n        Cookie.remove(\"adminInfo\");\n        window.location.href='/admin/signin'\n    };\n\n    return (\n        <>\n\n            <nav className=\"navbar_main shadow\">\n                <div className=\"nav_icon\" onClick={() => openSidebar()}>\n                    <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"navbar__left\">\n                    {/* <a href=\"#\">Subscribers</a>\n                <a href=\"#\">Video Management</a>\n                <a className=\"active_link\" href=\"#\">\n                Admin\n                </a> */}\n                </div>\n                <div className=\"navbar__right\">\n                    {/* <a href=\"#\">\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </a>\n                <a href=\"#\">\n                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\n                </a> */}\n                    <div className='chip'>\n                        <span className=\"dropdown\">\n                            <img src={ProfileImg} style={{ cursor: 'pointer' }} className=\"rounded-circle dropdown-toggle navImg\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\n                            <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                                <div style={{ width: '200px', margin: 'auto' }}>\n                                    <img src={ProfileImg} className=\"card-img-top rounded-circle\" style={{ width: '100px', display: \"block\", margin: 'auto' }} alt=\"Card image cap\" />\n                                    <h5 className=\"card-title text-center\">{adminInfo?.user?.name || \"User name\"}</h5>\n                                    <div className=\"card-body text-center\">\n                                        {/* <Link to='/profile' className=\" btn btn-info shadow rounded mr-2\"> <i className=\"fas fa-user\"></i></Link> */}\n                                        <button onClick={() => { if (window.confirm('Are you sure you want to log out?')) { logoutHandler() }; }} className=\" btn btn-danger shadow rounded\"> <i className=\"fas fa-sign-out-alt\"></i></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </span>\n                        <span className=\"text-dark mx-2 h6\">{adminInfo?.user?.name || \"User Name\"}</span>\n                    </div>\n                </div>\n            </nav>\n\n            <div className={sidebarOpen ? \"sidebar_responsive\" : \"\"} id=\"sidebar\">\n                <div className=\"sidebar__title\">\n                    <div className=\"sidebar__img\">\n                        {/* <Link to='/'>\n                    <img src={logo} alt=\"logo\" />\n\n                    </Link> */}\n                        <h4 className=\"title\">ADMIN</h4>\n                    </div>\n                    <i\n                        onClick={() => closeSidebar()}\n                        className=\"fa fa-times\"\n                        id=\"sidebarIcon\"\n                        aria-hidden=\"true\"\n                    ></i>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/dashboard' activeClassName='text-success'>\n                            <i className=\"fa fa-home icon\"> </i>\n                            <p>Dashboard</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/product-association' activeClassName='text-success'>\n                            <i className=\"fas fa-file-upload icon\"> </i>\n                            <p>Product Association</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/request-premium' activeClassName='text-success'>\n                            <i className=\"fas fa-crown icon\"> </i>\n                            <p>Request Premium</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/user' activeClassName='text-success'>\n                            <i className=\"fa fa-user icon\"> </i>\n                            <p>User</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/message' activeClassName='text-success'>\n                            <i className=\"fa fa-comment icon\"> </i>\n                            <p>Message</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/settings' activeClassName='text-success'>\n                            <i className=\"fa fa-cog icon\"> </i>\n                            <p>Settings</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n            </div>\n\n        </>\n    )\n}\n\nexport default Navbar;","G:\\expert system\\server\\client\\src\\screen\\admin\\Dashboard.js",["568","569","570"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../App.css';\r\nimport Navbar from \"./Navbar\";\r\nimport '../style/dashboard.css'\r\nimport PremiumChartScreen from \"./chart.js/PremiumChart\";\r\nimport { userListAction } from \"../../action/admin/user\";\r\nimport { messageListAction } from \"../../action/admin/message\";\r\nimport { premiumListAction } from \"../../action/admin/premium\";\r\n\r\nconst DashboardScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const adminSignin = useSelector(state => state.adminSignin);\r\n    const { adminInfo } = adminSignin;\r\n\r\n    const userListRed = useSelector(state => state.userListRed)\r\n    const { loading, error, userList } = userListRed\r\n\r\n    const messageListRed = useSelector(state => state.messageListRed);\r\n    const { messageList } = messageListRed;\r\n\r\n    const premiumListRed = useSelector(state => state.premiumListRed);\r\n    const { premiumList } = premiumListRed\r\n\r\n    useEffect(() => {\r\n        adminInfo ? props.history.push('/admin/dashboard') : props.history.push('/admin/signin')\r\n        dispatch(userListAction())\r\n        dispatch(messageListAction())\r\n        dispatch(premiumListAction())\r\n\r\n    }, [adminInfo])\r\n\r\n    const filterPremium = userList && userList.filter(user => {\r\n        return user?.isPremium === true\r\n    })\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n\r\n            <Navbar />\r\n            <main >\r\n                {loading ?\r\n                    <div class=\" d-flex justify-content-center align-items-center h-100\">\r\n                        <div class=\"spinner-border text-primary \" style={{ width: \"50px\", height: \"50px\" }} role=\"status\">\r\n                            <span class=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div> :\r\n\r\n                    < div className=\" m-4\">\r\n\r\n                        <div className=\"row d-flex \">\r\n\r\n                            <div className=\"col-sm \">\r\n                                <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#ff9f00', }}>\r\n                                    <div>\r\n                                        <svg viewBox=\"0 0 36 36\" className=\"circular-chart orange\">\r\n                                            <path className=\"circle-bg\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <path className=\"circle\"\r\n                                                strokeDasharray=\"30, 100\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <text x=\"18\" y=\"20.35\" className=\"percentage\"> {`${filterPremium?.length || 0}% `}</text>\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div className=\"svg-text\">\r\n                                        <h3 style={{ color: \"#ff9f00\" }}> {filterPremium?.length || 0}</h3>\r\n                                        <p className=' text-muted'>Premium Users</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm \">\r\n                                <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#4CC790', }}>\r\n                                    <div>\r\n                                        <svg viewBox=\"0 0 36 36\" className=\"circular-chart green\">\r\n                                            <path className=\"circle-bg\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <path className=\"circle\"\r\n                                                strokeDasharray=\"30, 100\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <text x=\"18\" y=\"20.35\" className=\"percentage\"> {`${userList?.length || 0}%`}</text>\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div className=\"svg-text\">\r\n                                        <h3 style={{ color: \"#4CC790\" }}>{userList?.length || 0}</h3>\r\n                                        <p className=' text-muted'>Total Users</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm \">\r\n                                <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart \" style={{ borderBottomColor: '#3c9ee5' }}>\r\n                                    <div>\r\n                                        <svg viewBox=\"0 0 36 36\" className=\"circular-chart blue\">\r\n                                            <path className=\"circle-bg\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <path className=\"circle\"\r\n                                                strokeDasharray=\"30, 100\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <text x=\"18\" y=\"20.35\" className=\"percentage\">{`${messageList?.length || 0}%`}</text>\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div className=\"svg-text\">\r\n                                        <h3 style={{ color: '#3c9ee5' }}>{messageList?.length || 0}</h3>\r\n                                        <p className=' text-muted'>Total Messages</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm \">\r\n                                <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#F75A5F', }}>\r\n                                    <div>\r\n                                        <svg viewBox=\"0 0 36 36\" className=\"circular-chart red\">\r\n                                            <path className=\"circle-bg\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <path className=\"circle\"\r\n                                                strokeDasharray=\"30, 100\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <text x=\"18\" y=\"20.35\" className=\"percentage\">{`${premiumList?.length || 0}%`}</text>\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div className=\"svg-text\">\r\n                                        <h3 style={{ color: '#F75A5F' }}>{premiumList?.length || 0}</h3>\r\n                                        <p className=' text-muted'>Premium Requests</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"shadow bg-white rounded p-2\" >\r\n                                    <PremiumChartScreen />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DashboardScreen;","G:\\expert system\\server\\client\\src\\screen\\admin\\DetailScreen.js",["571","572","573","574","575"],"G:\\expert system\\server\\client\\src\\screen\\admin\\user.js",["576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600"],"G:\\expert system\\server\\client\\src\\screen\\admin\\Message.js",["601","602","603","604"],"G:\\expert system\\server\\client\\src\\screen\\admin\\Setting.js",["605","606","607"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../App.css';\r\nimport Navbar from \"./Navbar\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport uplaodImg from '../assets/setting.png'\r\nimport { adminChangePassword } from \"../../action/admin/auth\";\r\n \r\nconst SettingScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [matchPassword, setMatchPassword] = useState(\"\")\r\n    const [updatePassword, setUpdatePassword] = useState(\"\")\r\n\r\n    const adminSignin = useSelector(state => state.adminSignin);\r\n    const { adminInfo } = adminSignin;\r\n\r\n    const adminChangePasswordRed = useSelector(state => state.adminChangePasswordRed);\r\n    const {loading, error, success, adminChangePass } = adminChangePasswordRed;\r\n\r\n    useEffect(() => {\r\n        adminInfo ? props.history.push('/admin/settings') : props.history.push('/admin/signin')\r\n    }, [adminInfo])\r\n\r\n    const id = adminInfo?.user?._id\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(adminChangePassword(id,currentPassword, updatePassword))\r\n    }\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n            <Navbar />\r\n            <main >\r\n\r\n                <div className=\" m-4\">\r\n                    <ToastContainer />\r\n                    <div className='cart shadow bg-white rounded'>\r\n                        <div className='border border-top-0 border-left-0 border-right-0 '>\r\n                            <h5 className=\"text-muted text-center pt-4 pb-4 pl-4\">Change Password</h5>\r\n                        </div>\r\n\r\n                        <div className=\"row justify-content-around my-3\" >\r\n                            <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                                <img width=\"40%\" src={uplaodImg} />\r\n                            </div>\r\n\r\n                            <form onSubmit={submitHandler} className='col-sm-6 py-3'>\r\n                            {loading &&\r\n                                    <div class=\"text-center\">\r\n                                        <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                            <span class=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                                {success && <div className=\"text-primary text-center h6\">{adminChangePass?.message}</div>}\r\n\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setCurrentPassword(e.target.value)} value={currentPassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Current Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group py-3\">\r\n                                    <input type=\"password\" onChange={(e) => setUpdatePassword(e.target.value)} value={updatePassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setMatchPassword(e.target.value)} value={matchPassword} className={matchPassword !== updatePassword ? \"form-control is-invalid\" : \"form-control\"} id=\"validationServer03\" placeholder=\"Confirm New Password\" required />\r\n                                    {matchPassword !== updatePassword &&\r\n                                        <div className=\"invalid-feedback\">\r\n                                            Password not match.\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className='pt-4 text-center'>\r\n                                    <button type=\"submit\" className=\"btn btn-success mr-3\" style={{ width: '100px' }} disabled={matchPassword !== updatePassword}>Save</button>\r\n                                    <button className=\"btn btn-secondary\" onClick={() => props.history.push('/admin/dashboard')} style={{ width: '100px' }}>Cancel</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SettingScreen;","G:\\expert system\\server\\client\\src\\screen\\Signin.js",["608","609","610","611","612"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport $ from 'jquery'\r\nimport 'jquery-validation'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport { signin } from '../action/auth'\r\nimport axios from 'axios'\r\n\r\nconst ClientSigninScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { loading, success, userInfo, error } = userSignin;\r\n\r\n    useEffect(() => {\r\n            userInfo ? window.location.href = \"/\" : props.history.push('/signin')\r\n    }, [userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin(email, password))\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center pb-2 \">Login</h4>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {success && <div className=\"text-primary text-center h6\">{userInfo.message}</div>}\r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" onChange={(e) => setEmail(e.target.value)} type=\"email\" name=\"email\" placeholder=\"Email\" required />\r\n                            </div>\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} type=\"password\" name=\"password\" placeholder=\"Password\" required />\r\n                                <div className=\"float-right\">\r\n                                    <Link to=\"/reset-password\" >Forgot password?</Link>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"text-center pb-4 pt-4\">\r\n                                <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                Not a Member? <Link to=\"/signup\" >Signup</Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientSigninScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\signup.js",["613","614","615"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport { signup } from '../action/auth'\r\nconst ClientSignupScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const userSignup = useSelector(state => state.userSignup);\r\n    const { loading, success, userInfo, error } = userSignup;\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo: saveUserInfo } = userSignin;\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signup(name, email, password))\r\n    }\r\n\r\n    useEffect(() => {\r\n        saveUserInfo ? props.history.push('/') : props.history.push('/signup')\r\n    }, [saveUserInfo])\r\n\r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center pb-4 \">Signup</h4>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            } \r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            {success && <div className=\"text-primary text-center h6\">{userInfo.message}</div>}\r\n\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" type=\"text\" onChange={(e) => setName(e.target.value)} name=\"name\" placeholder=\"Name\" required />\r\n                            </div>\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" type=\"email\" onChange={(e) => setEmail(e.target.value)} name=\"email\" placeholder=\"Email\" required />\r\n                            </div>\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" type=\"password\" onChange={(e) => setPassword(e.target.value)} name=\"password\" placeholder=\"Password\" required />\r\n                            </div>\r\n\r\n                            <div className=\"text-center pb-4\">\r\n                                <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                have an Account? <Link to=\"/signin\" >Login</Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientSignupScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\forgotPassord.js",["616","617","618","619","620","621","622"],"import React, { useDebugValue, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport $ from 'jquery'\r\nimport 'jquery-validation'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport e from 'cors'\r\nimport { forgotPassword } from '../action/auth'\r\nconst ClientForgotPasswordScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    const forgotPasswordRed = useSelector(state => state.forgotPasswordRed);\r\n    const { loading, forgotPass, error, success } = forgotPasswordRed\r\n    \r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo} = userSignin;\r\n    \r\n    useEffect(() => {\r\n        userInfo ? props.history.push('/') : props.history.push('/reset-password')\r\n    }, [userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(forgotPassword(email))\r\n    }\r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center\">Reset Password</h4>\r\n                            <p className='text-center'>Enter your email address, we will send you instructions to reset your password </p>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            {success && <div className=\"text-primary text-center h6\">{forgotPass.message}</div>}\r\n\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" type=\"email\" onChange={(e) => setEmail(e.target.value)} name=\"email\" placeholder=\"Email\" required />\r\n                            </div>\r\n\r\n                            <div className=\"text-center pb-4\">\r\n                                <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ClientForgotPasswordScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\newPassword.js",["623","624","625","626"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport $ from 'jquery'\r\nimport 'jquery-validation'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport { newPassword } from '../action/auth'\r\nconst ClientNewPasswordScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const token = props.match.params.token\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const newPasswordReduser = useSelector(state => state.newPasswordRed)\r\n    const { loading, error, success, newPass } = newPasswordReduser\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(newPassword(password, token))\r\n    }\r\n    \r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center pb-4 \">New Password</h4>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            {success ?\r\n                                <>\r\n                                    <div className=\"text-primary text-center h6\">{newPass?.message}</div>\r\n                                    <div className='text-center'>\r\n                                        <Link to='/signin' className=\"btn btn-primary btn-sm\" role=\"button\">Continue to login</Link>\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <div className=\"form-group mb-4\">\r\n                                        <input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} type=\"password\" name=\"password\" placeholder=\"New Password\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"text-center pb-4\">\r\n                                        <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n\r\n\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientNewPasswordScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\Profile.js",["627","628","629","630"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport './../App.css';\r\nimport Navbar from \"./Navbar\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport uplaodImg from './assets/setting.png'\r\nimport { changePassword } from \"../action/auth\";\r\n\r\nconst ProfileScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [matchPassword, setMatchPassword] = useState(\"\")\r\n    const [updatePassword, setUpdatePassword] = useState(\"\")\r\n    \r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo } = userSignin;\r\n\r\n    const changePasswordRed = useSelector(state => state.changePasswordRed);\r\n    const {loading, changePass, success, error } = changePasswordRed;\r\n\r\n    const id = userInfo?.user?._id\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(changePassword(id,currentPassword, updatePassword))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <main >\r\n\r\n                <div className=\" m-4\">\r\n                    <div className='cart shadow bg-white rounded'>\r\n                        <div className='border border-top-0 border-left-0 border-right-0 '>\r\n                            <h5 className=\"text-muted text-center pt-4 pb-4 pl-4\">Change Password</h5>\r\n                        </div>\r\n\r\n                        <div className=\"row justify-content-around my-3\" >\r\n                            <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                                <img width=\"40%\" src={uplaodImg} />\r\n                            </div>\r\n\r\n                            <form onSubmit={submitHandler} className='col-sm-6 py-3'>\r\n                                {loading &&\r\n                                    <div class=\"text-center\">\r\n                                        <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                            <span class=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                                {success && <div className=\"text-primary text-center h6\">{changePass?.message}</div>}\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setCurrentPassword(e.target.value)} value={currentPassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Current Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group py-3\">\r\n                                    <input type=\"password\" onChange={(e) => setUpdatePassword(e.target.value)} value={updatePassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setMatchPassword(e.target.value)} value={matchPassword} className={matchPassword !== updatePassword ? \"form-control is-invalid\" : \"form-control\"} id=\"validationServer03\" placeholder=\"Confirm New Password\" required />\r\n                                    {matchPassword !== updatePassword &&\r\n                                        <div className=\"invalid-feedback\">\r\n                                            Password not match.\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className='pt-4 text-center'>\r\n                                    <button type=\"submit\" className=\"btn btn-success mr-3\" style={{ width: '100px' }} disabled={matchPassword !== updatePassword}>Save</button>\r\n                                    <button className=\"btn btn-secondary\" onClick={() => props.history.push('/')} style={{ width: '100px' }}>Cancel</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileScreen;","G:\\expert system\\server\\client\\src\\screen\\admin\\UplaodFile.js",["631","632","633","634","635","636","637","638"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { signup } from '../../action/auth'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Navbar from '../admin/Navbar';\r\nimport uplaodImg from '../assets/upload.png'\r\n\r\nconst UplaodFileScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    \r\n\tconst adminSignin = useSelector(state => state.adminSignin);\r\n\tconst {adminInfo } = adminSignin;\r\n\r\n    useEffect(() => {\r\n        adminInfo ? props.history.push('/admin/product-association') : props.history.push('/admin/signin')\r\n    },[adminInfo])\r\n\r\n    const submitHandler = () => {\r\n        props.history.push('/admin/detail')\r\n    }\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n            <Navbar />\r\n            <main>\r\n                <div className=\"m-4\">\r\n                    <div className='cart shadow bg-white rounded p-3 '>\r\n                        <div className=\"row justify-content-around my-3\">\r\n                            <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                                <img width=\"40%\" src={uplaodImg} />\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <h3 className='text-muted text-center py-3'>Uplaod File </h3>\r\n\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <select className=\"form-control border-top-0 border-left-0 border-right-0 bg-light rounded\" id=\"exampleFormControlSelect1\" required>\r\n                                            <option value=\"\" disabled selected>Select File Type</option>\r\n                                            <option value=\"\">JSON</option>\r\n                                            <option value=\"\">Excel</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group custom-file mb-3\">\r\n                                        <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" accept=\".pdf\" />\r\n                                        <label className=\"form-control rounded border-top-0 border-left-0 border-right-0 custom-file-label bg-light rounded\" for=\"customFile\">Choose file</label>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"text-center\">\r\n                                        <button onClick={submitHandler} type=\"button\" className=\"btn btn-success\">\r\n                                            <i className=\"fas fa-file\"> Uplaod File </i>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UplaodFileScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\PremiumChart.js",["639","640","641","642","643","644","645"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../../App.css';\r\nimport Chart from \"react-google-charts\";\r\n\r\nconst PremiumChartScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [chartSelect, setChartSelect] = useState(1)\r\n\r\n    const userListRed = useSelector(state => state.userListRed)\r\n    const { userList } = userListRed\r\n\r\n    const getPremium = userList && userList.filter(data => {\r\n        return data?.isPremium === true\r\n    })\r\n\r\n    const getBasic = userList && userList.filter(data => {\r\n        return data?.isPremium === false\r\n    })\r\n\r\n    var weeklyTitle = null\r\n\r\n    const getWeekly = () => {\r\n\r\n        weeklyTitle = \"Weekly Data\"\r\n        var now = new Date();\r\n        var lastDate = new Date();\r\n        lastDate.setDate(lastDate.getDate() - 6)\r\n        var data = []\r\n        data.push(['Date', 'Premium', 'Basic'])\r\n        var index = 0;\r\n\r\n        for (lastDate; lastDate <= now; lastDate.setDate(lastDate.getDate() + 1)) {\r\n\r\n            var PremiumAtDate = getPremium && getPremium.filter(function (data) {\r\n                return lastDate.toLocaleDateString() === new Date(data?.createdAt).toLocaleDateString();\r\n            })\r\n            var basicAtDate = getBasic && getBasic.filter(function (data) {\r\n                return lastDate.toLocaleDateString() === new Date(data?.createdAt).toLocaleDateString();\r\n            })\r\n\r\n            data.push([lastDate.toLocaleDateString(), PremiumAtDate?.length, basicAtDate?.length])\r\n            index++\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    const getMonthly = () => {\r\n        weeklyTitle = \"Monthly Data\"\r\n        var now = new Date();\r\n        var lastDate = new Date();\r\n        lastDate.setDate(lastDate.getDate() - 30)\r\n        var data = []\r\n        data.push(['Date', 'Premium', 'Basic'])\r\n        var index = 0;\r\n\r\n        for (lastDate; lastDate <= now; lastDate.setDate(lastDate.getDate() + 3)) {\r\n            var minDate = new Date(lastDate)\r\n            var maxDate = new Date(lastDate)\r\n            maxDate.setDate(maxDate.getDate() + 3)\r\n\r\n            var PremiumAtDate = getPremium && getPremium.filter(function (data) {\r\n                return new Date(data?.createdAt).getTime() >= minDate.getTime() &&\r\n                    new Date(data?.createdAt).getTime() <= maxDate.getTime();\r\n            })\r\n            var basicAtDate = getBasic && getBasic.filter(function (data) {\r\n                return new Date(data?.createdAt).getTime() >= minDate.getTime() &&\r\n                    new Date(data?.createdAt).getTime() <= maxDate.getTime();\r\n            })\r\n\r\n            var dateLabel = lastDate.getDate() + \"/\" + (lastDate.getUTCMonth() + 1)\r\n            data.push([dateLabel, PremiumAtDate?.length, basicAtDate?.length])\r\n            index++\r\n        }\r\n\r\n        return data;\r\n    }\r\n    const getYearly = () => {\r\n        weeklyTitle = \"Yearly Data\"\r\n        var now = new Date();\r\n        var lastDate = new Date();\r\n        lastDate.setMonth(lastDate.getMonth() - 11)\r\n        var data = []\r\n        data.push(['Date', 'Premium', 'Basic'])\r\n        var index = 0;\r\n\r\n        for (lastDate; lastDate <= now; lastDate.setMonth(lastDate.getMonth() + 1)) {\r\n\r\n            var PremiumAtDate = getPremium && getPremium.filter(function (data) {\r\n                return lastDate.getMonth() === new Date(data?.createdAt).getMonth() &&\r\n                    lastDate.getFullYear() === new Date(data?.createdAt).getFullYear()\r\n            })\r\n\r\n            var basicAtDate = getBasic && getBasic.filter(function (data) {\r\n                return lastDate.getMonth() === new Date(data?.createdAt).getMonth() &&\r\n                    lastDate.getFullYear() === new Date(data?.createdAt).getFullYear()\r\n            })\r\n\r\n            var dateLabel = (lastDate.getUTCMonth() + 1) + \"/\" + lastDate.toLocaleDateString('en', { year: '2-digit' })\r\n            data.push([dateLabel, PremiumAtDate?.length, basicAtDate?.length])\r\n            index++\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    function chartData() {\r\n        if (chartSelect === 1) {\r\n            return getWeekly()\r\n        }\r\n        if (chartSelect === 2) {\r\n            return getMonthly()\r\n        }\r\n        if (chartSelect === 3) {\r\n            return getYearly()\r\n        }\r\n        else {\r\n            return getWeekly()\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='d-flex justify-content-between' >\r\n                <div className=''>\r\n                    <h3 className='text-center text-muted '>User Analytics</h3>\r\n                </div>\r\n\r\n                <div className=\" d-flex justify-content-end mt-2\">\r\n                    <button className=\"btn btn-primary mx-1 mb-1\" onClick={() => setChartSelect(1)} >Weekly</button>\r\n                    <button className=\"btn btn-success mx-1 mb-1\" onClick={() => setChartSelect(2)}>Last 30 days</button>\r\n                    <button className=\"btn btn-warning mx-1 mb-1\" onClick={() => setChartSelect(3)}>Yearly</button>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                userList &&\r\n                <div >\r\n                    <Chart\r\n\r\n                        chartType=\"ComboChart\"\r\n                        loader={<div>Loading Chart</div>}\r\n                        data={chartData()}\r\n                        options={{\r\n                            title: weeklyTitle,\r\n                            legend: { position: 'none' },\r\n                            vAxis: { title: 'Percentage', fontSize: 28, },\r\n                            hAxis: { title: 'Month', fontSize: 28, },\r\n                            seriesType: 'bars',\r\n                            series: { 7: { type: 'line' } },\r\n                        }}\r\n                        rootProps={{ 'data-testid': '1' }}\r\n                    />\r\n\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default PremiumChartScreen;","G:\\expert system\\server\\client\\src\\screen\\admin\\RequestPremium.js",["646","647","648","649","650","651"],"G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\frequectChart.js",["652","653","654","655"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../../App.css';\r\nimport Chart from \"react-google-charts\";\r\n\r\nconst FrequentChartScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const getProductAssociation = () => {\r\n        var data = []\r\n        data.push(['Item', \"Frequency\"])\r\n\r\n        props?.frequentItemsets && props?.frequentItemsets.map(item =>\r\n            data.push([item?.items.toString(), item?.items?.length])\r\n        )\r\n        return data\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Chart\r\n                // width={'500px'}\r\n                height={'300px'}\r\n                chartType=\"ComboChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={\r\n                    getProductAssociation()\r\n                }\r\n                options={{\r\n                    // colors: ['#FB7A21'],\r\n                    // backgroundColor: '#2F4F4F',\r\n                    chart: {\r\n                        title: 'Frequent Items',\r\n                        subtitle: 'Frequent Items and Frequency',\r\n                    },\r\n                    legend: { position: 'none' },\r\n                    title: \"Maximium Frequent Items\",\r\n                    titleTextStyle: { color: '#3366CC' },\r\n                    vAxis: { title: 'Frequency', },\r\n                    hAxis: { title: 'Frequent Items', fontSize: 28, },\r\n                    seriesType: 'bars',\r\n                    series: { 5: { type: 'line' } },\r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default FrequentChartScreen;","G:\\expert system\\server\\client\\src\\screen\\verified.js",["656","657","658"],"import React, { useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport contactImg from './assets/contact.png'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { accountConformation } from '../action/auth';\r\nconst VerifiedScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const token = props.match.params.token\r\n    const accountConformationRed = useSelector(state => state.accountConformationRed);\r\n    const { loading, success, accConfirm, error } = accountConformationRed;\r\n    \r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(accountConformation(token))\r\n        }\r\n\r\n    }, [token])\r\n\r\n    return (\r\n        <>\r\n            {loading?\r\n                <div class=\"d-flex justify-content-center align-items-center vh-100\">\r\n                    <div class=\"spinner-border text-primary \" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>:\r\n            \r\n            <div className=\"jumbotron text-center\">\r\n                <h1 className=\"display-3\">Thank You!</h1>\r\n                {error && <p className=\"lead text-danger\"><strong>{error.message}</strong></p>}\r\n                {success && <p className=\"lead\"><strong>{accConfirm.message}</strong></p>}\r\n\r\n                {/* <hr> */}\r\n                {/* <p>\r\n                Having trouble? <a href=\"\">Contact us</a>\r\n                </p> \r\n                */}\r\n                <p className=\"lead\">\r\n                    <Link to='/signin' className=\"btn btn-primary btn-sm\" role=\"button\">Continue to login</Link>\r\n                </p>\r\n            </div>\r\n}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VerifiedScreen","G:\\expert system\\server\\client\\src\\action\\premium.js",[],"G:\\expert system\\server\\client\\src\\contant\\premium.js",[],"G:\\expert system\\server\\client\\src\\reducer\\premium.js",["659","660","661"],"import { CONFIRM_PREMIUM_FAIL, CONFIRM_PREMIUM_REQUEST, CONFIRM_PREMIUM_SUCCESS } from \"../contant/admin/premium\";\nimport { USER_PREMIUM_FAIL, USER_PREMIUM_REQUEST, USER_PREMIUM_SUCCESS } from \"../contant/premium\";\n\nfunction premiumRequestReducer(state = {}, action) {\n    switch (action.type) {\n        case USER_PREMIUM_REQUEST:\n            return { loading: true }\n        case USER_PREMIUM_SUCCESS:\n            return { loading: false, success: true, premiumReq: action.payload }\n        case USER_PREMIUM_FAIL:\n            return { loading: false, error: action.payload };\n        default: return state;\n    }\n}\n\n\nexport {\n    premiumRequestReducer\n};","G:\\expert system\\server\\client\\src\\reducer\\message.js",[],"G:\\expert system\\server\\client\\src\\contant\\message.js",[],"G:\\expert system\\server\\client\\src\\action\\message.js",[],"G:\\expert system\\server\\client\\src\\reducer\\user.js",[],"G:\\expert system\\server\\client\\src\\contant\\user.js",[],"G:\\expert system\\server\\client\\src\\action\\user.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\auth.js",[],"G:\\expert system\\server\\client\\src\\contant\\admin\\auth.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\message.js",[],"G:\\expert system\\server\\client\\src\\contant\\admin\\message.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\premium.js",["662"],"import { failedToTransformError } from \"simple-excel-to-json\";\nimport {\n    CONFIRM_BASIC_FAIL, CONFIRM_BASIC_REQUEST, CONFIRM_BASIC_SUCCESS,\n    CONFIRM_PREMIUM_FAIL, CONFIRM_PREMIUM_REQUEST, CONFIRM_PREMIUM_SUCCESS,\n    PREMIUM_LIST_FAIL, PREMIUM_LIST_REQUEST, PREMIUM_LIST_SUCCESS\n} from \"../../contant/admin/premium\";\n\nfunction premiumListReducer(state = { premiumList: [] }, action) {\n    switch (action.type) {\n        case PREMIUM_LIST_REQUEST:\n            return { loading: true, premiumList: [] }\n        case PREMIUM_LIST_SUCCESS:\n            return { loading: false, success: true, premiumList: action.payload }\n        case PREMIUM_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        default: return state;\n    }\n}\n\n\nfunction confirmPremiumReducer(state = {}, action) {\n    switch (action.type) {\n        case CONFIRM_PREMIUM_REQUEST:\n            return { premiumLoading: true, premiumSuccess:false }\n        case CONFIRM_PREMIUM_SUCCESS:\n            return { premiumLoading: false, premiumSuccess: true, confirmPremium: action.payload }\n        case CONFIRM_PREMIUM_FAIL:\n            return { premiumLoading: false, premiumError: action.payload };\n        default: return state;\n    }\n}\n\nfunction confirmBasicReducer(state = {}, action) {\n    switch (action.type) {\n        case CONFIRM_BASIC_REQUEST:\n            return { basicLoading: true, basicSuccess: false, }\n        case CONFIRM_BASIC_SUCCESS:\n            return { basicLoading: false, basicSuccess: true, confirmBasic: action.payload }\n        case CONFIRM_BASIC_FAIL:\n            return { basicLoading: false, basicError: action.payload };\n        default: return state;\n    }\n}\n\nexport {\n    premiumListReducer, confirmPremiumReducer, confirmBasicReducer\n};","G:\\expert system\\server\\client\\src\\contant\\admin\\premium.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\user.js",[],"G:\\expert system\\server\\client\\src\\contant\\admin\\user.js",[],"G:\\expert system\\server\\client\\src\\action\\admin\\auth.js",[],"G:\\expert system\\server\\client\\src\\action\\admin\\premium.js",[],"G:\\expert system\\server\\client\\src\\action\\admin\\user.js",[],"G:\\expert system\\server\\client\\src\\action\\admin\\message.js",[],"G:\\expert system\\server\\client\\src\\reducer\\association.js",[],"G:\\expert system\\server\\client\\src\\contant\\association.js",[],"G:\\expert system\\server\\client\\src\\action\\association.js",[],{"ruleId":"663","replacedBy":"664"},{"ruleId":"665","replacedBy":"666"},{"ruleId":"667","severity":1,"message":"668","line":2,"column":10,"nodeType":"669","messageId":"670","endLine":2,"endColumn":23},{"ruleId":"667","severity":1,"message":"671","line":2,"column":32,"nodeType":"669","messageId":"670","endLine":2,"endColumn":38},{"ruleId":"667","severity":1,"message":"672","line":2,"column":40,"nodeType":"669","messageId":"670","endLine":2,"endColumn":46},{"ruleId":"667","severity":1,"message":"673","line":40,"column":22,"nodeType":"669","messageId":"670","endLine":40,"endColumn":35},{"ruleId":"667","severity":1,"message":"674","line":40,"column":44,"nodeType":"669","messageId":"670","endLine":40,"endColumn":55},{"ruleId":"675","severity":1,"message":"676","line":57,"column":8,"nodeType":"677","endLine":57,"endColumn":18,"suggestions":"678"},{"ruleId":"679","severity":1,"message":"680","line":158,"column":37,"nodeType":"681","messageId":"682","endLine":158,"endColumn":46},{"ruleId":"667","severity":1,"message":"673","line":30,"column":22,"nodeType":"669","messageId":"670","endLine":30,"endColumn":35},{"ruleId":"667","severity":1,"message":"674","line":30,"column":44,"nodeType":"669","messageId":"670","endLine":30,"endColumn":55},{"ruleId":"675","severity":1,"message":"676","line":41,"column":8,"nodeType":"677","endLine":41,"endColumn":18,"suggestions":"683"},{"ruleId":"679","severity":1,"message":"680","line":102,"column":37,"nodeType":"681","messageId":"682","endLine":102,"endColumn":46},{"ruleId":"667","severity":1,"message":"684","line":1,"column":28,"nodeType":"669","messageId":"670","endLine":1,"endColumn":36},{"ruleId":"667","severity":1,"message":"685","line":12,"column":8,"nodeType":"669","messageId":"670","endLine":12,"endColumn":21},{"ruleId":"667","severity":1,"message":"686","line":24,"column":32,"nodeType":"669","messageId":"670","endLine":24,"endColumn":47},{"ruleId":"667","severity":1,"message":"687","line":24,"column":56,"nodeType":"669","messageId":"670","endLine":24,"endColumn":69},{"ruleId":"667","severity":1,"message":"688","line":27,"column":36,"nodeType":"669","messageId":"670","endLine":27,"endColumn":55},{"ruleId":"667","severity":1,"message":"689","line":27,"column":64,"nodeType":"669","messageId":"670","endLine":27,"endColumn":81},{"ruleId":"667","severity":1,"message":"690","line":30,"column":32,"nodeType":"669","messageId":"670","endLine":30,"endColumn":47},{"ruleId":"667","severity":1,"message":"691","line":30,"column":56,"nodeType":"669","messageId":"670","endLine":30,"endColumn":69},{"ruleId":"675","severity":1,"message":"676","line":38,"column":8,"nodeType":"677","endLine":38,"endColumn":18,"suggestions":"692"},{"ruleId":"667","severity":1,"message":"673","line":30,"column":22,"nodeType":"669","messageId":"670","endLine":30,"endColumn":35},{"ruleId":"667","severity":1,"message":"674","line":30,"column":44,"nodeType":"669","messageId":"670","endLine":30,"endColumn":55},{"ruleId":"675","severity":1,"message":"676","line":41,"column":8,"nodeType":"677","endLine":41,"endColumn":18,"suggestions":"693"},{"ruleId":"679","severity":1,"message":"680","line":102,"column":37,"nodeType":"681","messageId":"682","endLine":102,"endColumn":46},{"ruleId":"675","severity":1,"message":"694","line":26,"column":8,"nodeType":"677","endLine":26,"endColumn":18,"suggestions":"695"},{"ruleId":"667","severity":1,"message":"673","line":29,"column":22,"nodeType":"669","messageId":"670","endLine":29,"endColumn":35},{"ruleId":"667","severity":1,"message":"674","line":29,"column":44,"nodeType":"669","messageId":"670","endLine":29,"endColumn":55},{"ruleId":"667","severity":1,"message":"696","line":35,"column":22,"nodeType":"669","messageId":"670","endLine":35,"endColumn":33},{"ruleId":"667","severity":1,"message":"697","line":35,"column":42,"nodeType":"669","messageId":"670","endLine":35,"endColumn":51},{"ruleId":"675","severity":1,"message":"676","line":40,"column":8,"nodeType":"677","endLine":40,"endColumn":18,"suggestions":"698"},{"ruleId":"699","severity":1,"message":"700","line":42,"column":22,"nodeType":"701","messageId":"702","endLine":42,"endColumn":39,"fix":"703"},{"ruleId":"699","severity":1,"message":"704","line":44,"column":20,"nodeType":"701","messageId":"702","endLine":44,"endColumn":35,"fix":"705"},{"ruleId":"699","severity":1,"message":"704","line":46,"column":20,"nodeType":"701","messageId":"702","endLine":46,"endColumn":35,"fix":"706"},{"ruleId":"699","severity":1,"message":"707","line":92,"column":15,"nodeType":"701","messageId":"702","endLine":92,"endColumn":25,"fix":"708"},{"ruleId":"699","severity":1,"message":"709","line":93,"column":17,"nodeType":"701","messageId":"702","endLine":93,"endColumn":28,"fix":"710"},{"ruleId":"699","severity":1,"message":"711","line":94,"column":24,"nodeType":"701","messageId":"702","endLine":94,"endColumn":42,"fix":"712"},{"ruleId":"699","severity":1,"message":"704","line":95,"column":21,"nodeType":"701","messageId":"702","endLine":95,"endColumn":36,"fix":"713"},{"ruleId":"679","severity":1,"message":"680","line":101,"column":37,"nodeType":"681","messageId":"682","endLine":101,"endColumn":46},{"ruleId":"699","severity":1,"message":"714","line":179,"column":62,"nodeType":"701","messageId":"702","endLine":179,"endColumn":78,"fix":"715"},{"ruleId":"699","severity":1,"message":"709","line":183,"column":78,"nodeType":"701","messageId":"702","endLine":183,"endColumn":89,"fix":"716"},{"ruleId":"699","severity":1,"message":"711","line":184,"column":78,"nodeType":"701","messageId":"702","endLine":184,"endColumn":96,"fix":"717"},{"ruleId":"699","severity":1,"message":"704","line":186,"column":90,"nodeType":"701","messageId":"702","endLine":186,"endColumn":105,"fix":"718"},{"ruleId":"699","severity":1,"message":"704","line":186,"column":175,"nodeType":"701","messageId":"702","endLine":186,"endColumn":190,"fix":"719"},{"ruleId":"699","severity":1,"message":"707","line":189,"column":204,"nodeType":"701","messageId":"702","endLine":189,"endColumn":214,"fix":"720"},{"ruleId":"699","severity":1,"message":"707","line":190,"column":214,"nodeType":"701","messageId":"702","endLine":190,"endColumn":224,"fix":"721"},{"ruleId":"699","severity":1,"message":"707","line":198,"column":115,"nodeType":"701","messageId":"702","endLine":198,"endColumn":125,"fix":"722"},{"ruleId":"699","severity":1,"message":"704","line":225,"column":176,"nodeType":"701","messageId":"702","endLine":225,"endColumn":191,"fix":"723"},{"ruleId":"667","severity":1,"message":"684","line":1,"column":28,"nodeType":"669","messageId":"670","endLine":1,"endColumn":36},{"ruleId":"675","severity":1,"message":"724","line":27,"column":8,"nodeType":"677","endLine":27,"endColumn":18,"suggestions":"725"},{"ruleId":"679","severity":1,"message":"680","line":32,"column":37,"nodeType":"681","messageId":"682","endLine":32,"endColumn":46},{"ruleId":"699","severity":1,"message":"714","line":75,"column":50,"nodeType":"701","messageId":"702","endLine":75,"endColumn":72,"fix":"726"},{"ruleId":"699","severity":1,"message":"727","line":78,"column":71,"nodeType":"701","messageId":"702","endLine":78,"endColumn":87,"fix":"728"},{"ruleId":"699","severity":1,"message":"727","line":78,"column":116,"nodeType":"701","messageId":"702","endLine":78,"endColumn":132,"fix":"729"},{"ruleId":"699","severity":1,"message":"727","line":78,"column":162,"nodeType":"701","messageId":"702","endLine":78,"endColumn":178,"fix":"730"},{"ruleId":"699","severity":1,"message":"731","line":79,"column":62,"nodeType":"701","messageId":"702","endLine":79,"endColumn":77,"fix":"732"},{"ruleId":"699","severity":1,"message":"733","line":80,"column":62,"nodeType":"701","messageId":"702","endLine":80,"endColumn":77,"fix":"734"},{"ruleId":"667","severity":1,"message":"735","line":4,"column":8,"nodeType":"669","messageId":"670","endLine":4,"endColumn":12},{"ruleId":"667","severity":1,"message":"736","line":3,"column":10,"nodeType":"669","messageId":"670","endLine":3,"endColumn":14},{"ruleId":"667","severity":1,"message":"737","line":7,"column":8,"nodeType":"669","messageId":"670","endLine":7,"endColumn":12},{"ruleId":"738","severity":1,"message":"739","line":53,"column":29,"nodeType":"740","endLine":53,"endColumn":223},{"ruleId":"741","severity":1,"message":"742","line":53,"column":29,"nodeType":"740","endLine":53,"endColumn":223},{"ruleId":"741","severity":1,"message":"743","line":53,"column":29,"nodeType":"740","endLine":53,"endColumn":223},{"ruleId":"744","severity":1,"message":"745","line":56,"column":37,"nodeType":"740","endLine":56,"endColumn":183},{"ruleId":"667","severity":1,"message":"746","line":1,"column":8,"nodeType":"669","messageId":"670","endLine":1,"endColumn":13},{"ruleId":"667","severity":1,"message":"746","line":1,"column":8,"nodeType":"669","messageId":"670","endLine":1,"endColumn":13},{"ruleId":"667","severity":1,"message":"747","line":3,"column":10,"nodeType":"669","messageId":"670","endLine":3,"endColumn":21},{"ruleId":"667","severity":1,"message":"748","line":10,"column":30,"nodeType":"669","messageId":"670","endLine":10,"endColumn":45},{"ruleId":"667","severity":1,"message":"749","line":10,"column":54,"nodeType":"669","messageId":"670","endLine":10,"endColumn":67},{"ruleId":"699","severity":1,"message":"750","line":17,"column":14,"nodeType":"701","messageId":"702","endLine":17,"endColumn":29,"fix":"751"},{"ruleId":"699","severity":1,"message":"750","line":17,"column":45,"nodeType":"701","messageId":"702","endLine":17,"endColumn":60,"fix":"752"},{"ruleId":"699","severity":1,"message":"733","line":20,"column":29,"nodeType":"701","messageId":"702","endLine":20,"endColumn":44,"fix":"753"},{"ruleId":"699","severity":1,"message":"731","line":20,"column":46,"nodeType":"701","messageId":"702","endLine":20,"endColumn":61,"fix":"754"},{"ruleId":"699","severity":1,"message":"750","line":30,"column":14,"nodeType":"701","messageId":"702","endLine":30,"endColumn":29,"fix":"755"},{"ruleId":"699","severity":1,"message":"750","line":30,"column":49,"nodeType":"701","messageId":"702","endLine":30,"endColumn":64,"fix":"756"},{"ruleId":"699","severity":1,"message":"750","line":30,"column":86,"nodeType":"701","messageId":"702","endLine":30,"endColumn":101,"fix":"757"},{"ruleId":"699","severity":1,"message":"750","line":30,"column":121,"nodeType":"701","messageId":"702","endLine":30,"endColumn":136,"fix":"758"},{"ruleId":"699","severity":1,"message":"733","line":33,"column":29,"nodeType":"701","messageId":"702","endLine":33,"endColumn":44,"fix":"759"},{"ruleId":"699","severity":1,"message":"731","line":33,"column":46,"nodeType":"701","messageId":"702","endLine":33,"endColumn":61,"fix":"760"},{"ruleId":"667","severity":1,"message":"761","line":8,"column":26,"nodeType":"669","messageId":"670","endLine":8,"endColumn":31},{"ruleId":"675","severity":1,"message":"676","line":31,"column":8,"nodeType":"677","endLine":31,"endColumn":18,"suggestions":"762"},{"ruleId":"679","severity":1,"message":"680","line":35,"column":37,"nodeType":"681","messageId":"682","endLine":35,"endColumn":46},{"ruleId":"738","severity":1,"message":"739","line":105,"column":77,"nodeType":"740","endLine":105,"endColumn":165},{"ruleId":"738","severity":1,"message":"739","line":107,"column":77,"nodeType":"740","endLine":107,"endColumn":218},{"ruleId":"663","replacedBy":"763"},{"ruleId":"665","replacedBy":"764"},{"ruleId":"667","severity":1,"message":"668","line":2,"column":10,"nodeType":"669","messageId":"670","endLine":2,"endColumn":23},{"ruleId":"667","severity":1,"message":"671","line":2,"column":32,"nodeType":"669","messageId":"670","endLine":2,"endColumn":38},{"ruleId":"667","severity":1,"message":"672","line":2,"column":40,"nodeType":"669","messageId":"670","endLine":2,"endColumn":46},{"ruleId":"667","severity":1,"message":"765","line":23,"column":7,"nodeType":"669","messageId":"670","endLine":23,"endColumn":15},{"ruleId":"667","severity":1,"message":"766","line":3,"column":10,"nodeType":"669","messageId":"670","endLine":3,"endColumn":16},{"ruleId":"667","severity":1,"message":"735","line":4,"column":8,"nodeType":"669","messageId":"670","endLine":4,"endColumn":12},{"ruleId":"667","severity":1,"message":"767","line":6,"column":8,"nodeType":"669","messageId":"670","endLine":6,"endColumn":9},{"ruleId":"667","severity":1,"message":"746","line":1,"column":8,"nodeType":"669","messageId":"670","endLine":1,"endColumn":13},{"ruleId":"667","severity":1,"message":"747","line":3,"column":10,"nodeType":"669","messageId":"670","endLine":3,"endColumn":21},{"ruleId":"667","severity":1,"message":"748","line":10,"column":30,"nodeType":"669","messageId":"670","endLine":10,"endColumn":45},{"ruleId":"667","severity":1,"message":"749","line":10,"column":54,"nodeType":"669","messageId":"670","endLine":10,"endColumn":67},{"ruleId":"699","severity":1,"message":"750","line":17,"column":14,"nodeType":"701","messageId":"702","endLine":17,"endColumn":29,"fix":"768"},{"ruleId":"699","severity":1,"message":"750","line":17,"column":45,"nodeType":"701","messageId":"702","endLine":17,"endColumn":60,"fix":"769"},{"ruleId":"699","severity":1,"message":"733","line":20,"column":29,"nodeType":"701","messageId":"702","endLine":20,"endColumn":44,"fix":"770"},{"ruleId":"699","severity":1,"message":"731","line":20,"column":46,"nodeType":"701","messageId":"702","endLine":20,"endColumn":61,"fix":"771"},{"ruleId":"699","severity":1,"message":"750","line":30,"column":14,"nodeType":"701","messageId":"702","endLine":30,"endColumn":29,"fix":"772"},{"ruleId":"699","severity":1,"message":"750","line":30,"column":49,"nodeType":"701","messageId":"702","endLine":30,"endColumn":64,"fix":"773"},{"ruleId":"699","severity":1,"message":"750","line":30,"column":86,"nodeType":"701","messageId":"702","endLine":30,"endColumn":101,"fix":"774"},{"ruleId":"699","severity":1,"message":"750","line":30,"column":121,"nodeType":"701","messageId":"702","endLine":30,"endColumn":136,"fix":"775"},{"ruleId":"699","severity":1,"message":"733","line":33,"column":29,"nodeType":"701","messageId":"702","endLine":33,"endColumn":44,"fix":"776"},{"ruleId":"699","severity":1,"message":"731","line":33,"column":46,"nodeType":"701","messageId":"702","endLine":33,"endColumn":61,"fix":"777"},{"ruleId":"663","replacedBy":"778"},{"ruleId":"665","replacedBy":"779"},{"ruleId":"667","severity":1,"message":"746","line":1,"column":8,"nodeType":"669","messageId":"670","endLine":1,"endColumn":13},{"ruleId":"667","severity":1,"message":"736","line":4,"column":10,"nodeType":"669","messageId":"670","endLine":4,"endColumn":14},{"ruleId":"667","severity":1,"message":"780","line":7,"column":8,"nodeType":"669","messageId":"670","endLine":7,"endColumn":13},{"ruleId":"667","severity":1,"message":"781","line":24,"column":22,"nodeType":"669","messageId":"670","endLine":24,"endColumn":35},{"ruleId":"675","severity":1,"message":"676","line":29,"column":8,"nodeType":"677","endLine":29,"endColumn":18,"suggestions":"782"},{"ruleId":"738","severity":1,"message":"739","line":59,"column":33,"nodeType":"740","endLine":59,"endColumn":68},{"ruleId":"667","severity":1,"message":"783","line":21,"column":11,"nodeType":"669","messageId":"670","endLine":21,"endColumn":18},{"ruleId":"675","severity":1,"message":"784","line":42,"column":5,"nodeType":"677","endLine":42,"endColumn":7,"suggestions":"785"},{"ruleId":"738","severity":1,"message":"739","line":63,"column":19,"nodeType":"740","endLine":63,"endColumn":213},{"ruleId":"741","severity":1,"message":"742","line":63,"column":19,"nodeType":"740","endLine":63,"endColumn":213},{"ruleId":"741","severity":1,"message":"743","line":63,"column":19,"nodeType":"740","endLine":63,"endColumn":213},{"ruleId":"744","severity":1,"message":"745","line":66,"column":23,"nodeType":"740","endLine":66,"endColumn":169},{"ruleId":"786","severity":1,"message":"787","line":9,"column":9,"nodeType":"740","endLine":9,"endColumn":104},{"ruleId":"786","severity":1,"message":"787","line":8,"column":17,"nodeType":"740","endLine":8,"endColumn":112},{"ruleId":"663","replacedBy":"788"},{"ruleId":"665","replacedBy":"789"},{"ruleId":"675","severity":1,"message":"694","line":23,"column":8,"nodeType":"677","endLine":23,"endColumn":18,"suggestions":"790"},{"ruleId":"738","severity":1,"message":"739","line":36,"column":29,"nodeType":"740","endLine":36,"endColumn":65},{"ruleId":"667","severity":1,"message":"791","line":5,"column":8,"nodeType":"669","messageId":"670","endLine":5,"endColumn":13},{"ruleId":"667","severity":1,"message":"792","line":9,"column":13,"nodeType":"669","messageId":"670","endLine":9,"endColumn":17},{"ruleId":"667","severity":1,"message":"783","line":18,"column":13,"nodeType":"669","messageId":"670","endLine":18,"endColumn":20},{"ruleId":"667","severity":1,"message":"793","line":18,"column":37,"nodeType":"669","messageId":"670","endLine":18,"endColumn":42},{"ruleId":"675","severity":1,"message":"694","line":24,"column":8,"nodeType":"677","endLine":24,"endColumn":17,"suggestions":"794"},{"ruleId":"679","severity":1,"message":"680","line":29,"column":37,"nodeType":"681","messageId":"682","endLine":29,"endColumn":46},{"ruleId":"667","severity":1,"message":"795","line":3,"column":10,"nodeType":"669","messageId":"670","endLine":3,"endColumn":16},{"ruleId":"667","severity":1,"message":"796","line":4,"column":10,"nodeType":"669","messageId":"670","endLine":4,"endColumn":24},{"ruleId":"667","severity":1,"message":"761","line":4,"column":26,"nodeType":"669","messageId":"670","endLine":4,"endColumn":31},{"ruleId":"667","severity":1,"message":"736","line":6,"column":10,"nodeType":"669","messageId":"670","endLine":6,"endColumn":14},{"ruleId":"667","severity":1,"message":"797","line":16,"column":12,"nodeType":"669","messageId":"670","endLine":16,"endColumn":23},{"ruleId":"667","severity":1,"message":"798","line":16,"column":25,"nodeType":"669","messageId":"670","endLine":16,"endColumn":39},{"ruleId":"675","severity":1,"message":"694","line":32,"column":8,"nodeType":"677","endLine":32,"endColumn":19,"suggestions":"799"},{"ruleId":"800","severity":1,"message":"801","line":73,"column":33,"nodeType":"802","endLine":73,"endColumn":46},{"ruleId":"667","severity":1,"message":"736","line":3,"column":10,"nodeType":"669","messageId":"670","endLine":3,"endColumn":14},{"ruleId":"667","severity":1,"message":"737","line":7,"column":8,"nodeType":"669","messageId":"670","endLine":7,"endColumn":12},{"ruleId":"667","severity":1,"message":"803","line":12,"column":11,"nodeType":"669","messageId":"670","endLine":12,"endColumn":18},{"ruleId":"667","severity":1,"message":"783","line":14,"column":10,"nodeType":"669","messageId":"670","endLine":14,"endColumn":17},{"ruleId":"667","severity":1,"message":"804","line":14,"column":19,"nodeType":"669","messageId":"670","endLine":14,"endColumn":26},{"ruleId":"667","severity":1,"message":"793","line":14,"column":39,"nodeType":"669","messageId":"670","endLine":14,"endColumn":44},{"ruleId":"738","severity":1,"message":"739","line":53,"column":29,"nodeType":"740","endLine":53,"endColumn":223},{"ruleId":"741","severity":1,"message":"742","line":53,"column":29,"nodeType":"740","endLine":53,"endColumn":223},{"ruleId":"741","severity":1,"message":"743","line":53,"column":29,"nodeType":"740","endLine":53,"endColumn":223},{"ruleId":"744","severity":1,"message":"745","line":56,"column":37,"nodeType":"740","endLine":56,"endColumn":183},{"ruleId":"667","severity":1,"message":"684","line":1,"column":28,"nodeType":"669","messageId":"670","endLine":1,"endColumn":36},{"ruleId":"667","severity":1,"message":"793","line":20,"column":22,"nodeType":"669","messageId":"670","endLine":20,"endColumn":27},{"ruleId":"675","severity":1,"message":"676","line":34,"column":8,"nodeType":"677","endLine":34,"endColumn":19,"suggestions":"805"},{"ruleId":"667","severity":1,"message":"684","line":1,"column":28,"nodeType":"669","messageId":"670","endLine":1,"endColumn":36},{"ruleId":"667","severity":1,"message":"792","line":6,"column":13,"nodeType":"669","messageId":"670","endLine":6,"endColumn":17},{"ruleId":"667","severity":1,"message":"806","line":9,"column":11,"nodeType":"669","messageId":"670","endLine":9,"endColumn":19},{"ruleId":"675","severity":1,"message":"694","line":17,"column":7,"nodeType":"677","endLine":17,"endColumn":18,"suggestions":"807"},{"ruleId":"679","severity":1,"message":"680","line":22,"column":37,"nodeType":"681","messageId":"682","endLine":22,"endColumn":46},{"ruleId":"667","severity":1,"message":"684","line":1,"column":28,"nodeType":"669","messageId":"670","endLine":1,"endColumn":36},{"ruleId":"667","severity":1,"message":"792","line":12,"column":13,"nodeType":"669","messageId":"670","endLine":12,"endColumn":17},{"ruleId":"667","severity":1,"message":"808","line":17,"column":9,"nodeType":"669","messageId":"670","endLine":17,"endColumn":21},{"ruleId":"667","severity":1,"message":"809","line":18,"column":9,"nodeType":"669","messageId":"670","endLine":18,"endColumn":19},{"ruleId":"667","severity":1,"message":"810","line":19,"column":9,"nodeType":"669","messageId":"670","endLine":19,"endColumn":24},{"ruleId":"667","severity":1,"message":"793","line":22,"column":22,"nodeType":"669","messageId":"670","endLine":22,"endColumn":27},{"ruleId":"667","severity":1,"message":"811","line":25,"column":13,"nodeType":"669","messageId":"670","endLine":25,"endColumn":27},{"ruleId":"667","severity":1,"message":"812","line":28,"column":13,"nodeType":"669","messageId":"670","endLine":28,"endColumn":25},{"ruleId":"667","severity":1,"message":"813","line":31,"column":13,"nodeType":"669","messageId":"670","endLine":31,"endColumn":28},{"ruleId":"667","severity":1,"message":"814","line":34,"column":13,"nodeType":"669","messageId":"670","endLine":34,"endColumn":30},{"ruleId":"675","severity":1,"message":"694","line":41,"column":8,"nodeType":"677","endLine":41,"endColumn":19,"suggestions":"815"},{"ruleId":"675","severity":1,"message":"784","line":81,"column":8,"nodeType":"677","endLine":81,"endColumn":10,"suggestions":"816"},{"ruleId":"679","severity":1,"message":"680","line":114,"column":37,"nodeType":"681","messageId":"682","endLine":114,"endColumn":46},{"ruleId":"800","severity":1,"message":"801","line":208,"column":81,"nodeType":"802","endLine":208,"endColumn":93},{"ruleId":"800","severity":1,"message":"801","line":218,"column":81,"nodeType":"802","endLine":218,"endColumn":93},{"ruleId":"800","severity":1,"message":"801","line":233,"column":81,"nodeType":"802","endLine":233,"endColumn":93},{"ruleId":"800","severity":1,"message":"801","line":243,"column":81,"nodeType":"802","endLine":243,"endColumn":93},{"ruleId":"800","severity":1,"message":"801","line":307,"column":81,"nodeType":"802","endLine":307,"endColumn":93},{"ruleId":"800","severity":1,"message":"801","line":317,"column":81,"nodeType":"802","endLine":317,"endColumn":93},{"ruleId":"800","severity":1,"message":"801","line":332,"column":81,"nodeType":"802","endLine":332,"endColumn":93},{"ruleId":"800","severity":1,"message":"801","line":342,"column":81,"nodeType":"802","endLine":342,"endColumn":93},{"ruleId":"800","severity":1,"message":"801","line":404,"column":81,"nodeType":"802","endLine":404,"endColumn":93},{"ruleId":"800","severity":1,"message":"801","line":414,"column":81,"nodeType":"802","endLine":414,"endColumn":93},{"ruleId":"800","severity":1,"message":"801","line":429,"column":81,"nodeType":"802","endLine":429,"endColumn":93},{"ruleId":"800","severity":1,"message":"801","line":439,"column":81,"nodeType":"802","endLine":439,"endColumn":93},{"ruleId":"667","severity":1,"message":"792","line":7,"column":13,"nodeType":"669","messageId":"670","endLine":7,"endColumn":17},{"ruleId":"667","severity":1,"message":"793","line":17,"column":22,"nodeType":"669","messageId":"670","endLine":17,"endColumn":27},{"ruleId":"675","severity":1,"message":"676","line":22,"column":8,"nodeType":"677","endLine":22,"endColumn":19,"suggestions":"817"},{"ruleId":"679","severity":1,"message":"680","line":27,"column":37,"nodeType":"681","messageId":"682","endLine":27,"endColumn":46},{"ruleId":"667","severity":1,"message":"761","line":7,"column":26,"nodeType":"669","messageId":"670","endLine":7,"endColumn":31},{"ruleId":"675","severity":1,"message":"694","line":26,"column":8,"nodeType":"677","endLine":26,"endColumn":19,"suggestions":"818"},{"ruleId":"738","severity":1,"message":"739","line":48,"column":33,"nodeType":"740","endLine":48,"endColumn":68},{"ruleId":"667","severity":1,"message":"767","line":4,"column":8,"nodeType":"669","messageId":"670","endLine":4,"endColumn":9},{"ruleId":"667","severity":1,"message":"737","line":6,"column":8,"nodeType":"669","messageId":"670","endLine":6,"endColumn":12},{"ruleId":"667","severity":1,"message":"819","line":7,"column":8,"nodeType":"669","messageId":"670","endLine":7,"endColumn":14},{"ruleId":"667","severity":1,"message":"820","line":10,"column":8,"nodeType":"669","messageId":"670","endLine":10,"endColumn":13},{"ruleId":"675","severity":1,"message":"694","line":22,"column":8,"nodeType":"677","endLine":22,"endColumn":18,"suggestions":"821"},{"ruleId":"667","severity":1,"message":"737","line":4,"column":8,"nodeType":"669","messageId":"670","endLine":4,"endColumn":12},{"ruleId":"667","severity":1,"message":"819","line":5,"column":8,"nodeType":"669","messageId":"670","endLine":5,"endColumn":14},{"ruleId":"675","severity":1,"message":"694","line":27,"column":8,"nodeType":"677","endLine":27,"endColumn":22,"suggestions":"822"},{"ruleId":"667","severity":1,"message":"823","line":1,"column":17,"nodeType":"669","messageId":"670","endLine":1,"endColumn":30},{"ruleId":"667","severity":1,"message":"767","line":4,"column":8,"nodeType":"669","messageId":"670","endLine":4,"endColumn":9},{"ruleId":"667","severity":1,"message":"737","line":6,"column":8,"nodeType":"669","messageId":"670","endLine":6,"endColumn":12},{"ruleId":"667","severity":1,"message":"819","line":7,"column":8,"nodeType":"669","messageId":"670","endLine":7,"endColumn":14},{"ruleId":"667","severity":1,"message":"736","line":8,"column":10,"nodeType":"669","messageId":"670","endLine":8,"endColumn":14},{"ruleId":"667","severity":1,"message":"824","line":9,"column":8,"nodeType":"669","messageId":"670","endLine":9,"endColumn":9},{"ruleId":"675","severity":1,"message":"694","line":23,"column":8,"nodeType":"677","endLine":23,"endColumn":18,"suggestions":"825"},{"ruleId":"667","severity":1,"message":"826","line":1,"column":17,"nodeType":"669","messageId":"670","endLine":1,"endColumn":26},{"ruleId":"667","severity":1,"message":"767","line":4,"column":8,"nodeType":"669","messageId":"670","endLine":4,"endColumn":9},{"ruleId":"667","severity":1,"message":"737","line":6,"column":8,"nodeType":"669","messageId":"670","endLine":6,"endColumn":12},{"ruleId":"667","severity":1,"message":"819","line":7,"column":8,"nodeType":"669","messageId":"670","endLine":7,"endColumn":14},{"ruleId":"667","severity":1,"message":"826","line":1,"column":17,"nodeType":"669","messageId":"670","endLine":1,"endColumn":26},{"ruleId":"667","severity":1,"message":"796","line":7,"column":10,"nodeType":"669","messageId":"670","endLine":7,"endColumn":24},{"ruleId":"667","severity":1,"message":"761","line":7,"column":26,"nodeType":"669","messageId":"670","endLine":7,"endColumn":31},{"ruleId":"738","severity":1,"message":"739","line":43,"column":33,"nodeType":"740","endLine":43,"endColumn":68},{"ruleId":"667","severity":1,"message":"684","line":1,"column":28,"nodeType":"669","messageId":"670","endLine":1,"endColumn":36},{"ruleId":"667","severity":1,"message":"795","line":3,"column":10,"nodeType":"669","messageId":"670","endLine":3,"endColumn":16},{"ruleId":"667","severity":1,"message":"796","line":4,"column":10,"nodeType":"669","messageId":"670","endLine":4,"endColumn":24},{"ruleId":"667","severity":1,"message":"761","line":4,"column":26,"nodeType":"669","messageId":"670","endLine":4,"endColumn":31},{"ruleId":"667","severity":1,"message":"736","line":6,"column":10,"nodeType":"669","messageId":"670","endLine":6,"endColumn":14},{"ruleId":"667","severity":1,"message":"806","line":11,"column":11,"nodeType":"669","messageId":"670","endLine":11,"endColumn":19},{"ruleId":"675","severity":1,"message":"694","line":18,"column":7,"nodeType":"677","endLine":18,"endColumn":18,"suggestions":"827"},{"ruleId":"738","severity":1,"message":"739","line":32,"column":33,"nodeType":"740","endLine":32,"endColumn":68},{"ruleId":"667","severity":1,"message":"826","line":1,"column":17,"nodeType":"669","messageId":"670","endLine":1,"endColumn":26},{"ruleId":"667","severity":1,"message":"806","line":9,"column":11,"nodeType":"669","messageId":"670","endLine":9,"endColumn":19},{"ruleId":"667","severity":1,"message":"828","line":46,"column":13,"nodeType":"669","messageId":"670","endLine":46,"endColumn":18},{"ruleId":"829","severity":1,"message":"830","line":66,"column":65,"nodeType":"681","messageId":"831","endLine":69,"endColumn":14},{"ruleId":"829","severity":1,"message":"830","line":70,"column":59,"nodeType":"681","messageId":"831","endLine":73,"endColumn":14},{"ruleId":"667","severity":1,"message":"828","line":77,"column":13,"nodeType":"669","messageId":"670","endLine":77,"endColumn":18},{"ruleId":"667","severity":1,"message":"828","line":105,"column":13,"nodeType":"669","messageId":"670","endLine":105,"endColumn":18},{"ruleId":"667","severity":1,"message":"684","line":1,"column":28,"nodeType":"669","messageId":"670","endLine":1,"endColumn":36},{"ruleId":"667","severity":1,"message":"792","line":11,"column":13,"nodeType":"669","messageId":"670","endLine":11,"endColumn":17},{"ruleId":"675","severity":1,"message":"676","line":39,"column":8,"nodeType":"677","endLine":39,"endColumn":19,"suggestions":"832"},{"ruleId":"679","severity":1,"message":"680","line":49,"column":37,"nodeType":"681","messageId":"682","endLine":49,"endColumn":46},{"ruleId":"800","severity":1,"message":"801","line":111,"column":61,"nodeType":"802","endLine":111,"endColumn":74},{"ruleId":"800","severity":1,"message":"801","line":121,"column":61,"nodeType":"802","endLine":121,"endColumn":74},{"ruleId":"667","severity":1,"message":"826","line":1,"column":17,"nodeType":"669","messageId":"670","endLine":1,"endColumn":26},{"ruleId":"667","severity":1,"message":"684","line":1,"column":28,"nodeType":"669","messageId":"670","endLine":1,"endColumn":36},{"ruleId":"667","severity":1,"message":"833","line":2,"column":23,"nodeType":"669","messageId":"670","endLine":2,"endColumn":34},{"ruleId":"667","severity":1,"message":"806","line":9,"column":11,"nodeType":"669","messageId":"670","endLine":9,"endColumn":19},{"ruleId":"667","severity":1,"message":"819","line":2,"column":8,"nodeType":"669","messageId":"670","endLine":2,"endColumn":14},{"ruleId":"667","severity":1,"message":"834","line":3,"column":8,"nodeType":"669","messageId":"670","endLine":3,"endColumn":18},{"ruleId":"675","severity":1,"message":"784","line":18,"column":8,"nodeType":"677","endLine":18,"endColumn":15,"suggestions":"835"},{"ruleId":"667","severity":1,"message":"836","line":1,"column":10,"nodeType":"669","messageId":"670","endLine":1,"endColumn":30},{"ruleId":"667","severity":1,"message":"837","line":1,"column":32,"nodeType":"669","messageId":"670","endLine":1,"endColumn":55},{"ruleId":"667","severity":1,"message":"838","line":1,"column":57,"nodeType":"669","messageId":"670","endLine":1,"endColumn":80},{"ruleId":"667","severity":1,"message":"839","line":1,"column":10,"nodeType":"669","messageId":"670","endLine":1,"endColumn":32},"no-native-reassign",["840"],"no-negated-in-lhs",["841"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'DeleteLoading' is assigned a value but never used.","'deleteError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["842"],"array-callback-return","Array.prototype.filter() expects a return value from function.","FunctionExpression","expectedInside",["843"],"'useState' is defined but never used.","'RegulareChart' is defined but never used.","'listAreaLoading' is assigned a value but never used.","'listAreaError' is assigned a value but never used.","'listCategoryLoading' is assigned a value but never used.","'listCategoryError' is assigned a value but never used.","'listUnitLoading' is assigned a value but never used.","'listUnitError' is assigned a value but never used.",["844"],["845"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["846"],"'editLoading' is assigned a value but never used.","'editError' is assigned a value but never used.",["847"],"no-whitespace-before-property","Unexpected whitespace before property filter.","MemberExpression","unexpectedWhitespace",{"range":"848","text":"849"},"Unexpected whitespace before property isActive.",{"range":"850","text":"849"},{"range":"851","text":"849"},"Unexpected whitespace before property _id.",{"range":"852","text":"849"},"Unexpected whitespace before property name.",{"range":"853","text":"849"},"Unexpected whitespace before property description.",{"range":"854","text":"849"},{"range":"855","text":"849"},"Unexpected whitespace before property map.",{"range":"856","text":"849"},{"range":"857","text":"849"},{"range":"858","text":"849"},{"range":"859","text":"849"},{"range":"860","text":"849"},{"range":"861","text":"849"},{"range":"862","text":"849"},{"range":"863","text":"849"},{"range":"864","text":"849"},"React Hook useEffect has missing dependencies: 'dispatch', 'itemId', and 'props.history'. Either include them or remove the dependency array.",["865"],{"range":"866","text":"849"},"Unexpected whitespace before property createdAt.",{"range":"867","text":"849"},{"range":"868","text":"849"},{"range":"869","text":"849"},"Unexpected whitespace before property minPrice.",{"range":"870","text":"849"},"Unexpected whitespace before property maxPrice.",{"range":"871","text":"849"},"'Logo' is defined but never used.","'Link' is defined but never used.","'logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role img. This role is implicit on the element img.","The attribute aria-expanded is not supported by the role img. This role is implicit on the element img.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'react' is defined but never used.","'useDispatch' is defined but never used.","'listItemLoading' is assigned a value but never used.","'listItemError' is assigned a value but never used.","Unexpected whitespace before property category.",{"range":"872","text":"849"},{"range":"873","text":"849"},{"range":"874","text":"849"},{"range":"875","text":"849"},{"range":"876","text":"849"},{"range":"877","text":"849"},{"range":"878","text":"849"},{"range":"879","text":"849"},{"range":"880","text":"849"},{"range":"881","text":"849"},"'toast' is defined but never used.",["882"],["840"],["841"],"'location' is assigned a value but never used.","'signin' is defined but never used.","'$' is defined but never used.",{"range":"883","text":"849"},{"range":"884","text":"849"},{"range":"885","text":"849"},{"range":"886","text":"849"},{"range":"887","text":"849"},{"range":"888","text":"849"},{"range":"889","text":"849"},{"range":"890","text":"849"},{"range":"891","text":"849"},{"range":"892","text":"849"},["840"],["841"],"'Axios' is defined but never used.","'frequentItems' is assigned a value but never used.",["893"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["894"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["840"],["841"],["895"],"'Chart' is defined but never used.","'data' is defined but never used.","'error' is assigned a value but never used.",["896"],"'signup' is defined but never used.","'ToastContainer' is defined but never used.","'accessLevel' is assigned a value but never used.","'setAccessLevel' is assigned a value but never used.",["897"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","'history' is assigned a value but never used.","'success' is assigned a value but never used.",["898"],"'dispatch' is assigned a value but never used.",["899"],"'premiumSerNo' is assigned a value but never used.","'basicSerNo' is assigned a value but never used.","'deactivateSerNo' is assigned a value but never used.","'premiumLoading' is assigned a value but never used.","'basicLoading' is assigned a value but never used.","'activateLoading' is assigned a value but never used.","'deActivateLoading' is assigned a value but never used.",["900"],["901"],["902"],["903"],"'Navbar' is defined but never used.","'axios' is defined but never used.",["904"],["905"],"'useDebugValue' is defined but never used.","'e' is defined but never used.",["906"],"'useEffect' is defined but never used.",["907"],"'index' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'minDate', 'maxDate'.","unsafeRefs",["908"],"'useSelector' is defined but never used.","'contactImg' is defined but never used.",["909"],"'CONFIRM_PREMIUM_FAIL' is defined but never used.","'CONFIRM_PREMIUM_REQUEST' is defined but never used.","'CONFIRM_PREMIUM_SUCCESS' is defined but never used.","'failedToTransformError' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"910","fix":"911"},{"desc":"910","fix":"912"},{"desc":"910","fix":"913"},{"desc":"910","fix":"914"},{"desc":"915","fix":"916"},{"desc":"910","fix":"917"},[1694,1697],"?.",[1788,1791],[1880,1883],[2931,2934],[2959,2962],[2995,2998],[3035,3038],[8085,8088],[8427,8430],[8522,8525],[8713,8716],[8798,8801],[9205,9208],[9478,9481],[10066,10069],[13217,13220],{"desc":"918","fix":"919"},[3367,3370],[3603,3606],[3648,3651],[3694,3697],[3793,3796],[3876,3879],[565,568],[596,599],[690,693],[707,710],[933,936],[968,971],[1005,1008],[1040,1043],[1141,1144],[1158,1161],{"desc":"910","fix":"920"},[565,568],[596,599],[690,693],[707,710],[933,936],[968,971],[1005,1008],[1040,1043],[1141,1144],[1158,1161],{"desc":"910","fix":"921"},{"desc":"922","fix":"923"},{"desc":"915","fix":"924"},{"desc":"925","fix":"926"},{"desc":"927","fix":"928"},{"desc":"929","fix":"930"},{"desc":"927","fix":"931"},{"desc":"927","fix":"932"},{"desc":"922","fix":"933"},{"desc":"929","fix":"934"},{"desc":"927","fix":"935"},{"desc":"915","fix":"936"},{"desc":"937","fix":"938"},{"desc":"915","fix":"939"},{"desc":"927","fix":"940"},{"desc":"929","fix":"941"},{"desc":"942","fix":"943"},"Update the dependencies array to be: [dispatch, props.history, userInfo]",{"range":"944","text":"945"},{"range":"946","text":"945"},{"range":"947","text":"945"},{"range":"948","text":"945"},"Update the dependencies array to be: [props.history, userInfo]",{"range":"949","text":"950"},{"range":"951","text":"945"},"Update the dependencies array to be: [dispatch, itemId, props.history, userInfo]",{"range":"952","text":"953"},{"range":"954","text":"945"},{"range":"955","text":"945"},"Update the dependencies array to be: [dispatch]",{"range":"956","text":"957"},{"range":"958","text":"950"},"Update the dependencies array to be: [props.history, success]",{"range":"959","text":"960"},"Update the dependencies array to be: [adminInfo, props.history]",{"range":"961","text":"962"},"Update the dependencies array to be: [adminInfo, dispatch, props.history]",{"range":"963","text":"964"},{"range":"965","text":"962"},{"range":"966","text":"962"},{"range":"967","text":"957"},{"range":"968","text":"964"},{"range":"969","text":"962"},{"range":"970","text":"950"},"Update the dependencies array to be: [props.history, saveUserInfo]",{"range":"971","text":"972"},{"range":"973","text":"950"},{"range":"974","text":"962"},{"range":"975","text":"964"},"Update the dependencies array to be: [dispatch, token]",{"range":"976","text":"977"},[2455,2465],"[dispatch, props.history, userInfo]",[1700,1710],[1657,1667],[1783,1793],[1043,1053],"[props.history, userInfo]",[1652,1662],[988,998],"[dispatch, itemId, props.history, userInfo]",[1070,1080],[1124,1134],[1245,1247],"[dispatch]",[895,905],[865,874],"[props.history, success]",[1275,1286],"[adminInfo, props.history]",[1331,1342],"[adminInfo, dispatch, props.history]",[599,610],[1950,1961],[2832,2834],[835,846],[1147,1158],[783,793],[982,996],"[props.history, saveUserInfo]",[891,901],[706,717],[1430,1441],[679,686],"[dispatch, token]"]