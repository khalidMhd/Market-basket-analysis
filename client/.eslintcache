[{"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\index.js":"1","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\App.js":"2","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reportWebVitals.js":"3","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\store\\Store.js":"4","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\item.js":"5","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\unit.js":"6","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Dashboard.js":"7","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\category.js":"8","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\settings.js":"9","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\area.js":"10","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\regulate.js":"11","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\auth\\singin.js":"12","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\auth.js":"13","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\items.js":"14","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\category.js":"15","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\unit.js":"16","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\area.js":"17","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\regulateItems.js":"18","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Navbar.js":"19","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\items.js":"20","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\unit.js":"21","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\category.js":"22","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\area.js":"23","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\auth.js":"24","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\regulateItems.js":"25","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\area.js":"26","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\regulateItem.js":"27","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\category.js":"28","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\unit.js":"29","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\items.js":"30","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\auth.js":"31","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\regulateChart.js":"32","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\itemBarChart.js":"33","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\complaint.js":"34","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\complaint.js":"35","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\complaint.js":"36","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\complaint.js":"37","G:\\expert system\\server\\client\\src\\index.js":"38","G:\\expert system\\server\\client\\src\\App.js":"39","G:\\expert system\\server\\client\\src\\reportWebVitals.js":"40","G:\\expert system\\server\\client\\src\\store\\Store.js":"41","G:\\expert system\\server\\client\\src\\screen\\auth\\singin.js":"42","G:\\expert system\\server\\client\\src\\reducer\\auth.js":"43","G:\\expert system\\server\\client\\src\\action\\auth.js":"44","G:\\expert system\\server\\client\\src\\screen\\chart\\itemBarChart.js":"45","G:\\expert system\\server\\client\\src\\screen\\chart\\regulateChart.js":"46","G:\\expert system\\server\\client\\src\\contant\\auth.js":"47","G:\\expert system\\server\\client\\src\\screen\\StartScreen.js":"48","G:\\expert system\\server\\client\\src\\screen\\Navbar.js":"49","G:\\expert system\\server\\client\\src\\screen\\actionButton.js":"50","G:\\expert system\\server\\client\\src\\screen\\ActionButton.js":"51","G:\\expert system\\server\\client\\src\\screen\\Contact.js":"52","G:\\expert system\\server\\client\\src\\screen\\DetailScreen.js":"53","G:\\expert system\\server\\client\\src\\screen\\auth\\signup.js":"54","G:\\expert system\\server\\client\\src\\screen\\admin\\Navbar.js":"55","G:\\expert system\\server\\client\\src\\screen\\admin\\Dashboard.js":"56","G:\\expert system\\server\\client\\src\\screen\\admin\\DetailScreen.js":"57","G:\\expert system\\server\\client\\src\\screen\\admin\\user.js":"58","G:\\expert system\\server\\client\\src\\screen\\admin\\Message.js":"59","G:\\expert system\\server\\client\\src\\screen\\admin\\Setting.js":"60","G:\\expert system\\server\\client\\src\\screen\\Signin.js":"61","G:\\expert system\\server\\client\\src\\screen\\signup.js":"62","G:\\expert system\\server\\client\\src\\screen\\forgotPassord.js":"63","G:\\expert system\\server\\client\\src\\screen\\newPassword.js":"64","G:\\expert system\\server\\client\\src\\screen\\Profile.js":"65","G:\\expert system\\server\\client\\src\\screen\\admin\\UplaodFile.js":"66","G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\PremiumChart.js":"67","G:\\expert system\\server\\client\\src\\screen\\admin\\RequestPremium.js":"68","G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\frequectChart.js":"69","G:\\expert system\\server\\client\\src\\screen\\verified.js":"70","G:\\expert system\\server\\client\\src\\action\\premium.js":"71","G:\\expert system\\server\\client\\src\\contant\\premium.js":"72","G:\\expert system\\server\\client\\src\\reducer\\premium.js":"73","G:\\expert system\\server\\client\\src\\reducer\\message.js":"74","G:\\expert system\\server\\client\\src\\contant\\message.js":"75","G:\\expert system\\server\\client\\src\\action\\message.js":"76","G:\\expert system\\server\\client\\src\\reducer\\user.js":"77","G:\\expert system\\server\\client\\src\\contant\\user.js":"78","G:\\expert system\\server\\client\\src\\action\\user.js":"79","G:\\expert system\\server\\client\\src\\reducer\\admin\\auth.js":"80","G:\\expert system\\server\\client\\src\\contant\\admin\\auth.js":"81","G:\\expert system\\server\\client\\src\\reducer\\admin\\message.js":"82","G:\\expert system\\server\\client\\src\\contant\\admin\\message.js":"83","G:\\expert system\\server\\client\\src\\reducer\\admin\\premium.js":"84","G:\\expert system\\server\\client\\src\\contant\\admin\\premium.js":"85","G:\\expert system\\server\\client\\src\\reducer\\admin\\user.js":"86","G:\\expert system\\server\\client\\src\\contant\\admin\\user.js":"87","G:\\expert system\\server\\client\\src\\action\\admin\\auth.js":"88","G:\\expert system\\server\\client\\src\\action\\admin\\premium.js":"89","G:\\expert system\\server\\client\\src\\action\\admin\\user.js":"90","G:\\expert system\\server\\client\\src\\action\\admin\\message.js":"91"},{"size":662,"mtime":1627510351000,"results":"92","hashOfConfig":"93"},{"size":1478,"mtime":1630595486179,"results":"94","hashOfConfig":"93"},{"size":362,"mtime":1627510351000,"results":"95","hashOfConfig":"93"},{"size":1912,"mtime":1630595014082,"results":"96","hashOfConfig":"93"},{"size":30159,"mtime":1633631227303,"results":"97","hashOfConfig":"93"},{"size":20042,"mtime":1628420703519,"results":"98","hashOfConfig":"93"},{"size":11323,"mtime":1628428189293,"results":"99","hashOfConfig":"93"},{"size":20298,"mtime":1628483765210,"results":"100","hashOfConfig":"93"},{"size":4469,"mtime":1627510351000,"results":"101","hashOfConfig":"93"},{"size":19136,"mtime":1628483724031,"results":"102","hashOfConfig":"93"},{"size":4364,"mtime":1628419779376,"results":"103","hashOfConfig":"93"},{"size":2836,"mtime":1627510351000,"results":"104","hashOfConfig":"93"},{"size":1591,"mtime":1627510351000,"results":"105","hashOfConfig":"93"},{"size":2035,"mtime":1628415414564,"results":"106","hashOfConfig":"93"},{"size":2216,"mtime":1627510351000,"results":"107","hashOfConfig":"93"},{"size":2034,"mtime":1627510351000,"results":"108","hashOfConfig":"93"},{"size":2034,"mtime":1627510351000,"results":"109","hashOfConfig":"93"},{"size":630,"mtime":1628415482817,"results":"110","hashOfConfig":"93"},{"size":7203,"mtime":1632407511850,"results":"111","hashOfConfig":"93"},{"size":2184,"mtime":1628403072224,"results":"112","hashOfConfig":"93"},{"size":2002,"mtime":1628139068621,"results":"113","hashOfConfig":"93"},{"size":2172,"mtime":1628483776451,"results":"114","hashOfConfig":"93"},{"size":2005,"mtime":1628138531021,"results":"115","hashOfConfig":"93"},{"size":1792,"mtime":1627658970109,"results":"116","hashOfConfig":"93"},{"size":757,"mtime":1628418262041,"results":"117","hashOfConfig":"93"},{"size":631,"mtime":1627510351000,"results":"118","hashOfConfig":"93"},{"size":211,"mtime":1628415356035,"results":"119","hashOfConfig":"93"},{"size":726,"mtime":1627510351000,"results":"120","hashOfConfig":"93"},{"size":631,"mtime":1627510351000,"results":"121","hashOfConfig":"93"},{"size":633,"mtime":1627510351000,"results":"122","hashOfConfig":"93"},{"size":530,"mtime":1627510351000,"results":"123","hashOfConfig":"93"},{"size":978,"mtime":1628315462938,"results":"124","hashOfConfig":"93"},{"size":2904,"mtime":1632407342995,"results":"125","hashOfConfig":"93"},{"size":590,"mtime":1630595063933,"results":"126","hashOfConfig":"93"},{"size":187,"mtime":1630594864176,"results":"127","hashOfConfig":"93"},{"size":6654,"mtime":1631566237351,"results":"128","hashOfConfig":"93"},{"size":689,"mtime":1630594800803,"results":"129","hashOfConfig":"93"},{"size":662,"mtime":1638468181206,"results":"130","hashOfConfig":"131"},{"size":2564,"mtime":1643644757681,"results":"132","hashOfConfig":"131"},{"size":362,"mtime":1627510351000,"results":"133","hashOfConfig":"131"},{"size":2125,"mtime":1643740082289,"results":"134","hashOfConfig":"131"},{"size":2607,"mtime":1643788067091,"results":"135","hashOfConfig":"131"},{"size":3160,"mtime":1643736502325,"results":"136","hashOfConfig":"131"},{"size":3125,"mtime":1644003477536,"results":"137","hashOfConfig":"131"},{"size":2904,"mtime":1632407342995,"results":"138","hashOfConfig":"131"},{"size":978,"mtime":1628315462938,"results":"139","hashOfConfig":"131"},{"size":1163,"mtime":1643644957044,"results":"140","hashOfConfig":"131"},{"size":3342,"mtime":1644071007229,"results":"141","hashOfConfig":"131"},{"size":4284,"mtime":1644048115767,"results":"142","hashOfConfig":"131"},{"size":425,"mtime":1638910053899,"results":"143","hashOfConfig":"131"},{"size":425,"mtime":1638910053899,"results":"144","hashOfConfig":"131"},{"size":3909,"mtime":1644048512270,"results":"145","hashOfConfig":"131"},{"size":6063,"mtime":1642603341229,"results":"146","hashOfConfig":"131"},{"size":4330,"mtime":1644003608165,"results":"147","hashOfConfig":"131"},{"size":6502,"mtime":1644003595670,"results":"148","hashOfConfig":"131"},{"size":9465,"mtime":1644071242864,"results":"149","hashOfConfig":"131"},{"size":3783,"mtime":1643995996511,"results":"150","hashOfConfig":"131"},{"size":35944,"mtime":1643996235915,"results":"151","hashOfConfig":"131"},{"size":6300,"mtime":1644044071488,"results":"152","hashOfConfig":"131"},{"size":4881,"mtime":1644044591481,"results":"153","hashOfConfig":"131"},{"size":3410,"mtime":1643711721928,"results":"154","hashOfConfig":"131"},{"size":3582,"mtime":1643881998896,"results":"155","hashOfConfig":"131"},{"size":3002,"mtime":1643694601953,"results":"156","hashOfConfig":"131"},{"size":3183,"mtime":1643655694517,"results":"157","hashOfConfig":"131"},{"size":4612,"mtime":1644044219318,"results":"158","hashOfConfig":"131"},{"size":3162,"mtime":1643996174735,"results":"159","hashOfConfig":"131"},{"size":2741,"mtime":1644077860000,"results":"160","hashOfConfig":"131"},{"size":6564,"mtime":1644049465802,"results":"161","hashOfConfig":"131"},{"size":1735,"mtime":1644003603744,"results":"162","hashOfConfig":"131"},{"size":1749,"mtime":1643644218224,"results":"163","hashOfConfig":"131"},{"size":680,"mtime":1644003509923,"results":"164","hashOfConfig":"131"},{"size":175,"mtime":1643696180133,"results":"165","hashOfConfig":"131"},{"size":656,"mtime":1643738990041,"results":"166","hashOfConfig":"131"},{"size":541,"mtime":1643701471448,"results":"167","hashOfConfig":"131"},{"size":175,"mtime":1643700844815,"results":"168","hashOfConfig":"131"},{"size":694,"mtime":1644003489334,"results":"169","hashOfConfig":"131"},{"size":535,"mtime":1643735485679,"results":"170","hashOfConfig":"131"},{"size":175,"mtime":1643734493576,"results":"171","hashOfConfig":"131"},{"size":663,"mtime":1644003544975,"results":"172","hashOfConfig":"131"},{"size":1635,"mtime":1643882356149,"results":"173","hashOfConfig":"131"},{"size":578,"mtime":1643737083128,"results":"174","hashOfConfig":"131"},{"size":575,"mtime":1643738091929,"results":"175","hashOfConfig":"131"},{"size":175,"mtime":1643736578225,"results":"176","hashOfConfig":"131"},{"size":1760,"mtime":1643875840558,"results":"177","hashOfConfig":"131"},{"size":559,"mtime":1643738651133,"results":"178","hashOfConfig":"131"},{"size":1923,"mtime":1643877751607,"results":"179","hashOfConfig":"131"},{"size":635,"mtime":1643739594545,"results":"180","hashOfConfig":"131"},{"size":1982,"mtime":1644003402005,"results":"181","hashOfConfig":"131"},{"size":1640,"mtime":1644003357364,"results":"182","hashOfConfig":"131"},{"size":1737,"mtime":1644003458487,"results":"183","hashOfConfig":"131"},{"size":691,"mtime":1644003371159,"results":"184","hashOfConfig":"131"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},"n71n87",{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"187"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"187"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"187"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"187"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"187"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":16,"source":"212","usedDeprecatedRules":"187"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":6,"source":"215","usedDeprecatedRules":"187"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"187"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"187"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"187"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":10,"source":"263","usedDeprecatedRules":"187"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"187"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},"1g3zd92",{"filePath":"276","messages":"277","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"275"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"275"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":10,"source":"263","usedDeprecatedRules":"292"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"292"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"275"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"275"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"308"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"275"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"275"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"275"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"275"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"275"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"275"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"275"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"275"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"275"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"275"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"275"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"275"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"275"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"275"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"275"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"275"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"275"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"275"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"275"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"275"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\index.js",[],["409","410"],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\App.js",["411","412","413"],"import './App.css';\nimport { BrowserRouter, Route, Router, Switch, useLocation } from 'react-router-dom'\nimport SigninScreen from './screen/auth/singin';\nimport DashboardScreen from './screen/Dashboard';\nimport ItemsScreen from './screen/item';\nimport UnitScreen from './screen/unit';\nimport CategoryScreen from './screen/category';\nimport AreaScreen from './screen/area';\nimport SettingScreen from './screen/settings';\nimport RegulateScreen from './screen/regulate';\nimport ComplaintScreen from './screen/complaint';\n\nfunction App() {\n  var location = useLocation();\n  return (\n    <>\n\n      {location.pathname === '/signin'?\n        <Route exact path='/signin' component={SigninScreen} />\n      :\n          <div className=\"containerMain\">        \n                \n                {/* <Route exact path='/signup' component={signupScreen} /> */}\n                <Route exact path='/' component={DashboardScreen} />\n                <Route exact path='/items' component={ItemsScreen} />\n                <Route exact path='/units' component={UnitScreen} />\n                <Route exact path='/category' component={CategoryScreen} />\n                <Route exact path='/area' component={AreaScreen} />\n                <Route exact path='/settings' component={SettingScreen} />\n                <Route path='/regulate/:id' component={RegulateScreen} />\n                <Route path='/complaint' component={ComplaintScreen} />\n        </div>\n      }\n    </>\n  );\n}\n\nexport default App;\n","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reportWebVitals.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\store\\Store.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\item.js",["414","415","416","417"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { addItemsAction, deleteItemsAction, editItemsAction, listItemsAction } from \"../action/items\";\nimport { listCategoryAction } from \"../action/category\";\nimport { listUnitAction } from \"../action/unit\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { Link } from \"../../node_modules/react-router-dom/cjs/react-router-dom\";\nconst ItemsScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [minPrice, setMinPrice] = useState(\"\")\n    const [maxPrice, setMaxPrice] = useState(\"\")\n    const [unitId, setUnitId] = useState(\"\")\n    const [categoryId, setCategoryId] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    const [categoryFilter, setCategoryFilter] = useState(\"all\")\n    const [unitFilter, setUnitFilter] = useState(\"all\")\n    const [statusFilter, setStatusFilter] = useState(\"all\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const itemListData = useSelector(state => state.itemListData);\n    const { itemList, loading, error } = itemListData;\n\n    const itemAddData = useSelector(state => state.itemAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = itemAddData;\n\n    const itemDeleteData = useSelector(state => state.itemDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = itemDeleteData;\n\n    const itemEditData = useSelector(state => state.itemEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = itemEditData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList } = categoryListData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList } = unitListData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/items') : props.history.push('/signin');\n        dispatch(listItemsAction())\n        dispatch(listCategoryAction())\n        dispatch(listUnitAction())\n\n    }, [userInfo])\n\n    var selectItems = itemList?.filter(function (data) {\n        if (categoryFilter !== 'all' && unitFilter !== 'all' && statusFilter === \"all\") {\n            return data?.category === categoryFilter && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter === 'all' && unitFilter !== 'all' && statusFilter === \"active\") {\n            return data?.isActive === true && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter === 'all' && unitFilter !== 'all' && statusFilter === \"inActive\") {\n            return data?.isActive === false && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter !== 'all' && unitFilter === 'all' && statusFilter === \"active\") {\n            return data?.isActive === true && data?.category === categoryFilter;\n        }\n\n        if (categoryFilter !== 'all' && unitFilter === 'all' && statusFilter === \"inActive\") {\n            return data?.isActive === false && data?.category === categoryFilter;\n        }\n\n        if (categoryFilter !== 'all' && statusFilter === \"active\" && unitFilter !== 'all') {\n            return data.isActive === true && data?.category === categoryFilter && data.unit === unitFilter;\n        }\n        if (categoryFilter !== 'all' && statusFilter === \"inActive\" && unitFilter !== 'all') {\n            return data.isActive === false && data?.category === categoryFilter && data.unit === unitFilter;\n        }\n        if (unitFilter !== 'all') {\n            return data?.unit === unitFilter;\n        }\n        if (categoryFilter !== 'all') {\n            return data?.category === categoryFilter\n        }\n        if (statusFilter === \"active\") {\n            return data?.isActive === true;\n        }\n        if (statusFilter === \"inActive\") {\n            return data?.isActive === false;\n        }\n        if (statusFilter === \"all\") {\n            return data\n        }\n        else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Item Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Item Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Item Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addItemsAction(name, unitId, categoryId, isActive, minPrice, maxPrice))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editItemsAction(id, name, unitId, categoryId, isActive, minPrice, maxPrice))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteItemsAction(id))\n    }\n\n    const updateHandler = (item) => {\n        setId(item?._id)\n        setName(item?.name)\n        setMinPrice(item?.minPrice)\n        setMaxPrice(item?.maxPrice)\n        setUnitId(item?.unitId)\n        setCategoryId(item?.categoryId)\n        setIsActive(item.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Items</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select className=\"form-control bg-light rounded\" onChange={(e) => setStatusFilter(e.target.value)} id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Status</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group\">\n                                                        <select onChange={(e) => setCategoryFilter(e.target.value)} className=\"form-control  bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Category</option>\n                                                            <option value=\"all\">All</option>\n                                                            {categoryList?.map(category =>\n                                                                <option value={category?.name}>{category?.name}</option>\n                                                            )}\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group\">\n                                                        <select onChange={(e) => setUnitFilter(e.target.value)} className=\"form-control  bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Unit</option>\n                                                            <option value=\"all\">All</option>\n                                                            {unitList?.map(unit =>\n                                                                <option value={unit?.name}>{unit?.name}</option>\n                                                            )}\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {itemList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Min Price</th>\n                                                            <th scope=\"col\">Max Price</th>\n                                                            <th scope=\"col\">Unit</th>\n                                                            <th scope=\"col\">Category</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        {selectItems?.map(item =>\n                                                            <>\n                                                                <tr>\n                                                                    <th scope=\"row\">{serNo += 1}</th>\n                                                                    <td>{item?.name}</td>\n                                                                    <td>{item?.minPrice}</td>\n                                                                    <td>{item?.maxPrice}</td>\n                                                                    <td>{item?.unit}</td>\n                                                                    <td>{item?.category}</td>\n                                                                    <td>\n                                                                        <span class={item?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {item?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                    </td>\n                                                                    <td>\n                                                                        <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(item)} data-target={\"#edititems\" + item?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                        <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this item?')) deleteHandler(item?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                        <Link to={'/regulate/' + item?._id} title=\"Regulate\">\n                                                                            <i className=\"fa fa-eye text-success  ml-2\" style={{ cursor: \"pointer\" }} ></i>\n                                                                        </Link>\n                                                                        {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} title=\"active\"></i> */}\n                                                                    </td>\n                                                                </tr>\n\n\n                                                                {/* edit model */}\n\n                                                                <div className=\"modal fade\" id={\"edititems\" + item?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                        <div className=\"modal-content\">\n                                                                            <div className=\"modal-header text-center\">\n                                                                                <div className='modal-title w-100 '>\n                                                                                    <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                    <h4 className=\"text-muted\">Edit Item</h4>\n                                                                                </div>\n\n                                                                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                    <span aria-hidden=\"true\">&times;</span>\n                                                                                </button>\n                                                                            </div>\n\n                                                                            {editLoading &&\n                                                                                <div className=\"text-center\">\n                                                                                    <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                        <span className=\"sr-only\">Loading...</span>\n                                                                                    </div>\n                                                                                </div>}\n                                                                            {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n                                                                            <div className=\"modal-body\">\n                                                                                <form onSubmit={submitUpdHandler}>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Name\" />\n                                                                                    </div>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"number\" value={minPrice} onChange={(e) => setMinPrice(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Min Price\" />\n                                                                                    </div>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"number\" value={maxPrice} onChange={(e) => setMaxPrice(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Max Price\" />\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group\">\n                                                                                        <select value={unitId} onChange={(e) => setUnitId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\">\n                                                                                            <option value=\"\" disabled selected>Unit</option>\n                                                                                            {unitList?.map(unit =>\n                                                                                                <> {unit.isActive === true && <option value={unit?._id}>{unit?.name}</option>}</>\n                                                                                            )}\n\n                                                                                        </select>\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group\">\n                                                                                        <select value={categoryId} onChange={(e) => setCategoryId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\">\n                                                                                            <option value=\"\" disabled selected>Category</option>\n                                                                                            {categoryList?.map(category =>\n                                                                                                <> {category.isActive === true && <option value={category?._id}>{category?.name}</option>}</>\n                                                                                            )}\n                                                                                        </select>\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group \">\n                                                                                        <label className=\"checkbox checkbox-primary\">\n                                                                                            <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={item?.isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                                            <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                    </div>\n\n                                                                                    <div>\n                                                                                        <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Item</button>\n                                                                                    </div>\n\n                                                                                </form>\n                                                                            </div>\n\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </>\n                                                        )}\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Item</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Item Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Name\" required />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"number\" onChange={(e) => setMinPrice(e.target.value)} value={minPrice} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Min Price\" required />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"number\" onChange={(e) => setMaxPrice(e.target.value)} value={maxPrice} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Max Price\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <select onChange={(e) => setUnitId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\" required>\n                                                                <option value=\"\" disabled selected>Unit</option>\n                                                                {unitList?.map(unit =>\n                                                                    <> {unit.isActive === true && <option value={unit?._id}>{unit?.name}</option>}</>\n                                                                )}\n                                                            </select>\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <select onChange={(e) => setCategoryId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\" required>\n                                                                <option value=\"\" disabled selected>Category</option>\n                                                                {categoryList.map(category =>\n                                                                    <> {category.isActive === true && <option value={category?._id}>{category?.name}</option>}</>\n                                                                )}\n                                                            </select>\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Item</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default ItemsScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\unit.js",["418","419","420","421"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { addUnitAction, deleteUnitAction, editUnirAction, listUnitAction } from \"../action/unit\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\n\nconst UnitScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const unitAddData = useSelector(state => state.unitAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = unitAddData;\n\n    const unitDeleteData = useSelector(state => state.unitDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = unitDeleteData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList, loading, error } = unitListData;\n\n    const unitEditData = useSelector(state => state.unitEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = unitEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/units') : props.history.push('/signin');\n        dispatch(listUnitAction())\n    }, [userInfo])\n\n    var selectUnit = unitList?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Unit Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Unit Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Unit Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addUnitAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editUnirAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteUnitAction(id))\n    }\n\n    const updateHandler = (unit) => {\n        setId(unit?._id)\n        setName(unit?.name)\n        setDescription(unit?.description)\n        setIsActive(unit.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n                < div className=\" m-4\">\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Units</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Status</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {unitList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectUnit?.map(unit =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{unit?.name}</td>\n                                                                        <td>{unit?.description}</td>\n                                                                        <td>\n                                                                            <span class={unit?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {unit?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(unit)} data-target={\"#edititems\" + unit?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this unit?')) deleteHandler(unit?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + unit?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Unit</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                {editLoading &&\n                                                                                    <div className=\"text-center\">\n                                                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                            <span className=\"sr-only\">Loading...</span>\n                                                                                        </div>\n                                                                                    </div>}\n                                                                                {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={unit?.isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Unit</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Unit</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Unit Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} value={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Unit</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default UnitScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Dashboard.js",["422","423","424","425","426","427","428","429","430"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { listItemsAction } from \"../action/items\";\nimport { listCategoryAction } from \"../action/category\";\nimport { listUnitAction } from \"../action/unit\";\nimport { listAreaAction } from \"../action/area\";\nimport RegulareChart from \"./chart/regulateChart\";\nimport ItemBarChart from \"./chart/itemBarChart\";\nconst DashboardScreen = (props) => {\n    const dispatch = useDispatch()\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const itemListData = useSelector(state => state.itemListData);\n    const { itemList, loading: listItemLoading, error: listItemError } = itemListData;\n\n    const areaListData = useSelector(state => state.areaListData);\n    const { areaList, loading: listAreaLoading, error: listAreaError } = areaListData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList, loading: listCategoryLoading, error: listCategoryError } = categoryListData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList, loading: listUnitLoading, error: listUnitError } = unitListData;\n    useEffect(() => {\n        userInfo ? props.history.push('/') : props.history.push('/signin')\n        dispatch(listItemsAction())\n        dispatch(listCategoryAction())\n        dispatch(listUnitAction())\n        dispatch(listAreaAction())\n\n    }, [userInfo])\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {listItemLoading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div> :\n                        <>\n                            {listItemError ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n\n                                    <div className=\"row d-flex \">\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#ff9f00', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart orange\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{itemList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: \"#ff9f00\" }}>{itemList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Items</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#4CC790', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart green\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{areaList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: \"#4CC790\" }}>{areaList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Areas</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart \" style={{ borderBottomColor: '#3c9ee5' }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart blue\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{categoryList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: '#3c9ee5' }}>{categoryList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Categories</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#F75A5F', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart red\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{unitList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: '#F75A5F' }}>{unitList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Units</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-sm\">\n                                            <div className=\"shadow bg-white rounded p-2\">\n                                                <ItemBarChart />\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                </>\n                            }\n\n                        </>\n                    }\n\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default DashboardScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\category.js",["431","432","433","434"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { addCategoryAction, deleteCategoryAction, editCategoryAction, listCategoryAction } from \"../action/category\";\n\nconst CategoryScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const categoryAddData = useSelector(state => state.categoryAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = categoryAddData;\n\n    const categoryDeleteData = useSelector(state => state.categoryDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = categoryDeleteData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList, loading, error } = categoryListData;\n\n    const categoryEditData = useSelector(state => state.categoryEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = categoryEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/category') : props.history.push('/signin');\n        dispatch(listCategoryAction())\n    }, [userInfo])\n\n    var selectCategory = categoryList?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Category Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Category Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast(\"Category Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addCategoryAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editCategoryAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteCategoryAction(id))\n    }\n\n    const updateHandler = (category) => {\n        setId(category?._id)\n        setName(category?.name)\n        setDescription(category?.description)\n        setIsActive(category.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Categories</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option defaultValue=\"\" disabled selected>Status</option>\n                                                            <option defaultValue=\"all\">All</option>\n                                                            <option defaultValue=\"active\">Active</option>\n                                                            <option defaultValue=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {categoryList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectCategory?.map(category =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{category?.name}</td>\n                                                                        <td>{category?.description}</td>\n                                                                        <td>\n                                                                            <span className={category?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {category?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(category)} data-target={\"#edititems\" + category?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this category?')) deleteHandler(category?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\" ></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + category?._id} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Category</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                {editLoading &&\n                                                                                    <div className=\"text-center\">\n                                                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                            <span className=\"sr-only\">Loading...</span>\n                                                                                        </div>\n                                                                                    </div>}\n                                                                                {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" defaultValue={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" defaultValue={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={category?.isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Category</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Category</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Category Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} defaultValue={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} defaultValue={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Category</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default CategoryScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\settings.js",["435"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport { editPasswordAction } from \"../action/auth\";\n\nconst SettingScreen = (props) => {\n    const dispatch = useDispatch()\n    const [currentPassword, setCurrentPassword] = useState(\"\")\n    const [matchPassword, setMatchPassword] = useState(\"\")\n    const [updatePassword, setUpdatePassword] = useState(\"\")\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const passwordEditData = useSelector(state => state.passwordEditData);\n    const { loading, error, success } = passwordEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/settings') : props.history.push('/signin');\n    }, [userInfo])\n\n    if (success) {\n        toast.success(\"Password Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(editPasswordAction(currentPassword, updatePassword))\n    }\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n                    <ToastContainer />\n                    <div className='cart shadow bg-white rounded '>\n                        <div className='border border-top-0 border-left-0 border-right-0 '>\n                            <h5 className=\"text-muted pt-4 pb-4 pl-4\">Change Password</h5>\n                        </div>\n\n                        <form onSubmit={submitHandler} className=' p-3 mt-3'>\n                            {loading &&\n                                <div className=\"text-center\">\n                                    <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                        <span className=\"sr-only\">Loading...</span>\n                                    </div>\n                                </div>\n                            }\n\n                            {error &&\n                                <div className=' text-center'>\n                                    <p className=\"text-danger\">The current password is not match with old password.</p>\n                                </div>\n                            }\n\n                            <div className=\"form-group\">\n                                <input type=\"password\" onChange={(e) => setCurrentPassword(e.target.value)} value={currentPassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Current Password\" required />\n                            </div>\n                            <div className=\"form-group py-3\">\n                                <input type=\"password\" onChange={(e) => setUpdatePassword(e.target.value)} value={updatePassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password\" required />\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" onChange={(e) => setMatchPassword(e.target.value)} value={matchPassword} className={matchPassword !== updatePassword ? \"form-control is-invalid\" : \"form-control\"} id=\"validationServer03\" placeholder=\"City\" required />\n                                {matchPassword !== updatePassword &&\n                                    <div className=\"invalid-feedback\">\n                                        Please enter the same value again.\n                                    </div>\n                                }\n                            </div>\n                            <div className='pt-4'>\n                                <button type=\"submit\" className=\"btn btn-primary mr-3\" style={{ width: '100px' }} disabled={matchPassword !== updatePassword}>Save</button>\n                                <button className=\"btn btn-secondary\" onClick={() => props.history.push('/')} style={{ width: '100px' }}>Cancel</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default SettingScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\area.js",["436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport $ from 'jquery'\nimport { addAreaAction, deleteAreaAction, editAreaAction, listAreaAction } from \"../action/area\";\n\nconst AreaScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const areaAddData = useSelector(state => state.areaAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = areaAddData;\n\n    const areaDeleteData = useSelector(state => state.areaDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = areaDeleteData;\n\n    const areaListData = useSelector(state => state.areaListData);\n    const { areaList, loading, error } = areaListData;\n\n    const areaEditData = useSelector(state => state.areaEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = areaEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/area') : props.history.push('/signin');\n        dispatch(listAreaAction())\n    }, [userInfo])\n\n    var selectarea = areaList ?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data ?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data ?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Area Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Area Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Area Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addAreaAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editAreaAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteAreaAction(id))\n    }\n\n    const updateHandler = (area) => {\n        setId(area ?._id)\n        setName(area ?.name)\n        setDescription(area ?.description)\n        setIsActive(area ?.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Area</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Search</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {areaList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectarea ?.map(area =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{area ?.name}</td>\n                                                                        <td>{area ?.description}</td>\n                                                                        <td>\n                                                                            <span class={area ?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {area ?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(area)} data-target={\"#edititems\" + area ?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this area?')) deleteHandler(area ?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + area ?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Area</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={area ?.isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Area</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add area</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">area Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} value={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Area</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                    <ToastContainer />\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default AreaScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\regulate.js",["458","459","460","461","462","463","464","465","466"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { listRegulateItemsAction } from \"../action/regulateItems\";\n\nconst RegulateScreen = (props) => {\n    const dispatch = useDispatch()\n    let serNo = 0   \n    const itemId = props.match.params.id\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const regulateItemListData = useSelector(state => state.regulateItemListData);\n    const { regulateItemList, loading, error } = regulateItemListData;\n    \n    useEffect(() => {\n        userInfo ? props.history.push('/regulate/'+itemId) : props.history.push('/signin');\n        dispatch(listRegulateItemsAction(itemId))\n\n    }, [userInfo])\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <div className='cart shadow bg-white rounded p-3 '>\n                                    <div>\n                                        <h5 className=\"text-muted\">Regulate Items</h5>\n                                    </div>\n\n                                    {/* table */}\n                                    <div className='table-responsive '>\n                                        <table className=\"table table-bordered table table-hover\">\n                                            <thead>\n                                                <tr className='table-active'>\n                                                    <th scope=\"col\">#</th>\n                                                    <th scope=\"col\">Date</th>\n                                                    <th scope=\"col\">Min Price</th>\n                                                    <th scope=\"col\">Max Price</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody id=\"myTable\">\n                                                {regulateItemList ?.map(item =>\n                                                    <tr>\n                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                        <td>{new Date(item ?.createdAt).getDate() + '-' + new Date(item ?.createdAt).getMonth() + '-' + new Date(item ?.createdAt).getFullYear()}</td>\n                                                        <td>{item ?.minPrice}</td>\n                                                        <td>{item ?.maxPrice}</td>\n                                                    </tr>\n                                                )}\n                                            </tbody>\n                                        </table>\n                                    </div>\n\n                                </div>\n\n                            }\n                        </>\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default RegulateScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\auth\\singin.js",["467"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { signin } from '../../action/auth'\nimport Logo from '../assets/Logo.jpeg'\nimport '../style/Login.css'\nimport $ from 'jquery'\nimport 'jquery-validation'\n\nconst SigninScreen = (props) => {\n\tconst dispatch = useDispatch()\n\tconst [email, setEmail] = useState();\n\tconst [password, setPassword] = useState();\n\tconst userSignin = useSelector(state => state.userSignin);\n\tconst { loading, userInfo, error } = userSignin;\n\n\tuseEffect(() => {\n\t\tif (userInfo) {\n      window.location.href = \"/\"\n      // window.location.reload()\n    }\t\t\n\t}, [userInfo])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(signin(email, password));\n\t}\n\n\treturn (\n\n\t\t<div className='login'>\n\n\t\t\t<div className=\"cover\"></div>\n\t\t\t<div style={{ maxWidth: \"430px\", margin: \"100px auto 50px\" }}>\n\t\t\t\t<div className=\"text-center mb-5\">\n\t\t\t\t\t<span className=\"auth-head-icon\"><i className=\"fa fa-user\"></i></span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ibox login-box\">\n\t\t\t\t\t<form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\n\t\t\t\t\t\t<h4 className=\"font-strong text-center py-4 \">LOG IN</h4>\n\n\t\t\t\t\t\t{loading &&\n\t\t\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t\t\t<div class=\"spinner-border text-primary\" role=\"status\">\n\t\t\t\t\t\t\t\t\t<span class=\"sr-only\">Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{error && <div className=\"text-danger text-center\">Invaled Username or Password</div>}\n\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setEmail(e.target.value)} value={email} type=\"text\" name=\"email\" placeholder=\"Email\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} value={password} type=\"password\" name=\"password\" placeholder=\"Password\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"flexbox mb-5\">\n\t\t\t\t\t\t\t<label className=\"checkbox checkbox-primary\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"remember\" id=\"remember\" />\n\t\t\t\t\t\t\t\t<span className=\"input-span\"></span> Remember\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<a className=\"color-inherit\" >Forgot password?</a>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div className=\"text-center pb-4\">\n\t\t\t\t\t\t\t<button type='submit' className=\"btn btn-primary btn-rounded btn-block\">LOGIN</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t)\n}\n$(function () {\n\t$('#login-form').validate({\n\t\terrorClass: \"help-block\",\n\n\t\trules: {\n\t\t\temail: {\n\t\t\t\trequired: true,\n\t\t\t\temail: true\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\trequired: true\n\t\t\t}\n\t\t},\n\t\thighlight: function (e) {\n\t\t\t$(e).closest(\".form-group\").addClass(\"has-error\")\n\t\t},\n\t\tunhighlight: function (e) {\n\t\t\t$(e).closest(\".form-group\").removeClass(\"has-error\")\n\t\t},\n\t});\n});\nexport default SigninScreen\n\n\n","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\regulateItems.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Navbar.js",["468","469","470","471","472","473"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\nimport Cookie from 'js-cookie'\nimport ProfileImg from './assets/profile.png'\nimport 'bootstrap/js/dist/tab';\nimport logo from './assets/Logo.jpeg'\nimport './style/Navbar.css'\nimport './style/Sidebar.css'\n\nconst Navbar = () => {\n    const history = useHistory()\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n    const [sidebarOpen, setsidebarOpen] = useState(false);\n    const openSidebar = () => {\n        setsidebarOpen(true);\n    };\n    const closeSidebar = () => {\n        setsidebarOpen(false);\n    };\n\n    const logoutHandler = () => {\n        Cookie.remove(\"userInfo\");\n        history.push('/signin')\n        window.location.reload()\n    };\n\n\n    return (\n        <>\n\n            <nav className=\"navbar shadow\">\n                <div className=\"nav_icon\" onClick={() => openSidebar()}>\n                    <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"navbar__left\">\n                    {/* <a href=\"#\">Subscribers</a>\n                <a href=\"#\">Video Management</a>\n                <a className=\"active_link\" href=\"#\">\n                Admin\n                </a> */}\n                </div>\n                <div className=\"navbar__right\">\n                    {/* <a href=\"#\">\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </a>\n                <a href=\"#\">\n                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\n                </a> */}\n                    <div className='chip'>\n                        <span className=\"dropdown\">\n                            <img src={ProfileImg} style={{ cursor: 'pointer' }} className=\"rounded-circle dropdown-toggle navImg\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\n                            <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                                <div style={{ width: '200px', margin: 'auto' }}>\n                                    <img src={ProfileImg} className=\"card-img-top rounded-circle\" style={{ width: '100px', display: \"block\", margin: 'auto' }} alt=\"Card image cap\" />\n                                    <h5 className=\"card-title text-center\">{userInfo?.data?.name}</h5>\n                                    <div className=\"card-body text-center\">\n                                        {/* <Link to='/profile' className=\" btn btn-info shadow rounded mr-2\"> <i className=\"fas fa-user\"></i></Link> */}\n                                        <button onClick={() => { if (window.confirm('Are you sure you want to log out?')) { logoutHandler() }; }} className=\" btn btn-danger shadow rounded\"> <i className=\"fas fa-sign-out-alt\"></i></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </span>\n                        <span className=\"text-dark mx-2 h6\">{userInfo?.data?.name}</span>\n                    </div>\n                </div>\n            </nav>\n\n            <div className={sidebarOpen ? \"sidebar_responsive\" : \"\"} id=\"sidebar\">\n                <div className=\"sidebar__title\">\n                    <div className=\"sidebar__img\">\n                        {/* <Link to='/'>\n                    <img src={logo} alt=\"logo\" />\n\n                    </Link> */}\n                        <h4 className=\"title\">ADMIN</h4>\n                    </div>\n                    <i\n                        onClick={() => closeSidebar()}\n                        className=\"fa fa-times\"\n                        id=\"sidebarIcon\"\n                        aria-hidden=\"true\"\n                    ></i>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/' activeClassName='text-success'>\n                            <i className=\"fa fa-home icon\"> </i>\n                            <p>Dashboard</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                {/* <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/regulate' activeClassName='text-success'>\n                            <i className=\"fa fa-save icon\"> </i>\n                            <p>Regulate Items</p>\n                        </NavLink>\n                    </div>\n                </div> */}\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/items' activeClassName='text-success'>\n                            <i className=\"fa fa-columns icon\"> </i>\n                            <p>Items</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/category' activeClassName='text-success'>\n                            <i className=\"fa fa-align-justify icon\"> </i>\n                            <p>Categories</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/units' activeClassName='text-success'>\n                            <i className=\"fa fa-grip-lines icon\"> </i>\n                            <p>Units</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/area' activeClassName='text-success'>\n                            <i className=\"fa fa-compass icon\"> </i>\n                            <p>Area</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/complaint' activeClassName='text-success'>\n                            <i className=\"fa fa-comment icon\"> </i>\n                            <p>Complaints</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/settings' activeClassName='text-success'>\n                            <i className=\"fa fa-cog icon\"> </i>\n                            <p>Settings</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n            </div>\n\n        </>\n    )\n}\n\nexport default Navbar;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\regulateItems.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\regulateItem.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\regulateChart.js",["474"],"import react from 'react'\r\nimport { Chart } from \"react-google-charts\";\r\n\r\n\r\nconst RegulareChart = () => {\r\n\r\n    return (\r\n        <>\r\n        <h4 className='text-center pt-2'>Rates Analytics </h4>\r\n        <Chart\r\n        \r\n        chartType=\"AreaChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={[\r\n          ['Style', 'Fruit', 'Vagetible', 'Poultry'],\r\n          ['Sun', 92, 96, 2],\r\n          ['Mon', 86, 80, 32],\r\n          ['Tue', 76, 70, 23],\r\n          ['Wed', 56, 60, 34],\r\n          ['Thu', 59, 50, 63],\r\n          ['Fri', 72, 22, 60],\r\n          ['Sat', 80, 17, 40],\r\n        ]}\r\n        options={{\r\n          isStacked: false,\r\n          height: 300,\r\n          legend: { position: 'top', maxLines: 3 },\r\n          vAxis: {\r\n            minValue: 0,\r\n          },\r\n          hAxis: {\r\n            title: 'Date'\r\n          },\r\n        }}\r\n        rootProps={{ 'data-testid': '2' }}\r\n      /> \r\n      </>      \r\n    )\r\n}\r\n\r\nexport default RegulareChart","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\itemBarChart.js",["475","476","477","478","479","480","481","482","483","484","485","486","487","488"],"import react, { useState } from 'react'\r\nimport { Chart } from \"react-google-charts\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nconst ItemBarChart = (props) => {\r\n  const [chartSelect, setcChartSelect] = useState(1)\r\n\r\n  const itemListData = useSelector(state => state.itemListData);\r\n  const { itemList, loading: listItemLoading, error: listItemError } = itemListData;\r\n\r\n  const getFruits = () => {\r\n    var data = []\r\n    data.push(['Item', \"Max Price\", \"Min Price\"])\r\n\r\n    var fruitData = itemList.filter(function (item) {\r\n      return item ?.category === 'fruit' || item ?.category === 'fruits' \r\n    })\r\n    fruitData.map(item =>\r\n      data.push([item.name, item ?.maxPrice, item ?.minPrice])\r\n    )\r\n    return data\r\n  }\r\n\r\n  const getVagetable = () => {\r\n    var data = []\r\n    data.push(['Item', \"Max Price\", \"Min Price\"])\r\n\r\n    var vagetableData = itemList.filter(function (item) {\r\n      return item ?.category === 'vegetable' || item ?.category === 'vegetables' ||  item ?.category === 'vagetable' || item ?.category === 'vagetables'\r\n    })\r\n    vagetableData.map(item =>\r\n      data.push([item.name, item ?.maxPrice, item ?.minPrice])\r\n    )\r\n    return data\r\n  }\r\n\r\n  function chartData() {\r\n    if (chartSelect === 1) {\r\n      return getFruits()\r\n    }\r\n    if (chartSelect === 2) {\r\n      return getVagetable()\r\n    }\r\n    else {\r\n      return getFruits()\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='d-flex justify-content-between'>\r\n        <div className=''>\r\n          <h3 className='text-center text-muted '>Rates Analytics</h3>\r\n        </div>\r\n\r\n        <div className=\"dropdown d-flex justify-content-end mt-2\">\r\n\r\n          <button className=\"btn btn-primary mx-1 mb-1\" onClick={() => setcChartSelect(1)} >Fruits</button>\r\n          <button className=\"btn btn-success mx-1 mb-1\" onClick={() => setcChartSelect(2)}>Vegetables</button>\r\n        </div>\r\n      </div>\r\n      <Chart\r\n        // width={'500px'}\r\n        // height={'300px'}\r\n\r\n        chartType=\"ComboChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={\r\n          chartData()\r\n        }\r\n        options={{\r\n          // colors: ['#FB7A21'],\r\n          // backgroundColor: '#2F4F4F',\r\n          chart: {\r\n            title: 'Company Performance',\r\n            subtitle: 'Sales, Expenses, and Profit: 2014-2017',\r\n          },\r\n          legend: { position: 'none' },\r\n          title: \"weeklyTitle\",\r\n          titleTextStyle: { color: '#FFF' },\r\n          // vAxis: { title: 'Percentage', titleTextStyle: { color: '#FFF' }, textStyle: { color: '#FFF' } },\r\n          // hAxis: { title: 'Month', fontSize: 28, titleTextStyle: { color: '#FFF' }, textStyle: { color: '#FFF' } },\r\n          seriesType: 'bars',\r\n          series: { 5: { type: 'line' } },\r\n        }}\r\n        rootProps={{ 'data-testid': '1' }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ItemBarChart","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\complaint.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\complaint.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\complaint.js",["489","490","491","492","493"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport $ from 'jquery'\nimport { listComplaintAction } from \"../action/complaint\";\nimport NotFound from './assets/notfound.png'\n\nconst ComplaintScreen = (props) => {\n    const dispatch = useDispatch()\n    const [loaded, setLoaded] = useState(false)\n    let serNo = 0\n    function showImage() {\n        return setLoaded(true)\n    }\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const complaintListData = useSelector(state => state.complaintListData);\n    const { complaintList, loading, error } = complaintListData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/complaint') : props.history.push('/signin');\n        dispatch(listComplaintAction())\n    }, [userInfo])\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Area</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {complaintList.length === 0 ? <h5 className=\"text-muted text-center\">Complaint Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Contact</th>\n                                                            <th scope=\"col\">Details</th>\n                                                            <th scope=\"col\">image</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {complaintList?.map(complaint =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{complaint?.name}</td>\n                                                                        <td>{complaint?.contactNo}</td>\n                                                                        <td>{complaint?.detail}</td>\n                                                                        <td>\n                                                                            <img src={NotFound} width=\"100\" height=\"50\" style={loaded ? { display: \"none\" } : {}} />\n\n                                                                            <img src={'http://localhost:5000/' + complaint.image} width=\"100\" height=\"50\" onLoad={showImage} style={loaded ? {} : { display: \"none\" }} />\n\n                                                                        </td>\n\n                                                                    </tr>\n\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                    <ToastContainer />\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default ComplaintScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\complaint.js",[],"G:\\expert system\\server\\client\\src\\index.js",[],["494","495"],"G:\\expert system\\server\\client\\src\\App.js",["496","497","498","499"],"import './App.css';\nimport { BrowserRouter, Route, Router, Switch, useLocation } from 'react-router-dom'\nimport StartScreen from './screen/StartScreen';\nimport DetailScreen from './screen/DetailScreen';\nimport ContactScreen from './screen/Contact';\nimport SigninScreen from './screen/auth/singin';\nimport SignupScreen from './screen/auth/signup';\nimport DashboardScreen from './screen/admin/Dashboard';\nimport AdminDetailScreen from './screen/admin/DetailScreen';\nimport AdminUserScreen from './screen/admin/user';\nimport AdminMessageScreen from './screen/admin/Message';\nimport SettingScreen from './screen/admin/Setting';\nimport ClientSigninScreen from './screen/Signin';\nimport ClientSignupScreen from './screen/signup';\nimport ClientForgotPasswordScreen from './screen/forgotPassord';\nimport ClientNewPasswordScreen from './screen/newPassword';\nimport ProfileScreen from './screen/Profile';\nimport UplaodFileScreen from './screen/admin/UplaodFile';\nimport RequestPremiumScreen from './screen/admin/RequestPremium';\nimport VerifiedScreen from './screen/verified';\n\nfunction App() {\n  var location = useLocation();\n  return (\n    <div className=\"\">\n      <>\n        <Route exact path='/' component={StartScreen} />\n        <Route exact path='/detail' component={DetailScreen} />\n        <Route exact path='/contact' component={ContactScreen} />\n        <Route exact path='/profile' component={ProfileScreen} />\n        <Route exact path='/signin' component={ClientSigninScreen} />\n        <Route exact path='/signup' component={ClientSignupScreen} />\n        <Route exact path='/reset-password' component={ClientForgotPasswordScreen} />\n        <Route exact path='/reset/:token' component={ClientNewPasswordScreen} />\n        <Route exact path='/account/confirm/:token' component={VerifiedScreen} />\n      </>\n      <div>\n        <Route exact path='/admin/signin' component={SigninScreen} />\n        <Route exact path='/admin/add-user' component={SignupScreen} />\n        <Route exact path='/admin/dashboard' component={DashboardScreen} />\n        <Route exact path='/admin/product-association' component={UplaodFileScreen} />\n        <Route exact path='/admin/detail' component={AdminDetailScreen} />\n        <Route exact path='/admin/user' component={AdminUserScreen} />\n        <Route exact path='/admin/request-premium' component={RequestPremiumScreen} />\n        <Route exact path='/admin/message' component={AdminMessageScreen} />\n        <Route exact path='/admin/settings' component={SettingScreen} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","G:\\expert system\\server\\client\\src\\reportWebVitals.js",[],"G:\\expert system\\server\\client\\src\\store\\Store.js",[],"G:\\expert system\\server\\client\\src\\screen\\auth\\singin.js",["500","501","502"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { signin } from '../../action/auth'\nimport Logo from '../assets/Logo.png'\nimport '../style/Login.css'\nimport $ from 'jquery'\nimport 'jquery-validation'\nimport { adminSigninAction } from '../../action/admin/auth'\n\nconst SigninScreen = (props) => {\n\tconst dispatch = useDispatch()\n\tconst [email, setEmail] = useState();\n\tconst [password, setPassword] = useState();\n\n\tconst adminSignin = useSelector(state => state.adminSignin);\n\tconst { loading, success, adminInfo, error } = adminSignin;\n\n\tuseEffect(() => {\n\t\tif (adminInfo) {\n\t\t\twindow.location.href = \"/admin/dashboard\"\n\t\t}\n\t}, [adminInfo])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(adminSigninAction(email, password));\n\t}\n\n\treturn (\n\n\t\t<div className='login'>\n\n\t\t\t<div className=\"cover\"></div>\n\t\t\t<div style={{ maxWidth: \"430px\", margin: \"100px auto 50px\" }}>\n\t\t\t\t<div className=\"text-center mb-5\">\n\t\t\t\t\t<span className=\"auth-head-icon\"><i className=\"fa fa-user\"></i></span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ibox login-box\">\n\t\t\t\t\t<form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\n\t\t\t\t\t\t<h4 className=\"font-strong text-center py-4 \">LOG IN</h4>\n\n\t\t\t\t\t\t{loading &&\n\t\t\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t\t\t<div class=\"spinner-border text-primary\" role=\"status\">\n\t\t\t\t\t\t\t\t\t<span class=\"sr-only\">Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{success && <div className=\"text-primary text-center h6\">{adminInfo.message}</div>}\n\t\t\t\t\t\t{error && <div className=\"text-danger text-center h6\">{error.message}</div>}\n\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setEmail(e.target.value)} value={email} type=\"text\" name=\"email\" placeholder=\"Email\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} value={password} type=\"password\" name=\"password\" placeholder=\"Password\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"flexbox mb-5\">\n\t\t\t\t\t\t\t<label className=\"checkbox checkbox-primary\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"remember\" id=\"remember\" />\n\t\t\t\t\t\t\t\t<span className=\"input-span\"></span> Remember\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<a className=\"color-inherit\" >Forgot password?</a>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div className=\"text-center pb-4\">\n\t\t\t\t\t\t\t<button type='submit' className=\"btn btn-success btn-rounded btn-block\">LOGIN</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default SigninScreen\n\n\n","G:\\expert system\\server\\client\\src\\reducer\\auth.js",[],"G:\\expert system\\server\\client\\src\\action\\auth.js",[],"G:\\expert system\\server\\client\\src\\screen\\chart\\itemBarChart.js",["503","504","505","506","507","508","509","510","511","512","513","514","515","516"],["517","518"],"G:\\expert system\\server\\client\\src\\screen\\chart\\regulateChart.js",["519"],"G:\\expert system\\server\\client\\src\\contant\\auth.js",[],"G:\\expert system\\server\\client\\src\\screen\\StartScreen.js",["520","521","522","523","524"],"import React, { useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport uplaodImg from './assets/upload.png'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { refreshUser } from '../action/user';\r\nconst StartScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = () => {\r\n        props.history.push('/detail')\r\n    }\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {loading, userInfo } = userSignin;\r\n\r\n    useEffect(() => {\r\n        userInfo ? props.history.push('/') : props.history.push('/signin')\r\n        // dispatch(refreshUser())\r\n    }, [userInfo])\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"m-4\">\r\n                {loading ?\r\n                    <div class=\" d-flex justify-content-center align-items-center h-100\">\r\n                        <div class=\"spinner-border text-primary \" style={{ width: \"50px\", height: \"50px\" }} role=\"status\">\r\n                            <span class=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div> :\r\n                    <div className='cart shadow bg-white rounded p-3 '>\r\n                        <div className=\"row justify-content-around my-3\">\r\n                            <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                                <img width=\"40%\" src={uplaodImg} />\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <h3 className='text-muted text-center pb-3'>Uplaod File </h3>\r\n\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <select className=\"form-control border-top-0 border-left-0 border-right-0 bg-light rounded\" id=\"exampleFormControlSelect1\" required>\r\n                                            <option value=\"\" disabled selected>Select File Type</option>\r\n                                            <option value=\"\">JSON</option>\r\n                                            <option value=\"\">Excel</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group custom-file mb-3\">\r\n                                        <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" accept=\".pdf\" />\r\n                                        <label className=\"form-control rounded border-top-0 border-left-0 border-right-0 custom-file-label bg-light rounded\" for=\"customFile\">Choose file</label>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"text-center\">\r\n                                        <button onClick={submitHandler} type=\"button\" className=\"btn btn-success\">\r\n                                            <i className=\"fas fa-file\"> Uplaod File </i>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StartScreen","G:\\expert system\\server\\client\\src\\screen\\Navbar.js",["525","526","527","528","529","530"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport ProfileImg from './assets/profile.png'\r\nimport Cookie from 'js-cookie'\r\nimport { premiumRequest } from '../action/premium';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { refreshUser } from '../action/user';\r\n\r\nconst Navbar = (props) => {\r\n  const dispatch = useDispatch()\r\n  \r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const {userInfo } = userSignin;\r\n  \r\n  const userRefreshRed = useSelector(state => state.userRefreshRed);\r\n  const {userRef } = userRefreshRed;\r\n\r\n  const premiumRequestRed = useSelector(state => state.premiumRequestRed);\r\n  const { loading, success, premiumReq, error } = premiumRequestRed;\r\n\r\n  const logoutHandler = () => {\r\n    Cookie.remove(\"userInfo\");\r\n    window.location.href = \"/signin\"\r\n  };\r\n\r\n  const premiumHandler = () => {\r\n    // e.preventDefault()\r\n    dispatch(premiumRequest())\r\n  }\r\n\r\n  if (success) {\r\n    toast.success(premiumReq.message);\r\n  }\r\n  if (error) {\r\n    toast.error(error.message);\r\n  }\r\n\r\n  useEffect(() =>{\r\n    dispatch(refreshUser())\r\n  },[])\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg bg-white shadow-sm \">\r\n      <NavLink to=\"/\" exact={true} activeClassName='text-success' className=\"navbar-brand mb-0 h1 mx-2 \">Expert System</NavLink>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"fa fa-bars \"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <NavLink to=\"/contact\" exact={true} activeClassName='text-success' className=\"nav-link mb-0 h5  mx-2\" >Get Support </NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n        {true &&\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item active\">\r\n              <div className='chip'>\r\n                <span className=\"dropdown\">\r\n                  <img src={ProfileImg} style={{ cursor: 'pointer' }} className=\"rounded-circle dropdown-toggle navImg\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\r\n                  <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\r\n                    <div style={{ width: '200px', margin: 'auto' }}>\r\n                      <img src={ProfileImg} className=\"card-img-top rounded-circle\" style={{ width: '100px', display: \"block\", margin: 'auto' }} alt=\"Card image cap\" />\r\n                      <h5 className=\"card-title text-center\">{userInfo?.user?.name}</h5>\r\n                      <div className=\"card-body text-center\">\r\n                        {/* <NavLink to='/profile' className=\" btn btn-info shadow rounded mr-2\"> <i className=\"fas fa-user\"></i></NavLink> */}\r\n                        <button onClick={() => { if (window.confirm('Are you sure you want to log out?')) {logoutHandler() }; }} className=\" btn btn-danger shadow rounded\"> <i className=\"fas fa-sign-out-alt\"></i></button>\r\n                        <Link to=\"/profile\" exact={true} activeClassName='text-success' className=\" btn btn-success shadow rounded mx-2\"> <i className=\"fas fa-user-alt\"></i></Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </span>\r\n                <span className=\"text-dark mx-2 h6\"> {userRef?.isPremium === true &&<span className='fas fa-crown text-success'></span>} {userInfo?.user?.name}</span>\r\n              </div>\r\n            </li>\r\n            <li className=\"nav-item active my-1\">\r\n              {userRef?.isPremium === false && <button onClick={() => { if (window.confirm('Request a Premium Account?')) { premiumHandler()} }} className=\" btn btn-success shadow rounded mx-2\"> <i className=\"fas fa-crown\"></i></button>} \r\n            </li>\r\n            <ToastContainer />\r\n          </ul> \r\n        }\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}\r\n\r\nexport default Navbar","G:\\expert system\\server\\client\\src\\screen\\actionButton.js",["531"],"G:\\expert system\\server\\client\\src\\screen\\ActionButton.js",["532"],"import React from 'react'\r\nimport './style/actionButton.css'\r\n\r\nconst ActionButton = () => {\r\n    return (\r\n        <>\r\n            <div className=\"zoom\">\r\n                <a target='_blank' href=\"https://wa.me/+923088887580\" className=\"zoom-btn-large\" id=\"zoomBtn\" >\r\n                    <i className=\"fa fa-whatsapp fa-4x\"></i>\r\n                </a>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionButton",["533","534"],"G:\\expert system\\server\\client\\src\\screen\\Contact.js",["535","536"],"import React, { useEffect, useState } from 'react';\r\nimport Navbar from './Navbar';\r\nimport contactImg from './assets/contact.png'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { messageRequest } from '../action/message';\r\n\r\nconst ContactScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [message, setMessage] = useState(\"\")\r\n    const [file, setFile] = useState(\"\")\r\n    var formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('message', message);\r\n    \r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const messageRequestRed = useSelector(state => state.messageRequestRed);\r\n    const { loading, success, messageReq, error } = messageRequestRed;\r\n\r\n    useEffect(() => {\r\n        userInfo ? props.history.push('/contact') : props.history.push('/signin')\r\n    }, [userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(messageRequest(formData))\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"m-4\">\r\n                <div className='cart shadow bg-white rounded p-3 '>\r\n                    <div className=\"row justify-content-around my-3\">\r\n                        <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                            <img width=\"60%\" src={contactImg} />\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-6\">\r\n                            <h3 className='text-muted text-center pb-3'>Get in touch </h3>\r\n\r\n                            <form onSubmit={submitHandler}>\r\n\r\n                                {loading &&\r\n                                    <div class=\"text-center\">\r\n                                        <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                            <span class=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                                {success && <div className=\"text-primary text-center h6\">{messageReq.message}</div>}\r\n\r\n\r\n                                <div className=\"form-group custom-file mb-3\">\r\n                                    <input onChange={(e) => setFile(e.target.files[0])} className=\"form-control-file rounded border-top-0 border-left-0 border-right-0 bg-light rounded\" type=\"file\" id=\"customFile\" />\r\n                                    {/* <input onChange={(e) => setFile(e.target.files[0])} type=\"file\" className=\"custom-file-input \" id=\"customFile\"  />\r\n                                    <label  className=\"form-control rounded border-top-0 border-left-0 border-right-0 custom-file-label bg-light rounded\" for=\"customFile\">Choose file (Optional) </label> */}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <textarea onChange={(e) => setMessage(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0 bg-light rounded\" id=\"exampleFormControlTextarea1\" placeholder=\"Message\" rows=\"3\" required />\r\n                                </div>\r\n\r\n                                <div className=\"text-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-success  text-center\">\r\n                                        Send <i className=\"fas fa-arrow-right\">  </i>\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactScreen","G:\\expert system\\server\\client\\src\\screen\\DetailScreen.js",["537"],"import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport Navbar from './Navbar';\r\nimport Chart from \"react-google-charts\";\r\nimport FrequentChartScreen from './admin/chart.js/frequectChart';\r\n\r\nconst DetailScreen = (props) => {\r\n    let serNo = 0\r\n    const [visibility, setVisibility] = useState(true)\r\n\r\n    const frequentItemsets = [\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"MilkPak Full Cream 250ml\"\r\n        ],\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"MilkPak Full Cream 250ml\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Lays French Cheese 20Rs\",\r\n            \"Candy Rs.5\",\r\n            \"Dall Mongi 500g\"\r\n        ],\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"Dall Mongi 500g\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"Dall Mongi 500g\",\r\n            \"MilkPak Full Cream 250ml\"\r\n        ],\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"Dall Mongi 500g\",\r\n            \"MilkPak Full Cream 250ml\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Lays French Cheese 20Rs\",\r\n            \"Lays Yogurt&Herb 20Rs\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Islamabad Tea 950g\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Butter Puff G HR\",\r\n            \"MilkPak Full Cream 250ml\"\r\n        ],\r\n        [\r\n            \"LiptonYellow Label Tea 190g\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Misk POP-UP \",\r\n            \"Tapal Green Tea Lemon 30Bags\"\r\n        ],\r\n        [\r\n            \"Misk POP-UP \",\r\n            \"Tapal Green Tea Lemon 30Bags\",\r\n            \"White Sugar\"\r\n        ]\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"m-4\">\r\n                <div className='cart shadow bg-white rounded p-3 '>\r\n                    {/* <div>\r\n                    <h5 className=\"text-muted\">Title</h5>\r\n                </div> */}\r\n\r\n                    {/* filter */}\r\n\r\n                    <div className='row justify-content-between'>\r\n                        <form className='col-sm-4'>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control rounded bg-light\" id=\"myInput\" placeholder=\"Search\" />\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"mr-3\">\r\n                            <button type=\"button\" className=\"btn btn-success btn-sm\" >\r\n                                <i className=\"fas fa-download\"> Export </i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n\r\n                        <ul className=\"nav nav-tabs md-tabs nav-justified rounded-lg mb-3\" id=\"myTab\" role=\"tablist\">\r\n                            <li className=\"nav-item waves-effect waves-light\" onClick={() => setVisibility(true)}>\r\n                                <a className=\"nav-link active\" id=\"table-association-tab-md\" data-toggle=\"tab\" href=\"#table-association-md\" role=\"tab\" aria-controls=\"table-association-md\" aria-selected=\"true\">Tablular View <span className=\"badge badge-primary\"> {frequentItemsets?.length} </span></a>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item waves-effect waves-light\" onClick={() => setVisibility(false)}>\r\n                                <a className=\"nav-link\" id=\"graph-association-tab-md\" data-toggle=\"tab\" href=\"#graph-association-md\" role=\"tab\" aria-controls=\"graph-association-md\" aria-selected=\"false\">Graphical View</a>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        {visibility ?\r\n                            <div className='table-responsive '>\r\n                                <table className=\"table table-bordered table table-hover\">\r\n                                    <thead>\r\n                                        <tr className='table-active'>\r\n                                            <th scope=\"col\">S No.</th>\r\n                                            <th scope=\"col\">Association Items</th>\r\n                                            <th scope=\"col\">Order Frequency</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody id=\"myTable\">\r\n                                        {frequentItemsets.map((data, index) =>\r\n                                            <tr>\r\n                                                <th scope=\"row\">{serNo += 1}</th>\r\n                                                <td>{data.join(' -> ')}</td>\r\n                                                <td>{index * 2 + 3}</td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n\r\n                                </table>\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <ul className=\"pagination pagination-sm\">\r\n                                        <li className=\"page-item\"><button className=\"page-link\">Previous</button></li>\r\n                                        <li className=\"page-item px-3 text-muted\">3 of 100</li>\r\n                                        <li className=\"page-item\"><button className=\"page-link\">Next</button></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <FrequentChartScreen frequentItemsets={frequentItemsets} />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DetailScreen","G:\\expert system\\server\\client\\src\\screen\\auth\\signup.js",["538","539","540","541","542","543","544","545"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { signup } from '../../action/auth'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from 'react-router-dom';\nimport Navbar from '../admin/Navbar';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\nimport { adminSignupAction } from '../../action/admin/auth';\n\nconst SignupScreen = (props) => {\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [name, setName] = useState('');\n    const [accessLevel, setAccessLevel] = useState(1);\n    const [visible, setVisible] = useState(true)\n\n    const adminSignup = useSelector(state => state.adminSignup);\n    const { loading, success, adminSignupInfo, error } = adminSignup;\n\n    const adminSignin = useSelector(state => state.adminSignin);\n    const { adminInfo } = adminSignin;\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(adminSignupAction(name, email, password, visible));\n    }\n\n    useEffect(() => {\n        adminInfo ? props.history.push('/admin/add-user') : props.history.push('/admin/signin')\n    }, [adminInfo])\n\n    return (\n        <div className='containerMain'>\n            <Navbar />\n            <main>\n                <form onSubmit={submitHandler} className='card text-dark bg-white shadow rounded-lg mb-3' style={{ maxWidth: '500px', margin: '20px auto' }}>\n                    <h5 className=\"card-header text-center text-dark\">Add User </h5>\n                    <div className=\"card-body\">\n                        {loading &&\n                            <div class=\"text-center\">\n                                <div class=\"spinner-border text-primary\" role=\"status\">\n                                    <span class=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n                        }\n                        {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\n                        {success && <div className=\"text-primary text-center h6\">{adminSignupInfo.message}</div>}\n\n                        <div className=\"form-group\">\n                            {/* <label className=\"card-title bg-info w-100 text-white\" for=\"name\">Name:</label> */}\n                            <input type=\"text\" className=\"form-control border-top-0 border-left-0 border-right-0\" id=\"name\" placeholder=\"Enter Name\" name=\"name\" onChange={(e) => setName(e.target.value)} required />\n                        </div>\n\n                        <div className=\"form-group\">\n                            {/* <label className=\"card-title bg-info w-100 text-white\" for=\"email\">email:</label> */}\n                            <input type=\"email\" className=\"form-control border-top-0 border-left-0 border-right-0\" id=\"email\" placeholder=\"Enter Email\" name=\"Email\" onChange={(e) => setEmail(e.target.value)} required />\n                        </div>\n\n                        <div className=\"form-group\">\n                            {/* <label className=\"card-title bg-info w-100 text-white\" for=\"pwd\">Password:</label> */}\n                            <input type=\"password\" className=\"form-control border-top-0 border-left-0 border-right-0\" id=\"pwd\" placeholder=\"Enter password\" name=\"pswd\" onChange={(e) => setPassword(e.target.value)} required />\n                        </div>\n\n                        <div className=\"form-group\" >\n                            <BootstrapSwitchButton\n                                checked={visible}\n                                onlabel='Super Admin'\n                                onstyle='success'\n                                offlabel='Sub Admin'\n                                offstyle='info'\n                                style='w-100'\n                               onChange={() => setVisible(!visible)}\n                            />\n                        </div>\n\n\n\n                        <button type=\"submit\" style={{ width: '100%' }} className=\"btn btn-success shadow rounded-lg font-weight-bold\">Submit</button>\n                    </div>\n                </form>\n            </main>\n        </div>\n    )\n}\n\nexport default SignupScreen\n\n\n","G:\\expert system\\server\\client\\src\\screen\\admin\\Navbar.js",["546","547","548","549","550","551","552","553","554","555"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\nimport Cookie from 'js-cookie'\nimport ProfileImg from '../assets/profile.png'\nimport 'bootstrap/js/dist/tab';\nimport logo from '../assets/Logo.png'\nimport '../style/Navbar.css'\nimport '../style/Sidebar.css'\n\nconst Navbar = () => {\n    const history = useHistory()\n    const adminSignin = useSelector(state => state.adminSignin);\n\tconst { loading, success, adminInfo, error } = adminSignin;\n\n    const [sidebarOpen, setsidebarOpen] = useState(false);\n\n    const openSidebar = () => {\n        setsidebarOpen(true);\n    };\n    const closeSidebar = () => {\n        setsidebarOpen(false);\n    };\n\n    const logoutHandler = () => {\n        Cookie.remove(\"adminInfo\");\n        window.location.href='/admin/signin'\n    };\n\n    return (\n        <>\n\n            <nav className=\"navbar_main shadow\">\n                <div className=\"nav_icon\" onClick={() => openSidebar()}>\n                    <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"navbar__left\">\n                    {/* <a href=\"#\">Subscribers</a>\n                <a href=\"#\">Video Management</a>\n                <a className=\"active_link\" href=\"#\">\n                Admin\n                </a> */}\n                </div>\n                <div className=\"navbar__right\">\n                    {/* <a href=\"#\">\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </a>\n                <a href=\"#\">\n                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\n                </a> */}\n                    <div className='chip'>\n                        <span className=\"dropdown\">\n                            <img src={ProfileImg} style={{ cursor: 'pointer' }} className=\"rounded-circle dropdown-toggle navImg\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\n                            <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                                <div style={{ width: '200px', margin: 'auto' }}>\n                                    <img src={ProfileImg} className=\"card-img-top rounded-circle\" style={{ width: '100px', display: \"block\", margin: 'auto' }} alt=\"Card image cap\" />\n                                    <h5 className=\"card-title text-center\">{adminInfo?.user?.name || \"User name\"}</h5>\n                                    <div className=\"card-body text-center\">\n                                        {/* <Link to='/profile' className=\" btn btn-info shadow rounded mr-2\"> <i className=\"fas fa-user\"></i></Link> */}\n                                        <button onClick={() => { if (window.confirm('Are you sure you want to log out?')) { logoutHandler() }; }} className=\" btn btn-danger shadow rounded\"> <i className=\"fas fa-sign-out-alt\"></i></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </span>\n                        <span className=\"text-dark mx-2 h6\">{adminInfo?.user?.name || \"User Name\"}</span>\n                    </div>\n                </div>\n            </nav>\n\n            <div className={sidebarOpen ? \"sidebar_responsive\" : \"\"} id=\"sidebar\">\n                <div className=\"sidebar__title\">\n                    <div className=\"sidebar__img\">\n                        {/* <Link to='/'>\n                    <img src={logo} alt=\"logo\" />\n\n                    </Link> */}\n                        <h4 className=\"title\">ADMIN</h4>\n                    </div>\n                    <i\n                        onClick={() => closeSidebar()}\n                        className=\"fa fa-times\"\n                        id=\"sidebarIcon\"\n                        aria-hidden=\"true\"\n                    ></i>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/dashboard' activeClassName='text-success'>\n                            <i className=\"fa fa-home icon\"> </i>\n                            <p>Dashboard</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/product-association' activeClassName='text-success'>\n                            <i className=\"fas fa-file-upload icon\"> </i>\n                            <p>Product Association</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/request-premium' activeClassName='text-success'>\n                            <i className=\"fas fa-crown icon\"> </i>\n                            <p>Request Premium</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/user' activeClassName='text-success'>\n                            <i className=\"fa fa-user icon\"> </i>\n                            <p>User</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/message' activeClassName='text-success'>\n                            <i className=\"fa fa-comment icon\"> </i>\n                            <p>Message</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/settings' activeClassName='text-success'>\n                            <i className=\"fa fa-cog icon\"> </i>\n                            <p>Settings</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n            </div>\n\n        </>\n    )\n}\n\nexport default Navbar;","G:\\expert system\\server\\client\\src\\screen\\admin\\Dashboard.js",["556","557","558"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../App.css';\r\nimport Navbar from \"./Navbar\";\r\nimport '../style/dashboard.css'\r\nimport PremiumChartScreen from \"./chart.js/PremiumChart\";\r\nimport { userListAction } from \"../../action/admin/user\";\r\nimport { messageListAction } from \"../../action/admin/message\";\r\nimport { premiumListAction } from \"../../action/admin/premium\";\r\n\r\nconst DashboardScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const adminSignin = useSelector(state => state.adminSignin);\r\n    const { adminInfo } = adminSignin;\r\n\r\n    const userListRed = useSelector(state => state.userListRed)\r\n    const { loading, error, userList } = userListRed\r\n\r\n    const messageListRed = useSelector(state => state.messageListRed);\r\n    const { messageList } = messageListRed;\r\n\r\n    const premiumListRed = useSelector(state => state.premiumListRed);\r\n    const { premiumList } = premiumListRed\r\n\r\n    useEffect(() => {\r\n        adminInfo ? props.history.push('/admin/dashboard') : props.history.push('/admin/signin')\r\n        dispatch(userListAction())\r\n        dispatch(messageListAction())\r\n        dispatch(premiumListAction())\r\n\r\n    }, [adminInfo])\r\n\r\n    const filterPremium = userList && userList.filter(user => {\r\n        return user?.isPremium === true\r\n    })\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n\r\n            <Navbar />\r\n            <main >\r\n                {loading ?\r\n                    <div class=\" d-flex justify-content-center align-items-center h-100\">\r\n                        <div class=\"spinner-border text-primary \" style={{ width: \"50px\", height: \"50px\" }} role=\"status\">\r\n                            <span class=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div> :\r\n\r\n                    < div className=\" m-4\">\r\n\r\n                        <div className=\"row d-flex \">\r\n\r\n                            <div className=\"col-sm mt-2\">\r\n                                <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#ff9f00', }}>\r\n                                    <div>\r\n                                        <svg viewBox=\"0 0 36 36\" className=\"circular-chart orange\">\r\n                                            <path className=\"circle-bg\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <path className=\"circle\"\r\n                                                strokeDasharray=\"30, 100\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <text x=\"18\" y=\"20.35\" className=\"percentage\"> {`${filterPremium?.length || 0}% `}</text>\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div className=\"svg-text\">\r\n                                        <h3 style={{ color: \"#ff9f00\" }}> {filterPremium?.length || 0}</h3>\r\n                                        <p className=' text-muted'>Premium Users</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm mt-2\">\r\n                                <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#4CC790', }}>\r\n                                    <div>\r\n                                        <svg viewBox=\"0 0 36 36\" className=\"circular-chart green\">\r\n                                            <path className=\"circle-bg\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <path className=\"circle\"\r\n                                                strokeDasharray=\"30, 100\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <text x=\"18\" y=\"20.35\" className=\"percentage\"> {`${userList?.length || 0}%`}</text>\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div className=\"svg-text\">\r\n                                        <h3 style={{ color: \"#4CC790\" }}>{userList?.length || 0}</h3>\r\n                                        <p className=' text-muted'>Total Users</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm mt-2\">\r\n                                <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart \" style={{ borderBottomColor: '#3c9ee5' }}>\r\n                                    <div>\r\n                                        <svg viewBox=\"0 0 36 36\" className=\"circular-chart blue\">\r\n                                            <path className=\"circle-bg\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <path className=\"circle\"\r\n                                                strokeDasharray=\"30, 100\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <text x=\"18\" y=\"20.35\" className=\"percentage\">{`${messageList?.length || 0}%`}</text>\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div className=\"svg-text\">\r\n                                        <h3 style={{ color: '#3c9ee5' }}>{messageList?.length || 0}</h3>\r\n                                        <p className=' text-muted'>Total Messages</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm mt-2\">\r\n                                <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#F75A5F', }}>\r\n                                    <div>\r\n                                        <svg viewBox=\"0 0 36 36\" className=\"circular-chart red\">\r\n                                            <path className=\"circle-bg\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <path className=\"circle\"\r\n                                                strokeDasharray=\"30, 100\"\r\n                                                d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                            />\r\n                                            <text x=\"18\" y=\"20.35\" className=\"percentage\">{`${premiumList?.length || 0}%`}</text>\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div className=\"svg-text\">\r\n                                        <h3 style={{ color: '#F75A5F' }}>{premiumList?.length || 0}</h3>\r\n                                        <p className=' text-muted'>Premium Requests</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row mt-2\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"shadow bg-white rounded p-2\">\r\n                                    <PremiumChartScreen />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DashboardScreen;","G:\\expert system\\server\\client\\src\\screen\\admin\\DetailScreen.js",["559","560","561"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport Navbar from './Navbar';\r\n\r\nconst AdminDetailScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    let serNo = 0\r\n    \r\n\tconst adminSignin = useSelector(state => state.adminSignin);\r\n\tconst {adminInfo } = adminSignin;\r\n\r\n    useEffect(() => {\r\n        adminInfo ? props.history.push('/admin/detail') : props.history.push('/admin/signin')\r\n    },[adminInfo])    \r\n    return (\r\n        <div className='containerMain'>\r\n            <Navbar />\r\n            <main>\r\n                <div className=\"m-4\">\r\n                    <div className='cart shadow bg-white rounded p-3'>\r\n                        {/* <div>\r\n                    <h5 className=\"text-muted\">Title</h5>\r\n                </div> */}\r\n\r\n                        {/* filter */}\r\n\r\n                        <div className='row justify-content-between'>\r\n                            <form className='col-sm-4'>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control rounded bg-light\" id=\"myInput\" placeholder=\"Search\" />\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"mr-3\">\r\n                                <button type=\"button\" className=\"btn btn-success btn-sm\" data-toggle=\"modal\" data-target=\"#uploadFile\">\r\n                                    <i className=\"fas fa-download\"> Export </i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='table-responsive '>\r\n                            <table className=\"table table-bordered table table-hover\">\r\n                                <thead>\r\n                                    <tr className='table-active'>\r\n                                        <th scope=\"col\">S No.</th>\r\n                                        <th scope=\"col\">Association Items</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody id=\"myTable\">\r\n                                    <tr>\r\n                                        <th scope=\"row\">{serNo += 1}</th>\r\n                                        <td>Bread, Milk</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th scope=\"row\">{serNo += 1}</th>\r\n                                        <td>Bread, Milk, Eggs</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th scope=\"row\">{serNo += 1}</th>\r\n                                        <td>Coke, Milk, Beer</td>\r\n                                    </tr>\r\n                                </tbody>\r\n\r\n                            </table>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <ul className=\"pagination pagination-sm\">\r\n                                    <li className=\"page-item\"><button className=\"page-link\">Previous</button></li>\r\n                                    <li className=\"page-item px-3 text-muted\">3 of 100</li>\r\n                                    <li className=\"page-item\"><button className=\"page-link\">Next</button></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminDetailScreen","G:\\expert system\\server\\client\\src\\screen\\admin\\user.js",["562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584"],"import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport Navbar from './Navbar';\r\nimport '../../App.css';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { confirmActivateUserAction, confirmDeactivateUserAction, userListAction } from '../../action/admin/user';\r\nimport { confirmBasicAction, confirmPremiumAction } from '../../action/admin/premium';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst AdminUserScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    let allSerNo = 0\r\n    let premiumSerNo = 0\r\n    let basicSerNo = 0\r\n    let deactivateSerNo = 0\r\n\r\n    const userListRed = useSelector(state => state.userListRed)\r\n    const { loading, error, userList } = userListRed\r\n\r\n    const confirmPremiumRed = useSelector(state => state.confirmPremiumRed)\r\n    const { premiumLoading, premiumError, premiumSuccess, confirmPremium } = confirmPremiumRed\r\n\r\n    const confirmBasicRed = useSelector(state => state.confirmBasicRed)\r\n    const { basicLoading, basicError, basicSuccess, confirmBasic } = confirmBasicRed\r\n\r\n    const confirmActivateUserRed = useSelector(state => state.confirmActivateUserRed)\r\n    const { activateLoading, activateError, activateSuccess, conformActivateUser } = confirmActivateUserRed\r\n\r\n    const confirmDeActivateUserRed = useSelector(state => state.confirmDeActivateUserRed)\r\n    const { deActivateLoading, deActivateError, deActivateSuccess, conformDeActivateUser } = confirmDeActivateUserRed\r\n    \r\n    const adminSignin = useSelector(state => state.adminSignin);\r\n\tconst {adminInfo } = adminSignin;\r\n\r\n    useEffect(() => {\r\n        adminInfo ? props.history.push('/admin/user') : props.history.push('/admin/signin')\r\n    },[adminInfo])\r\n\r\n    if (premiumSuccess) {\r\n        toast.success(confirmPremium.message);\r\n        window.location.reload()\r\n    }\r\n\r\n    if (premiumError) {\r\n        toast.error(premiumError.message);\r\n    }\r\n\r\n    if (basicSuccess) {\r\n        toast.success(confirmBasic.message);\r\n        window.location.reload()\r\n    }\r\n\r\n    if (basicError) {\r\n        toast.error(basicError.message);\r\n    }\r\n\r\n    if (activateSuccess) {\r\n        toast.success(conformActivateUser.message);\r\n        window.location.reload()\r\n    }\r\n\r\n    if (activateError) {\r\n        toast.error(activateError.message);\r\n    }\r\n\r\n    if (deActivateSuccess) {\r\n        toast.success(conformDeActivateUser.message);\r\n        window.location.reload()\r\n    }\r\n\r\n    if (deActivateError) {\r\n        toast.error(deActivateError.message);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(userListAction())\r\n    }, [])\r\n\r\n    const filterPremium = userList && userList.filter(user => {\r\n        return user?.isPremium === true\r\n    })\r\n\r\n    const filterBasic = userList && userList.filter(user => {\r\n        return user?.isPremium === false\r\n    })\r\n\r\n    const filterDelete = userList && userList.filter(user => {\r\n        return user?.accStatus === false\r\n    })\r\n\r\n\r\n    const deactivateHandler = (id) => {\r\n        dispatch(confirmDeactivateUserAction(id))\r\n    }\r\n\r\n    const activateHandler = (id) => {\r\n        dispatch(confirmActivateUserAction(id))\r\n    }\r\n\r\n    const premiumHandler = (id) => {\r\n        dispatch(confirmPremiumAction(id))\r\n    }\r\n    const basicHandler = (id) => {\r\n        dispatch(confirmBasicAction(id))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n\r\n            <Navbar />\r\n            <main>\r\n                {loading ?\r\n                    <div class=\" d-flex justify-content-center align-items-center h-100\">\r\n                        <div class=\"spinner-border text-primary \" style={{ width: \"50px\", height: \"50px\" }} role=\"status\">\r\n                            <span class=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div> :\r\n                    <div className=\"m-4\">\r\n                        <div className='cart shadow bg-white rounded p-3'>\r\n                            {/* <div>\r\n                    <h5 className=\"text-muted\">Title</h5>\r\n                </div> */}\r\n\r\n                            {/* filter */}\r\n                            <div className='row justify-content-between '>\r\n                                <form className='col-sm-4 ml-2'>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className=\"form-control rounded bg-light\" id=\"myInput\" placeholder=\"Search\" />\r\n                                    </div>\r\n                                </form>\r\n                                <div className=\"mr-3\">\r\n                                    <button type=\"button\" onClick={() => props.history.push('/admin/add-user')} className=\"btn btn-success btn-sm\" data-toggle=\"modal\" data-target=\"#uploadFile\">\r\n                                        <i className=\"fas fa-user-plus\"> Add user </i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <section className=\"mx-2 pb-3\">\r\n\r\n                                <ul className=\"nav nav-tabs md-tabs nav-justified rounded-lg\" id=\"myTabMD\" role=\"tablist\">\r\n\r\n                                    <li className=\"nav-item waves-effect waves-light\">\r\n                                        <a className=\"nav-link active\" id=\"all-tab-md\" data-toggle=\"tab\" href=\"#all-md\" role=\"tab\" aria-controls=\"all-md\" aria-selected=\"true\">All Users <span className=\"badge badge-primary\"> {userList?.length}</span></a>\r\n                                    </li>\r\n\r\n                                    <li className=\"nav-item waves-effect waves-light\">\r\n                                        <a className=\"nav-link\" id=\"premium-tab-md\" data-toggle=\"tab\" href=\"#premium-md\" role=\"tab\" aria-controls=\"premium-md\" aria-selected=\"false\">Premium Users <span className=\"badge badge-primary\"> {filterPremium?.length}</span></a>\r\n                                    </li>\r\n\r\n                                    <li className=\"nav-item waves-effect waves-light\">\r\n                                        <a className=\"nav-link\" id=\"basic-tab-md\" data-toggle=\"tab\" href=\"#basic-md\" role=\"tab\" aria-controls=\"basic-md\" aria-selected=\"false\">Basic Users <span className=\"badge badge-primary\"> {filterBasic?.length}</span></a>\r\n                                    </li>\r\n\r\n                                    <li className=\"nav-item waves-effect waves-light\">\r\n                                        <a className=\"nav-link\" id=\"deactivate-tab-md\" data-toggle=\"tab\" href=\"#deactivate-md\" role=\"tab\" aria-controls=\"deactivate-md\" aria-selected=\"false\">Deactivate Users <span className=\"badge badge-primary\"> {filterDelete?.length}</span></a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <div className=\"tab-content card pt-2\" id=\"myTabContentMD\">\r\n\r\n                                    <div className=\"tab-pane fade show active\" id=\"all-md\" role=\"tabpanel\" aria-labelledby=\"all-tab-md\">\r\n                                        <div className='table-responsive '>\r\n                                            <table className=\"table table-bordered table table-hover\">\r\n                                                <thead>\r\n                                                    <tr className='table-active'>\r\n                                                        <th scope=\"col\">S No.</th>\r\n                                                        <th scope=\"col\">Name</th>\r\n                                                        <th scope=\"col\">Email</th>\r\n                                                        <th scope=\"col\">Type</th>\r\n                                                        <th scope=\"col\">Action</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody id=\"myTable\">\r\n                                                    {userList && userList.map(data =>\r\n                                                        <tr>\r\n                                                            <th scope=\"row\">{allSerNo += 1}</th>\r\n                                                            <td>{data?.name}</td>\r\n                                                            <td>{data?.email}</td>\r\n                                                            {data?.isPremium ?\r\n                                                                <td className='text-success'>Premium</td>\r\n                                                                : <td className='text-primary'>Basic</td>\r\n                                                            }\r\n                                                            <td >\r\n                                                                {data?.isPremium ?\r\n                                                                    <span onClick={() => { if (window.confirm('Change user account to Basic?')) { basicHandler(data._id) } }}>\r\n\r\n                                                                        {data?.isPremium ?\r\n                                                                            <BootstrapSwitchButton\r\n                                                                                checked={true}\r\n                                                                                disabled={true}\r\n                                                                                onlabel='Premium User'\r\n                                                                                onstyle='success'\r\n                                                                                offlabel='Basic User'\r\n                                                                                offstyle='danger'\r\n                                                                                style='w-50'\r\n                                                                            />\r\n                                                                            :\r\n                                                                            <BootstrapSwitchButton\r\n                                                                                checked={false}\r\n                                                                                disabled={true}\r\n                                                                                onlabel='Premium User'\r\n                                                                                onstyle='success'\r\n                                                                                offlabel='Basic User'\r\n                                                                                offstyle='danger'\r\n                                                                                style='w-50'\r\n                                                                            />\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                    :\r\n                                                                    <span onClick={() => { if (window.confirm('Change user account to Premium?')) { premiumHandler(data._id) } }}>\r\n\r\n                                                                        {data?.isPremium ?\r\n                                                                            <BootstrapSwitchButton\r\n                                                                                checked={true}\r\n                                                                                disabled={true}\r\n                                                                                onlabel='Premium User'\r\n                                                                                onstyle='success'\r\n                                                                                offlabel='Basic User'\r\n                                                                                offstyle='danger'\r\n                                                                                style='w-50'\r\n                                                                            />\r\n                                                                            :\r\n                                                                            <BootstrapSwitchButton\r\n                                                                                checked={false}\r\n                                                                                disabled={true}\r\n                                                                                onlabel='Premium User'\r\n                                                                                onstyle='success'\r\n                                                                                offlabel='Basic User'\r\n                                                                                offstyle='danger'\r\n                                                                                style='w-50'\r\n                                                                            />\r\n                                                                        }\r\n                                                                    </span>\r\n\r\n                                                                }\r\n\r\n                                                                {data.accStatus ?\r\n                                                                    <span className='fa fa-user-minus mx-2 fa-lg text-danger' style={{ cursor: \"pointer\" }} onClick={() => { if (window.confirm('Are you sure to deactivate this user?')) { deactivateHandler(data?._id) } }}></span>\r\n                                                                    :\r\n                                                                    <span className='fa fa-user-check mx-2 fa-lg text-success' style={{ cursor: \"pointer\" }} onClick={() => { if (window.confirm('Are you sure to activate this user?')) { activateHandler(data?._id) } }}></span>\r\n                                                                }\r\n\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )}\r\n                                                </tbody>\r\n\r\n                                            </table>\r\n                                            <div className=\"d-flex justify-content-end\">\r\n                                                <ul className=\"pagination pagination-sm\">\r\n                                                    <li className=\"page-item\"><button className=\"page-link\">Previous</button></li>\r\n                                                    <li className=\"page-item px-3 text-muted\">3 of 100</li>\r\n                                                    <li className=\"page-item\"><button className=\"page-link\">Next</button></li>\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"tab-pane fade show\" id=\"premium-md\" role=\"tabpanel\" aria-labelledby=\"premium-tab-md\">\r\n                                        <div className='table-responsive '>\r\n                                            <table className=\"table table-bordered table table-hover\">\r\n                                                <thead>\r\n                                                    <tr className='table-active'>\r\n                                                        <th scope=\"col\">S No.</th>\r\n                                                        <th scope=\"col\">Name</th>\r\n                                                        <th scope=\"col\">Email</th>\r\n                                                        <th scope=\"col\">Type</th>\r\n                                                        <th scope=\"col\">Action</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody id=\"myTable\">\r\n                                                    {userList && filterPremium.map(data =>\r\n                                                        <tr>\r\n                                                            <th scope=\"row\">{allSerNo += 1}</th>\r\n                                                            <td>{data?.name}</td>\r\n                                                            <td>{data?.email}</td>\r\n                                                            {data?.isPremium ?\r\n                                                                <td className='text-success'>Premium</td>\r\n                                                                : <td className='text-primary'>Basic</td>\r\n                                                            }\r\n                                                            <td >\r\n                                                                {data?.isPremium ?\r\n                                                                    <span onClick={() => { if (window.confirm('Change user account to Basic?')) { basicHandler(data._id) } }}>\r\n\r\n                                                                        {data?.isPremium ?\r\n                                                                            <BootstrapSwitchButton\r\n                                                                                checked={true}\r\n                                                                                disabled={true}\r\n                                                                                onlabel='Premium User'\r\n                                                                                onstyle='success'\r\n                                                                                offlabel='Basic User'\r\n                                                                                offstyle='danger'\r\n                                                                                style='w-50'\r\n                                                                            />\r\n                                                                            :\r\n                                                                            <BootstrapSwitchButton\r\n                                                                                checked={false}\r\n                                                                                disabled={true}\r\n                                                                                onlabel='Premium User'\r\n                                                                                onstyle='success'\r\n                                                                                offlabel='Basic User'\r\n                                                                                offstyle='danger'\r\n                                                                                style='w-50'\r\n                                                                            />\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                    :\r\n                                                                    <span onClick={() => { if (window.confirm('Change user account to Premium?')) { premiumHandler(data._id) } }}>\r\n\r\n                                                                        {data?.isPremium ?\r\n                                                                            <BootstrapSwitchButton\r\n                                                                                checked={true}\r\n                                                                                disabled={true}\r\n                                                                                onlabel='Premium User'\r\n                                                                                onstyle='success'\r\n                                                                                offlabel='Basic User'\r\n                                                                                offstyle='danger'\r\n                                                                                style='w-50'\r\n                                                                            />\r\n                                                                            :\r\n                                                                            <BootstrapSwitchButton\r\n                                                                                checked={false}\r\n                                                                                disabled={true}\r\n                                                                                onlabel='Premium User'\r\n                                                                                onstyle='success'\r\n                                                                                offlabel='Basic User'\r\n                                                                                offstyle='danger'\r\n                                                                                style='w-50'\r\n                                                                            />\r\n                                                                        }\r\n                                                                    </span>\r\n\r\n                                                                }\r\n\r\n                                                                {data.accStatus ?\r\n                                                                    <span className='fa fa-user-minus mx-2 fa-lg text-danger' style={{ cursor: \"pointer\" }} onClick={() => { if (window.confirm('Are you sure to deactivate this user?')) { deactivateHandler(data?._id) } }}></span>\r\n                                                                    :\r\n                                                                    <span className='fa fa-user-check mx-2 fa-lg text-success' style={{ cursor: \"pointer\" }} onClick={() => { if (window.confirm('Are you sure to activate this user?')) { activateHandler(data?._id) } }}></span>\r\n                                                                }                                                            </td>\r\n                                                        </tr>\r\n                                                    )}\r\n                                                </tbody>\r\n\r\n                                            </table>\r\n                                            <div className=\"d-flex justify-content-end\">\r\n                                                <ul className=\"pagination pagination-sm\">\r\n                                                    <li className=\"page-item\"><button className=\"page-link\">Previous</button></li>\r\n                                                    <li className=\"page-item px-3 text-muted\">3 of 100</li>\r\n                                                    <li className=\"page-item\"><button className=\"page-link\">Next</button></li>\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"tab-pane fade show\" id=\"basic-md\" role=\"tabpanel\" aria-labelledby=\"basic-tab-md\">\r\n                                        <div className='table-responsive '>\r\n                                            <table className=\"table table-bordered table table-hover\">\r\n                                                <thead>\r\n                                                    <tr className='table-active'>\r\n                                                        <th scope=\"col\">S No.</th>\r\n                                                        <th scope=\"col\">Name</th>\r\n                                                        <th scope=\"col\">Email</th>\r\n                                                        <th scope=\"col\">Type</th>\r\n                                                        <th scope=\"col\">Action</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody id=\"myTable\">\r\n                                                    {userList && filterBasic.map(data =>\r\n                                                        <tr>\r\n                                                            <th scope=\"row\">{allSerNo += 1}</th>\r\n                                                            <td>{data?.name}</td>\r\n                                                            <td>{data?.email}</td>\r\n                                                            {data?.isPremium ?\r\n                                                                <td className='text-success'>Premium</td>\r\n                                                                : <td className='text-primary'>Basic</td>\r\n                                                            }\r\n                                                            <td >\r\n                                                                {data?.isPremium ?\r\n                                                                    <span onClick={() => { if (window.confirm('Change user account to Basic?')) { basicHandler(data._id) } }}>\r\n\r\n                                                                        {data?.isPremium ?\r\n                                                                            <BootstrapSwitchButton\r\n                                                                                checked={true}\r\n                                                                                disabled={true}\r\n                                                                                onlabel='Premium User'\r\n                                                                                onstyle='success'\r\n                                                                                offlabel='Basic User'\r\n                                                                                offstyle='danger'\r\n                                                                                style='w-50'\r\n                                                                            />\r\n                                                                            :\r\n                                                                            <BootstrapSwitchButton\r\n                                                                                checked={false}\r\n                                                                                disabled={true}\r\n                                                                                onlabel='Premium User'\r\n                                                                                onstyle='success'\r\n                                                                                offlabel='Basic User'\r\n                                                                                offstyle='danger'\r\n                                                                                style='w-50'\r\n                                                                            />\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                    :\r\n                                                                    <span onClick={() => { if (window.confirm('Change user account to Premium?')) { premiumHandler(data._id) } }}>\r\n\r\n                                                                        {data?.isPremium ?\r\n                                                                            <BootstrapSwitchButton\r\n                                                                                checked={true}\r\n                                                                                disabled={true}\r\n                                                                                onlabel='Premium User'\r\n                                                                                onstyle='success'\r\n                                                                                offlabel='Basic User'\r\n                                                                                offstyle='danger'\r\n                                                                                style='w-50'\r\n                                                                            />\r\n                                                                            :\r\n                                                                            <BootstrapSwitchButton\r\n                                                                                checked={false}\r\n                                                                                disabled={true}\r\n                                                                                onlabel='Premium User'\r\n                                                                                onstyle='success'\r\n                                                                                offlabel='Basic User'\r\n                                                                                offstyle='danger'\r\n                                                                                style='w-50'\r\n                                                                            />\r\n                                                                        }\r\n                                                                    </span>\r\n\r\n                                                                }\r\n\r\n                                                                {data.accStatus ?\r\n                                                                    <span className='fa fa-user-minus mx-2 fa-lg text-danger' style={{ cursor: \"pointer\" }} onClick={() => { if (window.confirm('Are you sure to deactivate this user?')) { deactivateHandler(data?._id) } }}></span>\r\n                                                                    :\r\n                                                                    <span className='fa fa-user-check mx-2 fa-lg text-success' style={{ cursor: \"pointer\" }} onClick={() => { if (window.confirm('Are you sure to activate this user?')) { activateHandler(data?._id) } }}></span>\r\n                                                                }                                                            </td>\r\n                                                        </tr>\r\n                                                    )}\r\n                                                </tbody>\r\n\r\n                                            </table>\r\n                                            <div className=\"d-flex justify-content-end\">\r\n                                                <ul className=\"pagination pagination-sm\">\r\n                                                    <li className=\"page-item\"><button className=\"page-link\">Previous</button></li>\r\n                                                    <li className=\"page-item px-3 text-muted\">3 of 100</li>\r\n                                                    <li className=\"page-item\"><button className=\"page-link\">Next</button></li>\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"tab-pane fade show\" id=\"deactivate-md\" role=\"tabpanel\" aria-labelledby=\"deactivate-tab-md\">\r\n                                        <div className='table-responsive '>\r\n                                            <table className=\"table table-bordered table table-hover\">\r\n                                                <thead>\r\n                                                    <tr className='table-active'>\r\n                                                        <th scope=\"col\">S No.</th>\r\n                                                        <th scope=\"col\">Name</th>\r\n                                                        <th scope=\"col\">Email</th>\r\n                                                        <th scope=\"col\">Type</th>\r\n                                                        <th scope=\"col\">Action</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody id=\"myTable\">\r\n                                                    {userList && filterDelete.map(data =>\r\n                                                        <tr>\r\n                                                            <th scope=\"row\">{allSerNo += 1}</th>\r\n                                                            <td>{data?.name}</td>\r\n                                                            <td>{data?.email}</td>\r\n                                                            {data?.isPremium ? <td className='text-success'>Premium</td>\r\n                                                                : <td className='text-primary'>Basic</td>\r\n                                                            }\r\n                                                            <td >\r\n                                                                <span className='fa fa-user-check mx-2 fa-lg text-success' style={{ cursor: \"pointer\" }} onClick={() => { if (window.confirm('Are you sure to activate this user?')) { activateHandler(data?._id) } }}></span>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )}\r\n                                                </tbody>\r\n\r\n                                            </table>\r\n                                            <div className=\"d-flex justify-content-end\">\r\n                                                <ul className=\"pagination pagination-sm\">\r\n                                                    <li className=\"page-item\"><button className=\"page-link\">Previous</button></li>\r\n                                                    <li className=\"page-item px-3 text-muted\">3 of 100</li>\r\n                                                    <li className=\"page-item\"><button className=\"page-link\">Next</button></li>\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <ToastContainer />\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminUserScreen","G:\\expert system\\server\\client\\src\\screen\\admin\\Message.js",["585","586"],"import React, { useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport Navbar from './Navbar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { messageListAction } from '../../action/admin/message';\r\n\r\nconst AdminMessageScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    let serNo = 0\r\n\r\n    const adminSignin = useSelector(state => state.adminSignin);\r\n    const { adminInfo } = adminSignin;\r\n\r\n    const messageListRed = useSelector(state => state.messageListRed);\r\n    const { loading, error, messageList } = messageListRed;\r\n\r\n    useEffect(() => {\r\n        adminInfo ? props.history.push('/admin/message') : props.history.push('/admin/signin')\r\n        dispatch(messageListAction())\r\n    }, [adminInfo])\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n            <Navbar />\r\n            <main>\r\n                {loading ?\r\n                    <div class=\" d-flex justify-content-center align-items-center h-100\">\r\n                        <div class=\"spinner-border text-primary \" style={{ width: \"50px\", height: \"50px\" }} role=\"status\">\r\n                            <span class=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div> :\r\n                    <div className=\"m-4\">\r\n                        <div className='cart shadow bg-white rounded p-3'>\r\n                            {/* <div>\r\n                    <h5 className=\"text-muted\">Title</h5>\r\n                </div> */}\r\n\r\n                            <div className='row justify-content-between'>\r\n                                <form className='col-sm-4'>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className=\"form-control rounded bg-light\" id=\"myInput\" placeholder=\"Search\" />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className='table-responsive '>\r\n                                <table className=\"table table-bordered table table-hover\">\r\n                                    <thead>\r\n                                        <tr className='table-active'>\r\n                                            <th scope=\"col\">S No.</th>\r\n                                            <th scope=\"col\">Name</th>\r\n                                            <th scope=\"col\">Email</th>\r\n                                            <th scope=\"col\">Created At</th>\r\n                                            <th scope=\"col\">Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody id=\"myTable\">\r\n                                        {messageList && messageList.map(data =>\r\n                                            <tr>\r\n                                                <th scope=\"row\">{serNo += 1}</th>\r\n                                                <td>{data?.user?.name}</td>\r\n                                                <td>{data?.user?.email}</td>\r\n                                                <td>{new Date(data?.createdAt).getDate() + '-' + new Date(data?.createdAt).getMonth() + '-' + new Date(data?.createdAt).getFullYear()}</td>\r\n                                                <td>\r\n                                                    {/* <span className=\"fas fa-download fa-lg text-info\" style={{ cursor: \"pointer\" }}></span> */}\r\n                                                    <a href={`http://localhost:5000/${data?.file}`} download={`http://localhost:5000/${data?.file}`} >download</a>\r\n                                                    <span className=\"fas fa-eye fa-lg text-success mx-2\" data-toggle=\"modal\" data-target={`#exampleModal${data?._id}`} style={{ cursor: \"pointer\" }} ></span>\r\n                                                </td>\r\n                                                <div class=\"modal fade\" id={`exampleModal${data?._id}`} tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                                    <div class=\"modal-dialog\">\r\n                                                        <div class=\"modal-content\">\r\n                                                            <div class=\"modal-header\">\r\n                                                                <h5 class=\"modal-title\" id=\"exampleModalLabel\">User Name</h5>\r\n                                                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                                    <span aria-hidden=\"true\">&times;</span>\r\n                                                                </button>\r\n                                                            </div>\r\n                                                            <div class=\"modal-body\">\r\n                                                                {data?.message}\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </tr>\r\n                                        )}\r\n\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <ul className=\"pagination pagination-sm\">\r\n                                        <li className=\"page-item\"><button className=\"page-link\">Previous</button></li>\r\n                                        <li className=\"page-item px-3 text-muted\">3 of 100</li>\r\n                                        <li className=\"page-item\"><button className=\"page-link\">Next</button></li>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminMessageScreen","G:\\expert system\\server\\client\\src\\screen\\admin\\Setting.js",["587","588","589"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../App.css';\r\nimport Navbar from \"./Navbar\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport uplaodImg from '../assets/setting.png'\r\nimport { adminChangePassword } from \"../../action/admin/auth\";\r\n \r\nconst SettingScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [matchPassword, setMatchPassword] = useState(\"\")\r\n    const [updatePassword, setUpdatePassword] = useState(\"\")\r\n\r\n    const adminSignin = useSelector(state => state.adminSignin);\r\n    const { adminInfo } = adminSignin;\r\n\r\n    const adminChangePasswordRed = useSelector(state => state.adminChangePasswordRed);\r\n    const {loading, error, success, adminChangePass } = adminChangePasswordRed;\r\n\r\n    useEffect(() => {\r\n        adminInfo ? props.history.push('/admin/settings') : props.history.push('/admin/signin')\r\n    }, [adminInfo])\r\n\r\n    const id = adminInfo?.user?._id\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(adminChangePassword(id,currentPassword, updatePassword))\r\n    }\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n            <Navbar />\r\n            <main >\r\n\r\n                <div className=\" m-4\">\r\n                    <ToastContainer />\r\n                    <div className='cart shadow bg-white rounded'>\r\n                        <div className='border border-top-0 border-left-0 border-right-0 '>\r\n                            <h5 className=\"text-muted text-center pt-4 pb-4 pl-4\">Change Password</h5>\r\n                        </div>\r\n\r\n                        <div className=\"row justify-content-around my-3\" >\r\n                            <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                                <img width=\"40%\" src={uplaodImg} />\r\n                            </div>\r\n\r\n                            <form onSubmit={submitHandler} className='col-sm-6 py-3'>\r\n                            {loading &&\r\n                                    <div class=\"text-center\">\r\n                                        <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                            <span class=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                                {success && <div className=\"text-primary text-center h6\">{adminChangePass?.message}</div>}\r\n\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setCurrentPassword(e.target.value)} value={currentPassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Current Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group py-3\">\r\n                                    <input type=\"password\" onChange={(e) => setUpdatePassword(e.target.value)} value={updatePassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setMatchPassword(e.target.value)} value={matchPassword} className={matchPassword !== updatePassword ? \"form-control is-invalid\" : \"form-control\"} id=\"validationServer03\" placeholder=\"Confirm New Password\" required />\r\n                                    {matchPassword !== updatePassword &&\r\n                                        <div className=\"invalid-feedback\">\r\n                                            Password not match.\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className='pt-4 text-center'>\r\n                                    <button type=\"submit\" className=\"btn btn-success mr-3\" style={{ width: '100px' }} disabled={matchPassword !== updatePassword}>Save</button>\r\n                                    <button className=\"btn btn-secondary\" onClick={() => props.history.push('/admin/dashboard')} style={{ width: '100px' }}>Cancel</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SettingScreen;","G:\\expert system\\server\\client\\src\\screen\\Signin.js",["590","591","592","593","594"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport $ from 'jquery'\r\nimport 'jquery-validation'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport { signin } from '../action/auth'\r\nimport axios from 'axios'\r\n\r\nconst ClientSigninScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { loading, success, userInfo, error } = userSignin;\r\n\r\n    useEffect(() => {\r\n            userInfo ? window.location.href = \"/\" : props.history.push('/signin')\r\n    }, [userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin(email, password))\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center pb-2 \">Login</h4>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {success && <div className=\"text-primary text-center h6\">{userInfo.message}</div>}\r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" onChange={(e) => setEmail(e.target.value)} type=\"email\" name=\"email\" placeholder=\"Email\" required />\r\n                            </div>\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} type=\"password\" name=\"password\" placeholder=\"Password\" required />\r\n                                <div className=\"float-right\">\r\n                                    <Link to=\"/reset-password\" >Forgot password?</Link>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"text-center pb-4 pt-4\">\r\n                                <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                Not a Member? <Link to=\"/signup\" >Signup</Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientSigninScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\signup.js",["595","596","597"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport { signup } from '../action/auth'\r\nconst ClientSignupScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const userSignup = useSelector(state => state.userSignup);\r\n    const { loading, success, userInfo, error } = userSignup;\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo: saveUserInfo } = userSignin;\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signup(name, email, password))\r\n    }\r\n\r\n    useEffect(() => {\r\n        saveUserInfo ? props.history.push('/') : props.history.push('/signup')\r\n    }, [saveUserInfo])\r\n\r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center pb-4 \">Signup</h4>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            } \r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            {success && <div className=\"text-primary text-center h6\">{userInfo.message}</div>}\r\n\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" type=\"text\" onChange={(e) => setName(e.target.value)} name=\"name\" placeholder=\"Name\" required />\r\n                            </div>\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" type=\"email\" onChange={(e) => setEmail(e.target.value)} name=\"email\" placeholder=\"Email\" required />\r\n                            </div>\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" type=\"password\" onChange={(e) => setPassword(e.target.value)} name=\"password\" placeholder=\"Password\" required />\r\n                            </div>\r\n\r\n                            <div className=\"text-center pb-4\">\r\n                                <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                have an Account? <Link to=\"/signin\" >Login</Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientSignupScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\forgotPassord.js",["598","599","600","601","602","603","604"],"import React, { useDebugValue, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport $ from 'jquery'\r\nimport 'jquery-validation'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport e from 'cors'\r\nimport { forgotPassword } from '../action/auth'\r\nconst ClientForgotPasswordScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    const forgotPasswordRed = useSelector(state => state.forgotPasswordRed);\r\n    const { loading, forgotPass, error, success } = forgotPasswordRed\r\n    \r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo} = userSignin;\r\n    \r\n    useEffect(() => {\r\n        userInfo ? props.history.push('/') : props.history.push('/reset-password')\r\n    }, [userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(forgotPassword(email))\r\n    }\r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center\">Reset Password</h4>\r\n                            <p className='text-center'>Enter your email address, we will send you instructions to reset your password </p>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            {success && <div className=\"text-primary text-center h6\">{forgotPass.message}</div>}\r\n\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" type=\"email\" onChange={(e) => setEmail(e.target.value)} name=\"email\" placeholder=\"Email\" required />\r\n                            </div>\r\n\r\n                            <div className=\"text-center pb-4\">\r\n                                <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ClientForgotPasswordScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\newPassword.js",["605","606","607","608"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport $ from 'jquery'\r\nimport 'jquery-validation'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport { newPassword } from '../action/auth'\r\nconst ClientNewPasswordScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const token = props.match.params.token\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const newPasswordReduser = useSelector(state => state.newPasswordRed)\r\n    const { loading, error, success, newPass } = newPasswordReduser\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(newPassword(password, token))\r\n    }\r\n    \r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center pb-4 \">New Password</h4>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            {success ?\r\n                                <>\r\n                                    <div className=\"text-primary text-center h6\">{newPass?.message}</div>\r\n                                    <div className='text-center'>\r\n                                        <Link to='/signin' className=\"btn btn-primary btn-sm\" role=\"button\">Continue to login</Link>\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <div className=\"form-group mb-4\">\r\n                                        <input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} type=\"password\" name=\"password\" placeholder=\"New Password\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"text-center pb-4\">\r\n                                        <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n\r\n\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientNewPasswordScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\Profile.js",["609","610","611","612"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport './../App.css';\r\nimport Navbar from \"./Navbar\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport uplaodImg from './assets/setting.png'\r\nimport { changePassword } from \"../action/auth\";\r\n\r\nconst ProfileScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [matchPassword, setMatchPassword] = useState(\"\")\r\n    const [updatePassword, setUpdatePassword] = useState(\"\")\r\n    \r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo } = userSignin;\r\n\r\n    const changePasswordRed = useSelector(state => state.changePasswordRed);\r\n    const {loading, changePass, success, error } = changePasswordRed;\r\n\r\n    const id = userInfo?.user?._id\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(changePassword(id,currentPassword, updatePassword))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <main >\r\n\r\n                <div className=\" m-4\">\r\n                    <div className='cart shadow bg-white rounded'>\r\n                        <div className='border border-top-0 border-left-0 border-right-0 '>\r\n                            <h5 className=\"text-muted text-center pt-4 pb-4 pl-4\">Change Password</h5>\r\n                        </div>\r\n\r\n                        <div className=\"row justify-content-around my-3\" >\r\n                            <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                                <img width=\"40%\" src={uplaodImg} />\r\n                            </div>\r\n\r\n                            <form onSubmit={submitHandler} className='col-sm-6 py-3'>\r\n                                {loading &&\r\n                                    <div class=\"text-center\">\r\n                                        <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                            <span class=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                                {success && <div className=\"text-primary text-center h6\">{changePass?.message}</div>}\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setCurrentPassword(e.target.value)} value={currentPassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Current Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group py-3\">\r\n                                    <input type=\"password\" onChange={(e) => setUpdatePassword(e.target.value)} value={updatePassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setMatchPassword(e.target.value)} value={matchPassword} className={matchPassword !== updatePassword ? \"form-control is-invalid\" : \"form-control\"} id=\"validationServer03\" placeholder=\"Confirm New Password\" required />\r\n                                    {matchPassword !== updatePassword &&\r\n                                        <div className=\"invalid-feedback\">\r\n                                            Password not match.\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className='pt-4 text-center'>\r\n                                    <button type=\"submit\" className=\"btn btn-success mr-3\" style={{ width: '100px' }} disabled={matchPassword !== updatePassword}>Save</button>\r\n                                    <button className=\"btn btn-secondary\" onClick={() => props.history.push('/')} style={{ width: '100px' }}>Cancel</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileScreen;","G:\\expert system\\server\\client\\src\\screen\\admin\\UplaodFile.js",["613","614","615","616","617","618","619","620"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { signup } from '../../action/auth'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Navbar from '../admin/Navbar';\r\nimport uplaodImg from '../assets/upload.png'\r\n\r\nconst UplaodFileScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    \r\n\tconst adminSignin = useSelector(state => state.adminSignin);\r\n\tconst {adminInfo } = adminSignin;\r\n\r\n    useEffect(() => {\r\n        adminInfo ? props.history.push('/admin/product-association') : props.history.push('/admin/signin')\r\n    },[adminInfo])\r\n\r\n    const submitHandler = () => {\r\n        props.history.push('/admin/detail')\r\n    }\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n            <Navbar />\r\n            <main>\r\n                <div className=\"m-4\">\r\n                    <div className='cart shadow bg-white rounded p-3 '>\r\n                        <div className=\"row justify-content-around my-3\">\r\n                            <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                                <img width=\"40%\" src={uplaodImg} />\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <h3 className='text-muted text-center py-3'>Uplaod File </h3>\r\n\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <select className=\"form-control border-top-0 border-left-0 border-right-0 bg-light rounded\" id=\"exampleFormControlSelect1\" required>\r\n                                            <option value=\"\" disabled selected>Select File Type</option>\r\n                                            <option value=\"\">JSON</option>\r\n                                            <option value=\"\">Excel</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group custom-file mb-3\">\r\n                                        <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" accept=\".pdf\" />\r\n                                        <label className=\"form-control rounded border-top-0 border-left-0 border-right-0 custom-file-label bg-light rounded\" for=\"customFile\">Choose file</label>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"text-center\">\r\n                                        <button onClick={submitHandler} type=\"button\" className=\"btn btn-success\">\r\n                                            <i className=\"fas fa-file\"> Uplaod File </i>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UplaodFileScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\PremiumChart.js",["621","622","623","624","625","626"],"G:\\expert system\\server\\client\\src\\screen\\admin\\RequestPremium.js",["627","628","629","630"],"import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport Navbar from './Navbar';\r\nimport '../../App.css';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { confirmPremiumAction, premiumListAction } from '../../action/admin/premium';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst RequestPremiumScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    let serNo = 0\r\n\r\n    const premiumListRed = useSelector(state => state.premiumListRed);\r\n    const { loading, error, premiumList } = premiumListRed\r\n\r\n    const confirmPremiumRed = useSelector(state => state.confirmPremiumRed);\r\n    const { error: saveError, premiumSuccess, confirmPremium } = confirmPremiumRed\r\n\r\n    const adminSignin = useSelector(state => state.adminSignin);\r\n    const { adminInfo } = adminSignin;\r\n\r\n    if (premiumSuccess) {\r\n        toast.success(confirmPremium.message);\r\n        window.location.reload()\r\n\r\n    }\r\n    if (saveError) {\r\n        toast.error(saveError.message);\r\n    }\r\n\r\n    useEffect(() => {\r\n        adminInfo ? props.history.push('/admin/request-premium') : props.history.push('/admin/signin')\r\n        dispatch(premiumListAction())\r\n\r\n    }, [adminInfo])\r\n\r\n\r\n    const premiumHandler = (id) => {\r\n        dispatch(confirmPremiumAction(id))\r\n    }\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n\r\n            <Navbar />\r\n            <main>\r\n                {loading ?\r\n                    <div class=\" d-flex justify-content-center align-items-center h-100\">\r\n                        <div class=\"spinner-border text-primary \" style={{ width: \"50px\", height: \"50px\" }} role=\"status\">\r\n                            <span class=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div> :\r\n                    <div className=\"m-4\">\r\n                        <div className='cart shadow bg-white rounded p-3'>\r\n                            {/* <div>\r\n                    <h5 className=\"text-muted\">Title</h5>\r\n                </div> */}\r\n\r\n                            {/* filter */}\r\n                            <div className='row justify-content-between'>\r\n                                <form className='col-sm-4'>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className=\"form-control rounded bg-light\" id=\"myInput\" placeholder=\"Search\" />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            {premiumList && premiumList?.length === 0 && <h5 className='text-center text-danger'>Premium request not yet!</h5>}\r\n                            {error && <h5 className='text-center text-danger'> {error.message}</h5>}\r\n\r\n                            <div className='table-responsive '>\r\n                                <table className=\"table table-bordered table table-hover\">\r\n                                    <thead>\r\n                                        <tr className='table-active'>\r\n                                            <th scope=\"col\">S No.</th>\r\n                                            <th scope=\"col\">Name</th>\r\n                                            <th scope=\"col\">Email</th>\r\n                                            <th scope=\"col\">Created At</th>\r\n                                            <th scope=\"col\">Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody id=\"myTable\">\r\n                                        {premiumList && premiumList.map(data =>\r\n                                            <tr>\r\n                                                <th scope=\"row\">{serNo += 1}</th>\r\n                                                <td>{data?.user?.name}</td>\r\n                                                <td>{data?.user?.email}</td>\r\n                                                <td>{new Date(data?.createdAt).getDate() + '-' + new Date(data?.createdAt).getMonth() + '-' + new Date(data?.createdAt).getFullYear()}</td>\r\n                                                <td onClick={() => { if (window.confirm('Change user account to premium?')) { premiumHandler(data?.user?._id) } }}>\r\n                                                    {data?.user?.isPremium ?\r\n                                                        <BootstrapSwitchButton\r\n                                                            checked={true}\r\n                                                            disabled={true}\r\n                                                            onlabel='Premium User'\r\n                                                            onstyle='success'\r\n                                                            offlabel='Basic User'\r\n                                                            offstyle='danger'\r\n                                                            style='w-100'\r\n                                                        />\r\n                                                        :\r\n                                                        <BootstrapSwitchButton\r\n                                                            checked={false}\r\n                                                            disabled={true}\r\n                                                            onlabel='Premium User'\r\n                                                            onstyle='success'\r\n                                                            offlabel='Basic User'\r\n                                                            offstyle='danger'\r\n                                                            style='w-100'\r\n                                                        />\r\n                                                    }\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n                            <ToastContainer />\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestPremiumScreen","G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\frequectChart.js",["631","632","633","634"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../../App.css';\r\nimport Chart from \"react-google-charts\";\r\n\r\nconst FrequentChartScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const getProductAssociation = () => {\r\n        var data = []\r\n        data.push(['Item', \"Frequency\"])\r\n\r\n        props?.frequentItemsets.map(item =>\r\n            data.push([item.toString(), item?.length])\r\n        )\r\n        return data\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Chart\r\n                // width={'500px'}\r\n                height={'300px'}\r\n                chartType=\"ComboChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={\r\n                    getProductAssociation()\r\n                }\r\n                options={{\r\n                    // colors: ['#FB7A21'],\r\n                    // backgroundColor: '#2F4F4F',\r\n                    chart: {\r\n                        title: 'Frequent Items',\r\n                        subtitle: 'Frequent Items and Frequency',\r\n                    },\r\n                    legend: { position: 'none' },\r\n                    title: \"Maximium Frequent Items\",\r\n                    titleTextStyle: { color: '#3366CC' },\r\n                    vAxis: { title: 'Frequency', },\r\n                    hAxis: { title: 'Frequent Items', fontSize: 28, },\r\n                    seriesType: 'bars',\r\n                    series: { 5: { type: 'line' } },\r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default FrequentChartScreen;","G:\\expert system\\server\\client\\src\\screen\\verified.js",["635","636","637"],"import React, { useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport contactImg from './assets/contact.png'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { accountConformation } from '../action/auth';\r\nconst VerifiedScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const token = props.match.params.token\r\n    const accountConformationRed = useSelector(state => state.accountConformationRed);\r\n    const { loading, success, accConfirm, error } = accountConformationRed;\r\n    \r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(accountConformation(token))\r\n        }\r\n\r\n    }, [token])\r\n\r\n    return (\r\n        <>\r\n            {loading?\r\n                <div class=\"d-flex justify-content-center align-items-center vh-100\">\r\n                    <div class=\"spinner-border text-primary \" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>:\r\n            \r\n            <div className=\"jumbotron text-center\">\r\n                <h1 className=\"display-3\">Thank You!</h1>\r\n                {error && <p className=\"lead text-danger\"><strong>{error.message}</strong></p>}\r\n                {success && <p className=\"lead\"><strong>{accConfirm.message}</strong></p>}\r\n\r\n                {/* <hr> */}\r\n                {/* <p>\r\n                Having trouble? <a href=\"\">Contact us</a>\r\n                </p> \r\n                */}\r\n                <p className=\"lead\">\r\n                    <Link to='/signin' className=\"btn btn-primary btn-sm\" role=\"button\">Continue to login</Link>\r\n                </p>\r\n            </div>\r\n}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VerifiedScreen","G:\\expert system\\server\\client\\src\\action\\premium.js",[],"G:\\expert system\\server\\client\\src\\contant\\premium.js",[],"G:\\expert system\\server\\client\\src\\reducer\\premium.js",["638","639","640"],"import { CONFIRM_PREMIUM_FAIL, CONFIRM_PREMIUM_REQUEST, CONFIRM_PREMIUM_SUCCESS } from \"../contant/admin/premium\";\nimport { USER_PREMIUM_FAIL, USER_PREMIUM_REQUEST, USER_PREMIUM_SUCCESS } from \"../contant/premium\";\n\nfunction premiumRequestReducer(state = {}, action) {\n    switch (action.type) {\n        case USER_PREMIUM_REQUEST:\n            return { loading: true }\n        case USER_PREMIUM_SUCCESS:\n            return { loading: false, success: true, premiumReq: action.payload }\n        case USER_PREMIUM_FAIL:\n            return { loading: false, error: action.payload };\n        default: return state;\n    }\n}\n\n\nexport {\n    premiumRequestReducer\n};","G:\\expert system\\server\\client\\src\\reducer\\message.js",[],"G:\\expert system\\server\\client\\src\\contant\\message.js",[],"G:\\expert system\\server\\client\\src\\action\\message.js",[],"G:\\expert system\\server\\client\\src\\reducer\\user.js",[],"G:\\expert system\\server\\client\\src\\contant\\user.js",[],"G:\\expert system\\server\\client\\src\\action\\user.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\auth.js",[],"G:\\expert system\\server\\client\\src\\contant\\admin\\auth.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\message.js",[],"G:\\expert system\\server\\client\\src\\contant\\admin\\message.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\premium.js",["641"],"import { failedToTransformError } from \"simple-excel-to-json\";\nimport {\n    CONFIRM_BASIC_FAIL, CONFIRM_BASIC_REQUEST, CONFIRM_BASIC_SUCCESS,\n    CONFIRM_PREMIUM_FAIL, CONFIRM_PREMIUM_REQUEST, CONFIRM_PREMIUM_SUCCESS,\n    PREMIUM_LIST_FAIL, PREMIUM_LIST_REQUEST, PREMIUM_LIST_SUCCESS\n} from \"../../contant/admin/premium\";\n\nfunction premiumListReducer(state = { premiumList: [] }, action) {\n    switch (action.type) {\n        case PREMIUM_LIST_REQUEST:\n            return { loading: true, premiumList: [] }\n        case PREMIUM_LIST_SUCCESS:\n            return { loading: false, success: true, premiumList: action.payload }\n        case PREMIUM_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        default: return state;\n    }\n}\n\n\nfunction confirmPremiumReducer(state = {}, action) {\n    switch (action.type) {\n        case CONFIRM_PREMIUM_REQUEST:\n            return { premiumLoading: true, premiumSuccess:false }\n        case CONFIRM_PREMIUM_SUCCESS:\n            return { premiumLoading: false, premiumSuccess: true, confirmPremium: action.payload }\n        case CONFIRM_PREMIUM_FAIL:\n            return { premiumLoading: false, premiumError: action.payload };\n        default: return state;\n    }\n}\n\nfunction confirmBasicReducer(state = {}, action) {\n    switch (action.type) {\n        case CONFIRM_BASIC_REQUEST:\n            return { basicLoading: true, basicSuccess: false, }\n        case CONFIRM_BASIC_SUCCESS:\n            return { basicLoading: false, basicSuccess: true, confirmBasic: action.payload }\n        case CONFIRM_BASIC_FAIL:\n            return { basicLoading: false, basicError: action.payload };\n        default: return state;\n    }\n}\n\nexport {\n    premiumListReducer, confirmPremiumReducer, confirmBasicReducer\n};","G:\\expert system\\server\\client\\src\\contant\\admin\\premium.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\user.js",[],"G:\\expert system\\server\\client\\src\\contant\\admin\\user.js",[],"G:\\expert system\\server\\client\\src\\action\\admin\\auth.js",[],"G:\\expert system\\server\\client\\src\\action\\admin\\premium.js",[],"G:\\expert system\\server\\client\\src\\action\\admin\\user.js",[],"G:\\expert system\\server\\client\\src\\action\\admin\\message.js",[],{"ruleId":"642","replacedBy":"643"},{"ruleId":"644","replacedBy":"645"},{"ruleId":"646","severity":1,"message":"647","line":2,"column":10,"nodeType":"648","messageId":"649","endLine":2,"endColumn":23},{"ruleId":"646","severity":1,"message":"650","line":2,"column":32,"nodeType":"648","messageId":"649","endLine":2,"endColumn":38},{"ruleId":"646","severity":1,"message":"651","line":2,"column":40,"nodeType":"648","messageId":"649","endLine":2,"endColumn":46},{"ruleId":"646","severity":1,"message":"652","line":40,"column":22,"nodeType":"648","messageId":"649","endLine":40,"endColumn":35},{"ruleId":"646","severity":1,"message":"653","line":40,"column":44,"nodeType":"648","messageId":"649","endLine":40,"endColumn":55},{"ruleId":"654","severity":1,"message":"655","line":57,"column":8,"nodeType":"656","endLine":57,"endColumn":18,"suggestions":"657"},{"ruleId":"658","severity":1,"message":"659","line":158,"column":37,"nodeType":"660","messageId":"661","endLine":158,"endColumn":46},{"ruleId":"646","severity":1,"message":"652","line":30,"column":22,"nodeType":"648","messageId":"649","endLine":30,"endColumn":35},{"ruleId":"646","severity":1,"message":"653","line":30,"column":44,"nodeType":"648","messageId":"649","endLine":30,"endColumn":55},{"ruleId":"654","severity":1,"message":"655","line":41,"column":8,"nodeType":"656","endLine":41,"endColumn":18,"suggestions":"662"},{"ruleId":"658","severity":1,"message":"659","line":102,"column":37,"nodeType":"660","messageId":"661","endLine":102,"endColumn":46},{"ruleId":"646","severity":1,"message":"663","line":1,"column":28,"nodeType":"648","messageId":"649","endLine":1,"endColumn":36},{"ruleId":"646","severity":1,"message":"664","line":12,"column":8,"nodeType":"648","messageId":"649","endLine":12,"endColumn":21},{"ruleId":"646","severity":1,"message":"665","line":24,"column":32,"nodeType":"648","messageId":"649","endLine":24,"endColumn":47},{"ruleId":"646","severity":1,"message":"666","line":24,"column":56,"nodeType":"648","messageId":"649","endLine":24,"endColumn":69},{"ruleId":"646","severity":1,"message":"667","line":27,"column":36,"nodeType":"648","messageId":"649","endLine":27,"endColumn":55},{"ruleId":"646","severity":1,"message":"668","line":27,"column":64,"nodeType":"648","messageId":"649","endLine":27,"endColumn":81},{"ruleId":"646","severity":1,"message":"669","line":30,"column":32,"nodeType":"648","messageId":"649","endLine":30,"endColumn":47},{"ruleId":"646","severity":1,"message":"670","line":30,"column":56,"nodeType":"648","messageId":"649","endLine":30,"endColumn":69},{"ruleId":"654","severity":1,"message":"655","line":38,"column":8,"nodeType":"656","endLine":38,"endColumn":18,"suggestions":"671"},{"ruleId":"646","severity":1,"message":"652","line":30,"column":22,"nodeType":"648","messageId":"649","endLine":30,"endColumn":35},{"ruleId":"646","severity":1,"message":"653","line":30,"column":44,"nodeType":"648","messageId":"649","endLine":30,"endColumn":55},{"ruleId":"654","severity":1,"message":"655","line":41,"column":8,"nodeType":"656","endLine":41,"endColumn":18,"suggestions":"672"},{"ruleId":"658","severity":1,"message":"659","line":102,"column":37,"nodeType":"660","messageId":"661","endLine":102,"endColumn":46},{"ruleId":"654","severity":1,"message":"673","line":26,"column":8,"nodeType":"656","endLine":26,"endColumn":18,"suggestions":"674"},{"ruleId":"646","severity":1,"message":"652","line":29,"column":22,"nodeType":"648","messageId":"649","endLine":29,"endColumn":35},{"ruleId":"646","severity":1,"message":"653","line":29,"column":44,"nodeType":"648","messageId":"649","endLine":29,"endColumn":55},{"ruleId":"646","severity":1,"message":"675","line":35,"column":22,"nodeType":"648","messageId":"649","endLine":35,"endColumn":33},{"ruleId":"646","severity":1,"message":"676","line":35,"column":42,"nodeType":"648","messageId":"649","endLine":35,"endColumn":51},{"ruleId":"654","severity":1,"message":"655","line":40,"column":8,"nodeType":"656","endLine":40,"endColumn":18,"suggestions":"677"},{"ruleId":"678","severity":1,"message":"679","line":42,"column":22,"nodeType":"680","messageId":"681","endLine":42,"endColumn":39,"fix":"682"},{"ruleId":"678","severity":1,"message":"683","line":44,"column":20,"nodeType":"680","messageId":"681","endLine":44,"endColumn":35,"fix":"684"},{"ruleId":"678","severity":1,"message":"683","line":46,"column":20,"nodeType":"680","messageId":"681","endLine":46,"endColumn":35,"fix":"685"},{"ruleId":"678","severity":1,"message":"686","line":92,"column":15,"nodeType":"680","messageId":"681","endLine":92,"endColumn":25,"fix":"687"},{"ruleId":"678","severity":1,"message":"688","line":93,"column":17,"nodeType":"680","messageId":"681","endLine":93,"endColumn":28,"fix":"689"},{"ruleId":"678","severity":1,"message":"690","line":94,"column":24,"nodeType":"680","messageId":"681","endLine":94,"endColumn":42,"fix":"691"},{"ruleId":"678","severity":1,"message":"683","line":95,"column":21,"nodeType":"680","messageId":"681","endLine":95,"endColumn":36,"fix":"692"},{"ruleId":"658","severity":1,"message":"659","line":101,"column":37,"nodeType":"660","messageId":"661","endLine":101,"endColumn":46},{"ruleId":"678","severity":1,"message":"693","line":179,"column":62,"nodeType":"680","messageId":"681","endLine":179,"endColumn":78,"fix":"694"},{"ruleId":"678","severity":1,"message":"688","line":183,"column":78,"nodeType":"680","messageId":"681","endLine":183,"endColumn":89,"fix":"695"},{"ruleId":"678","severity":1,"message":"690","line":184,"column":78,"nodeType":"680","messageId":"681","endLine":184,"endColumn":96,"fix":"696"},{"ruleId":"678","severity":1,"message":"683","line":186,"column":90,"nodeType":"680","messageId":"681","endLine":186,"endColumn":105,"fix":"697"},{"ruleId":"678","severity":1,"message":"683","line":186,"column":175,"nodeType":"680","messageId":"681","endLine":186,"endColumn":190,"fix":"698"},{"ruleId":"678","severity":1,"message":"686","line":189,"column":204,"nodeType":"680","messageId":"681","endLine":189,"endColumn":214,"fix":"699"},{"ruleId":"678","severity":1,"message":"686","line":190,"column":214,"nodeType":"680","messageId":"681","endLine":190,"endColumn":224,"fix":"700"},{"ruleId":"678","severity":1,"message":"686","line":198,"column":115,"nodeType":"680","messageId":"681","endLine":198,"endColumn":125,"fix":"701"},{"ruleId":"678","severity":1,"message":"683","line":225,"column":176,"nodeType":"680","messageId":"681","endLine":225,"endColumn":191,"fix":"702"},{"ruleId":"646","severity":1,"message":"663","line":1,"column":28,"nodeType":"648","messageId":"649","endLine":1,"endColumn":36},{"ruleId":"654","severity":1,"message":"703","line":27,"column":8,"nodeType":"656","endLine":27,"endColumn":18,"suggestions":"704"},{"ruleId":"658","severity":1,"message":"659","line":32,"column":37,"nodeType":"660","messageId":"661","endLine":32,"endColumn":46},{"ruleId":"678","severity":1,"message":"693","line":75,"column":50,"nodeType":"680","messageId":"681","endLine":75,"endColumn":72,"fix":"705"},{"ruleId":"678","severity":1,"message":"706","line":78,"column":71,"nodeType":"680","messageId":"681","endLine":78,"endColumn":87,"fix":"707"},{"ruleId":"678","severity":1,"message":"706","line":78,"column":116,"nodeType":"680","messageId":"681","endLine":78,"endColumn":132,"fix":"708"},{"ruleId":"678","severity":1,"message":"706","line":78,"column":162,"nodeType":"680","messageId":"681","endLine":78,"endColumn":178,"fix":"709"},{"ruleId":"678","severity":1,"message":"710","line":79,"column":62,"nodeType":"680","messageId":"681","endLine":79,"endColumn":77,"fix":"711"},{"ruleId":"678","severity":1,"message":"712","line":80,"column":62,"nodeType":"680","messageId":"681","endLine":80,"endColumn":77,"fix":"713"},{"ruleId":"646","severity":1,"message":"714","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":12},{"ruleId":"646","severity":1,"message":"715","line":3,"column":10,"nodeType":"648","messageId":"649","endLine":3,"endColumn":14},{"ruleId":"646","severity":1,"message":"716","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":12},{"ruleId":"717","severity":1,"message":"718","line":53,"column":29,"nodeType":"719","endLine":53,"endColumn":223},{"ruleId":"720","severity":1,"message":"721","line":53,"column":29,"nodeType":"719","endLine":53,"endColumn":223},{"ruleId":"720","severity":1,"message":"722","line":53,"column":29,"nodeType":"719","endLine":53,"endColumn":223},{"ruleId":"723","severity":1,"message":"724","line":56,"column":37,"nodeType":"719","endLine":56,"endColumn":183},{"ruleId":"646","severity":1,"message":"725","line":1,"column":8,"nodeType":"648","messageId":"649","endLine":1,"endColumn":13},{"ruleId":"646","severity":1,"message":"725","line":1,"column":8,"nodeType":"648","messageId":"649","endLine":1,"endColumn":13},{"ruleId":"646","severity":1,"message":"726","line":3,"column":10,"nodeType":"648","messageId":"649","endLine":3,"endColumn":21},{"ruleId":"646","severity":1,"message":"727","line":10,"column":30,"nodeType":"648","messageId":"649","endLine":10,"endColumn":45},{"ruleId":"646","severity":1,"message":"728","line":10,"column":54,"nodeType":"648","messageId":"649","endLine":10,"endColumn":67},{"ruleId":"678","severity":1,"message":"729","line":17,"column":14,"nodeType":"680","messageId":"681","endLine":17,"endColumn":29,"fix":"730"},{"ruleId":"678","severity":1,"message":"729","line":17,"column":45,"nodeType":"680","messageId":"681","endLine":17,"endColumn":60,"fix":"731"},{"ruleId":"678","severity":1,"message":"712","line":20,"column":29,"nodeType":"680","messageId":"681","endLine":20,"endColumn":44,"fix":"732"},{"ruleId":"678","severity":1,"message":"710","line":20,"column":46,"nodeType":"680","messageId":"681","endLine":20,"endColumn":61,"fix":"733"},{"ruleId":"678","severity":1,"message":"729","line":30,"column":14,"nodeType":"680","messageId":"681","endLine":30,"endColumn":29,"fix":"734"},{"ruleId":"678","severity":1,"message":"729","line":30,"column":49,"nodeType":"680","messageId":"681","endLine":30,"endColumn":64,"fix":"735"},{"ruleId":"678","severity":1,"message":"729","line":30,"column":86,"nodeType":"680","messageId":"681","endLine":30,"endColumn":101,"fix":"736"},{"ruleId":"678","severity":1,"message":"729","line":30,"column":121,"nodeType":"680","messageId":"681","endLine":30,"endColumn":136,"fix":"737"},{"ruleId":"678","severity":1,"message":"712","line":33,"column":29,"nodeType":"680","messageId":"681","endLine":33,"endColumn":44,"fix":"738"},{"ruleId":"678","severity":1,"message":"710","line":33,"column":46,"nodeType":"680","messageId":"681","endLine":33,"endColumn":61,"fix":"739"},{"ruleId":"646","severity":1,"message":"740","line":8,"column":26,"nodeType":"648","messageId":"649","endLine":8,"endColumn":31},{"ruleId":"654","severity":1,"message":"655","line":31,"column":8,"nodeType":"656","endLine":31,"endColumn":18,"suggestions":"741"},{"ruleId":"658","severity":1,"message":"659","line":35,"column":37,"nodeType":"660","messageId":"661","endLine":35,"endColumn":46},{"ruleId":"717","severity":1,"message":"718","line":105,"column":77,"nodeType":"719","endLine":105,"endColumn":165},{"ruleId":"717","severity":1,"message":"718","line":107,"column":77,"nodeType":"719","endLine":107,"endColumn":218},{"ruleId":"642","replacedBy":"742"},{"ruleId":"644","replacedBy":"743"},{"ruleId":"646","severity":1,"message":"647","line":2,"column":10,"nodeType":"648","messageId":"649","endLine":2,"endColumn":23},{"ruleId":"646","severity":1,"message":"650","line":2,"column":32,"nodeType":"648","messageId":"649","endLine":2,"endColumn":38},{"ruleId":"646","severity":1,"message":"651","line":2,"column":40,"nodeType":"648","messageId":"649","endLine":2,"endColumn":46},{"ruleId":"646","severity":1,"message":"744","line":23,"column":7,"nodeType":"648","messageId":"649","endLine":23,"endColumn":15},{"ruleId":"646","severity":1,"message":"745","line":3,"column":10,"nodeType":"648","messageId":"649","endLine":3,"endColumn":16},{"ruleId":"646","severity":1,"message":"714","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":12},{"ruleId":"646","severity":1,"message":"746","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":9},{"ruleId":"646","severity":1,"message":"725","line":1,"column":8,"nodeType":"648","messageId":"649","endLine":1,"endColumn":13},{"ruleId":"646","severity":1,"message":"726","line":3,"column":10,"nodeType":"648","messageId":"649","endLine":3,"endColumn":21},{"ruleId":"646","severity":1,"message":"727","line":10,"column":30,"nodeType":"648","messageId":"649","endLine":10,"endColumn":45},{"ruleId":"646","severity":1,"message":"728","line":10,"column":54,"nodeType":"648","messageId":"649","endLine":10,"endColumn":67},{"ruleId":"678","severity":1,"message":"729","line":17,"column":14,"nodeType":"680","messageId":"681","endLine":17,"endColumn":29,"fix":"747"},{"ruleId":"678","severity":1,"message":"729","line":17,"column":45,"nodeType":"680","messageId":"681","endLine":17,"endColumn":60,"fix":"748"},{"ruleId":"678","severity":1,"message":"712","line":20,"column":29,"nodeType":"680","messageId":"681","endLine":20,"endColumn":44,"fix":"749"},{"ruleId":"678","severity":1,"message":"710","line":20,"column":46,"nodeType":"680","messageId":"681","endLine":20,"endColumn":61,"fix":"750"},{"ruleId":"678","severity":1,"message":"729","line":30,"column":14,"nodeType":"680","messageId":"681","endLine":30,"endColumn":29,"fix":"751"},{"ruleId":"678","severity":1,"message":"729","line":30,"column":49,"nodeType":"680","messageId":"681","endLine":30,"endColumn":64,"fix":"752"},{"ruleId":"678","severity":1,"message":"729","line":30,"column":86,"nodeType":"680","messageId":"681","endLine":30,"endColumn":101,"fix":"753"},{"ruleId":"678","severity":1,"message":"729","line":30,"column":121,"nodeType":"680","messageId":"681","endLine":30,"endColumn":136,"fix":"754"},{"ruleId":"678","severity":1,"message":"712","line":33,"column":29,"nodeType":"680","messageId":"681","endLine":33,"endColumn":44,"fix":"755"},{"ruleId":"678","severity":1,"message":"710","line":33,"column":46,"nodeType":"680","messageId":"681","endLine":33,"endColumn":61,"fix":"756"},{"ruleId":"642","replacedBy":"757"},{"ruleId":"644","replacedBy":"758"},{"ruleId":"646","severity":1,"message":"725","line":1,"column":8,"nodeType":"648","messageId":"649","endLine":1,"endColumn":13},{"ruleId":"646","severity":1,"message":"715","line":4,"column":10,"nodeType":"648","messageId":"649","endLine":4,"endColumn":14},{"ruleId":"646","severity":1,"message":"759","line":6,"column":10,"nodeType":"648","messageId":"649","endLine":6,"endColumn":21},{"ruleId":"646","severity":1,"message":"760","line":8,"column":11,"nodeType":"648","messageId":"649","endLine":8,"endColumn":19},{"ruleId":"654","severity":1,"message":"673","line":20,"column":8,"nodeType":"656","endLine":20,"endColumn":18,"suggestions":"761"},{"ruleId":"717","severity":1,"message":"718","line":35,"column":33,"nodeType":"719","endLine":35,"endColumn":68},{"ruleId":"646","severity":1,"message":"762","line":21,"column":11,"nodeType":"648","messageId":"649","endLine":21,"endColumn":18},{"ruleId":"654","severity":1,"message":"763","line":42,"column":5,"nodeType":"656","endLine":42,"endColumn":7,"suggestions":"764"},{"ruleId":"717","severity":1,"message":"718","line":63,"column":19,"nodeType":"719","endLine":63,"endColumn":213},{"ruleId":"720","severity":1,"message":"721","line":63,"column":19,"nodeType":"719","endLine":63,"endColumn":213},{"ruleId":"720","severity":1,"message":"722","line":63,"column":19,"nodeType":"719","endLine":63,"endColumn":213},{"ruleId":"723","severity":1,"message":"724","line":66,"column":23,"nodeType":"719","endLine":66,"endColumn":169},{"ruleId":"765","severity":1,"message":"766","line":9,"column":9,"nodeType":"719","endLine":9,"endColumn":104},{"ruleId":"765","severity":1,"message":"766","line":8,"column":17,"nodeType":"719","endLine":8,"endColumn":112},{"ruleId":"642","replacedBy":"767"},{"ruleId":"644","replacedBy":"768"},{"ruleId":"654","severity":1,"message":"673","line":23,"column":8,"nodeType":"656","endLine":23,"endColumn":18,"suggestions":"769"},{"ruleId":"717","severity":1,"message":"718","line":36,"column":29,"nodeType":"719","endLine":36,"endColumn":65},{"ruleId":"646","severity":1,"message":"770","line":5,"column":8,"nodeType":"648","messageId":"649","endLine":5,"endColumn":13},{"ruleId":"646","severity":1,"message":"771","line":3,"column":10,"nodeType":"648","messageId":"649","endLine":3,"endColumn":16},{"ruleId":"646","severity":1,"message":"772","line":4,"column":10,"nodeType":"648","messageId":"649","endLine":4,"endColumn":24},{"ruleId":"646","severity":1,"message":"740","line":4,"column":26,"nodeType":"648","messageId":"649","endLine":4,"endColumn":31},{"ruleId":"646","severity":1,"message":"715","line":6,"column":10,"nodeType":"648","messageId":"649","endLine":6,"endColumn":14},{"ruleId":"646","severity":1,"message":"773","line":16,"column":12,"nodeType":"648","messageId":"649","endLine":16,"endColumn":23},{"ruleId":"646","severity":1,"message":"774","line":16,"column":25,"nodeType":"648","messageId":"649","endLine":16,"endColumn":39},{"ruleId":"654","severity":1,"message":"673","line":32,"column":8,"nodeType":"656","endLine":32,"endColumn":19,"suggestions":"775"},{"ruleId":"776","severity":1,"message":"777","line":73,"column":33,"nodeType":"778","endLine":73,"endColumn":46},{"ruleId":"646","severity":1,"message":"715","line":3,"column":10,"nodeType":"648","messageId":"649","endLine":3,"endColumn":14},{"ruleId":"646","severity":1,"message":"716","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":12},{"ruleId":"646","severity":1,"message":"779","line":12,"column":11,"nodeType":"648","messageId":"649","endLine":12,"endColumn":18},{"ruleId":"646","severity":1,"message":"762","line":14,"column":10,"nodeType":"648","messageId":"649","endLine":14,"endColumn":17},{"ruleId":"646","severity":1,"message":"780","line":14,"column":19,"nodeType":"648","messageId":"649","endLine":14,"endColumn":26},{"ruleId":"646","severity":1,"message":"781","line":14,"column":39,"nodeType":"648","messageId":"649","endLine":14,"endColumn":44},{"ruleId":"717","severity":1,"message":"718","line":53,"column":29,"nodeType":"719","endLine":53,"endColumn":223},{"ruleId":"720","severity":1,"message":"721","line":53,"column":29,"nodeType":"719","endLine":53,"endColumn":223},{"ruleId":"720","severity":1,"message":"722","line":53,"column":29,"nodeType":"719","endLine":53,"endColumn":223},{"ruleId":"723","severity":1,"message":"724","line":56,"column":37,"nodeType":"719","endLine":56,"endColumn":183},{"ruleId":"646","severity":1,"message":"663","line":1,"column":28,"nodeType":"648","messageId":"649","endLine":1,"endColumn":36},{"ruleId":"646","severity":1,"message":"781","line":20,"column":22,"nodeType":"648","messageId":"649","endLine":20,"endColumn":27},{"ruleId":"654","severity":1,"message":"655","line":34,"column":8,"nodeType":"656","endLine":34,"endColumn":19,"suggestions":"782"},{"ruleId":"646","severity":1,"message":"663","line":1,"column":28,"nodeType":"648","messageId":"649","endLine":1,"endColumn":36},{"ruleId":"646","severity":1,"message":"760","line":8,"column":11,"nodeType":"648","messageId":"649","endLine":8,"endColumn":19},{"ruleId":"654","severity":1,"message":"673","line":16,"column":7,"nodeType":"656","endLine":16,"endColumn":18,"suggestions":"783"},{"ruleId":"646","severity":1,"message":"663","line":1,"column":28,"nodeType":"648","messageId":"649","endLine":1,"endColumn":36},{"ruleId":"646","severity":1,"message":"784","line":16,"column":9,"nodeType":"648","messageId":"649","endLine":16,"endColumn":21},{"ruleId":"646","severity":1,"message":"785","line":17,"column":9,"nodeType":"648","messageId":"649","endLine":17,"endColumn":19},{"ruleId":"646","severity":1,"message":"786","line":18,"column":9,"nodeType":"648","messageId":"649","endLine":18,"endColumn":24},{"ruleId":"646","severity":1,"message":"781","line":21,"column":22,"nodeType":"648","messageId":"649","endLine":21,"endColumn":27},{"ruleId":"646","severity":1,"message":"787","line":24,"column":13,"nodeType":"648","messageId":"649","endLine":24,"endColumn":27},{"ruleId":"646","severity":1,"message":"788","line":27,"column":13,"nodeType":"648","messageId":"649","endLine":27,"endColumn":25},{"ruleId":"646","severity":1,"message":"789","line":30,"column":13,"nodeType":"648","messageId":"649","endLine":30,"endColumn":28},{"ruleId":"646","severity":1,"message":"790","line":33,"column":13,"nodeType":"648","messageId":"649","endLine":33,"endColumn":30},{"ruleId":"654","severity":1,"message":"673","line":40,"column":7,"nodeType":"656","endLine":40,"endColumn":18,"suggestions":"791"},{"ruleId":"654","severity":1,"message":"763","line":80,"column":8,"nodeType":"656","endLine":80,"endColumn":10,"suggestions":"792"},{"ruleId":"776","severity":1,"message":"777","line":199,"column":81,"nodeType":"778","endLine":199,"endColumn":93},{"ruleId":"776","severity":1,"message":"777","line":209,"column":81,"nodeType":"778","endLine":209,"endColumn":93},{"ruleId":"776","severity":1,"message":"777","line":224,"column":81,"nodeType":"778","endLine":224,"endColumn":93},{"ruleId":"776","severity":1,"message":"777","line":234,"column":81,"nodeType":"778","endLine":234,"endColumn":93},{"ruleId":"776","severity":1,"message":"777","line":298,"column":81,"nodeType":"778","endLine":298,"endColumn":93},{"ruleId":"776","severity":1,"message":"777","line":308,"column":81,"nodeType":"778","endLine":308,"endColumn":93},{"ruleId":"776","severity":1,"message":"777","line":323,"column":81,"nodeType":"778","endLine":323,"endColumn":93},{"ruleId":"776","severity":1,"message":"777","line":333,"column":81,"nodeType":"778","endLine":333,"endColumn":93},{"ruleId":"776","severity":1,"message":"777","line":395,"column":81,"nodeType":"778","endLine":395,"endColumn":93},{"ruleId":"776","severity":1,"message":"777","line":405,"column":81,"nodeType":"778","endLine":405,"endColumn":93},{"ruleId":"776","severity":1,"message":"777","line":420,"column":81,"nodeType":"778","endLine":420,"endColumn":93},{"ruleId":"776","severity":1,"message":"777","line":430,"column":81,"nodeType":"778","endLine":430,"endColumn":93},{"ruleId":"646","severity":1,"message":"781","line":16,"column":22,"nodeType":"648","messageId":"649","endLine":16,"endColumn":27},{"ruleId":"654","severity":1,"message":"655","line":21,"column":8,"nodeType":"656","endLine":21,"endColumn":19,"suggestions":"793"},{"ruleId":"646","severity":1,"message":"740","line":7,"column":26,"nodeType":"648","messageId":"649","endLine":7,"endColumn":31},{"ruleId":"654","severity":1,"message":"673","line":26,"column":8,"nodeType":"656","endLine":26,"endColumn":19,"suggestions":"794"},{"ruleId":"717","severity":1,"message":"718","line":48,"column":33,"nodeType":"719","endLine":48,"endColumn":68},{"ruleId":"646","severity":1,"message":"746","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":9},{"ruleId":"646","severity":1,"message":"716","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":12},{"ruleId":"646","severity":1,"message":"795","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":14},{"ruleId":"646","severity":1,"message":"796","line":10,"column":8,"nodeType":"648","messageId":"649","endLine":10,"endColumn":13},{"ruleId":"654","severity":1,"message":"673","line":22,"column":8,"nodeType":"656","endLine":22,"endColumn":18,"suggestions":"797"},{"ruleId":"646","severity":1,"message":"716","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":12},{"ruleId":"646","severity":1,"message":"795","line":5,"column":8,"nodeType":"648","messageId":"649","endLine":5,"endColumn":14},{"ruleId":"654","severity":1,"message":"673","line":27,"column":8,"nodeType":"656","endLine":27,"endColumn":22,"suggestions":"798"},{"ruleId":"646","severity":1,"message":"799","line":1,"column":17,"nodeType":"648","messageId":"649","endLine":1,"endColumn":30},{"ruleId":"646","severity":1,"message":"746","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":9},{"ruleId":"646","severity":1,"message":"716","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":12},{"ruleId":"646","severity":1,"message":"795","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":14},{"ruleId":"646","severity":1,"message":"715","line":8,"column":10,"nodeType":"648","messageId":"649","endLine":8,"endColumn":14},{"ruleId":"646","severity":1,"message":"800","line":9,"column":8,"nodeType":"648","messageId":"649","endLine":9,"endColumn":9},{"ruleId":"654","severity":1,"message":"673","line":23,"column":8,"nodeType":"656","endLine":23,"endColumn":18,"suggestions":"801"},{"ruleId":"646","severity":1,"message":"802","line":1,"column":17,"nodeType":"648","messageId":"649","endLine":1,"endColumn":26},{"ruleId":"646","severity":1,"message":"746","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":9},{"ruleId":"646","severity":1,"message":"716","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":12},{"ruleId":"646","severity":1,"message":"795","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":14},{"ruleId":"646","severity":1,"message":"802","line":1,"column":17,"nodeType":"648","messageId":"649","endLine":1,"endColumn":26},{"ruleId":"646","severity":1,"message":"772","line":7,"column":10,"nodeType":"648","messageId":"649","endLine":7,"endColumn":24},{"ruleId":"646","severity":1,"message":"740","line":7,"column":26,"nodeType":"648","messageId":"649","endLine":7,"endColumn":31},{"ruleId":"717","severity":1,"message":"718","line":43,"column":33,"nodeType":"719","endLine":43,"endColumn":68},{"ruleId":"646","severity":1,"message":"663","line":1,"column":28,"nodeType":"648","messageId":"649","endLine":1,"endColumn":36},{"ruleId":"646","severity":1,"message":"771","line":3,"column":10,"nodeType":"648","messageId":"649","endLine":3,"endColumn":16},{"ruleId":"646","severity":1,"message":"772","line":4,"column":10,"nodeType":"648","messageId":"649","endLine":4,"endColumn":24},{"ruleId":"646","severity":1,"message":"740","line":4,"column":26,"nodeType":"648","messageId":"649","endLine":4,"endColumn":31},{"ruleId":"646","severity":1,"message":"715","line":6,"column":10,"nodeType":"648","messageId":"649","endLine":6,"endColumn":14},{"ruleId":"646","severity":1,"message":"760","line":11,"column":11,"nodeType":"648","messageId":"649","endLine":11,"endColumn":19},{"ruleId":"654","severity":1,"message":"673","line":18,"column":7,"nodeType":"656","endLine":18,"endColumn":18,"suggestions":"803"},{"ruleId":"717","severity":1,"message":"718","line":32,"column":33,"nodeType":"719","endLine":32,"endColumn":68},{"ruleId":"646","severity":1,"message":"802","line":1,"column":17,"nodeType":"648","messageId":"649","endLine":1,"endColumn":26},{"ruleId":"646","severity":1,"message":"804","line":2,"column":23,"nodeType":"648","messageId":"649","endLine":2,"endColumn":34},{"ruleId":"646","severity":1,"message":"760","line":9,"column":11,"nodeType":"648","messageId":"649","endLine":9,"endColumn":19},{"ruleId":"646","severity":1,"message":"805","line":10,"column":12,"nodeType":"648","messageId":"649","endLine":10,"endColumn":23},{"ruleId":"646","severity":1,"message":"806","line":10,"column":25,"nodeType":"648","messageId":"649","endLine":10,"endColumn":40},{"ruleId":"646","severity":1,"message":"807","line":11,"column":9,"nodeType":"648","messageId":"649","endLine":11,"endColumn":20},{"ruleId":"646","severity":1,"message":"663","line":1,"column":28,"nodeType":"648","messageId":"649","endLine":1,"endColumn":36},{"ruleId":"654","severity":1,"message":"655","line":38,"column":8,"nodeType":"656","endLine":38,"endColumn":19,"suggestions":"808"},{"ruleId":"776","severity":1,"message":"777","line":101,"column":61,"nodeType":"778","endLine":101,"endColumn":74},{"ruleId":"776","severity":1,"message":"777","line":111,"column":61,"nodeType":"778","endLine":111,"endColumn":74},{"ruleId":"646","severity":1,"message":"802","line":1,"column":17,"nodeType":"648","messageId":"649","endLine":1,"endColumn":26},{"ruleId":"646","severity":1,"message":"663","line":1,"column":28,"nodeType":"648","messageId":"649","endLine":1,"endColumn":36},{"ruleId":"646","severity":1,"message":"804","line":2,"column":23,"nodeType":"648","messageId":"649","endLine":2,"endColumn":34},{"ruleId":"646","severity":1,"message":"760","line":9,"column":11,"nodeType":"648","messageId":"649","endLine":9,"endColumn":19},{"ruleId":"646","severity":1,"message":"795","line":2,"column":8,"nodeType":"648","messageId":"649","endLine":2,"endColumn":14},{"ruleId":"646","severity":1,"message":"809","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":18},{"ruleId":"654","severity":1,"message":"763","line":18,"column":8,"nodeType":"656","endLine":18,"endColumn":15,"suggestions":"810"},{"ruleId":"646","severity":1,"message":"811","line":1,"column":10,"nodeType":"648","messageId":"649","endLine":1,"endColumn":30},{"ruleId":"646","severity":1,"message":"812","line":1,"column":32,"nodeType":"648","messageId":"649","endLine":1,"endColumn":55},{"ruleId":"646","severity":1,"message":"813","line":1,"column":57,"nodeType":"648","messageId":"649","endLine":1,"endColumn":80},{"ruleId":"646","severity":1,"message":"814","line":1,"column":10,"nodeType":"648","messageId":"649","endLine":1,"endColumn":32},"no-native-reassign",["815"],"no-negated-in-lhs",["816"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'DeleteLoading' is assigned a value but never used.","'deleteError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["817"],"array-callback-return","Array.prototype.filter() expects a return value from function.","FunctionExpression","expectedInside",["818"],"'useState' is defined but never used.","'RegulareChart' is defined but never used.","'listAreaLoading' is assigned a value but never used.","'listAreaError' is assigned a value but never used.","'listCategoryLoading' is assigned a value but never used.","'listCategoryError' is assigned a value but never used.","'listUnitLoading' is assigned a value but never used.","'listUnitError' is assigned a value but never used.",["819"],["820"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["821"],"'editLoading' is assigned a value but never used.","'editError' is assigned a value but never used.",["822"],"no-whitespace-before-property","Unexpected whitespace before property filter.","MemberExpression","unexpectedWhitespace",{"range":"823","text":"824"},"Unexpected whitespace before property isActive.",{"range":"825","text":"824"},{"range":"826","text":"824"},"Unexpected whitespace before property _id.",{"range":"827","text":"824"},"Unexpected whitespace before property name.",{"range":"828","text":"824"},"Unexpected whitespace before property description.",{"range":"829","text":"824"},{"range":"830","text":"824"},"Unexpected whitespace before property map.",{"range":"831","text":"824"},{"range":"832","text":"824"},{"range":"833","text":"824"},{"range":"834","text":"824"},{"range":"835","text":"824"},{"range":"836","text":"824"},{"range":"837","text":"824"},{"range":"838","text":"824"},{"range":"839","text":"824"},"React Hook useEffect has missing dependencies: 'dispatch', 'itemId', and 'props.history'. Either include them or remove the dependency array.",["840"],{"range":"841","text":"824"},"Unexpected whitespace before property createdAt.",{"range":"842","text":"824"},{"range":"843","text":"824"},{"range":"844","text":"824"},"Unexpected whitespace before property minPrice.",{"range":"845","text":"824"},"Unexpected whitespace before property maxPrice.",{"range":"846","text":"824"},"'Logo' is defined but never used.","'Link' is defined but never used.","'logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role img. This role is implicit on the element img.","The attribute aria-expanded is not supported by the role img. This role is implicit on the element img.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'react' is defined but never used.","'useDispatch' is defined but never used.","'listItemLoading' is assigned a value but never used.","'listItemError' is assigned a value but never used.","Unexpected whitespace before property category.",{"range":"847","text":"824"},{"range":"848","text":"824"},{"range":"849","text":"824"},{"range":"850","text":"824"},{"range":"851","text":"824"},{"range":"852","text":"824"},{"range":"853","text":"824"},{"range":"854","text":"824"},{"range":"855","text":"824"},{"range":"856","text":"824"},"'toast' is defined but never used.",["857"],["815"],["816"],"'location' is assigned a value but never used.","'signin' is defined but never used.","'$' is defined but never used.",{"range":"858","text":"824"},{"range":"859","text":"824"},{"range":"860","text":"824"},{"range":"861","text":"824"},{"range":"862","text":"824"},{"range":"863","text":"824"},{"range":"864","text":"824"},{"range":"865","text":"824"},{"range":"866","text":"824"},{"range":"867","text":"824"},["815"],["816"],"'refreshUser' is defined but never used.","'dispatch' is assigned a value but never used.",["868"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["869"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["815"],["816"],["870"],"'Chart' is defined but never used.","'signup' is defined but never used.","'ToastContainer' is defined but never used.","'accessLevel' is assigned a value but never used.","'setAccessLevel' is assigned a value but never used.",["871"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","'history' is assigned a value but never used.","'success' is assigned a value but never used.","'error' is assigned a value but never used.",["872"],["873"],"'premiumSerNo' is assigned a value but never used.","'basicSerNo' is assigned a value but never used.","'deactivateSerNo' is assigned a value but never used.","'premiumLoading' is assigned a value but never used.","'basicLoading' is assigned a value but never used.","'activateLoading' is assigned a value but never used.","'deActivateLoading' is assigned a value but never used.",["874"],["875"],["876"],["877"],"'Navbar' is defined but never used.","'axios' is defined but never used.",["878"],["879"],"'useDebugValue' is defined but never used.","'e' is defined but never used.",["880"],"'useEffect' is defined but never used.",["881"],"'useSelector' is defined but never used.","'chartSelect' is assigned a value but never used.","'setcChartSelect' is assigned a value but never used.","'weeklyTitle' is assigned a value but never used.",["882"],"'contactImg' is defined but never used.",["883"],"'CONFIRM_PREMIUM_FAIL' is defined but never used.","'CONFIRM_PREMIUM_REQUEST' is defined but never used.","'CONFIRM_PREMIUM_SUCCESS' is defined but never used.","'failedToTransformError' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"884","fix":"885"},{"desc":"884","fix":"886"},{"desc":"884","fix":"887"},{"desc":"884","fix":"888"},{"desc":"889","fix":"890"},{"desc":"884","fix":"891"},[1694,1697],"?.",[1788,1791],[1880,1883],[2931,2934],[2959,2962],[2995,2998],[3035,3038],[8085,8088],[8427,8430],[8522,8525],[8713,8716],[8798,8801],[9205,9208],[9478,9481],[10066,10069],[13217,13220],{"desc":"892","fix":"893"},[3367,3370],[3603,3606],[3648,3651],[3694,3697],[3793,3796],[3876,3879],[565,568],[596,599],[690,693],[707,710],[933,936],[968,971],[1005,1008],[1040,1043],[1141,1144],[1158,1161],{"desc":"884","fix":"894"},[565,568],[596,599],[690,693],[707,710],[933,936],[968,971],[1005,1008],[1040,1043],[1141,1144],[1158,1161],{"desc":"889","fix":"895"},{"desc":"896","fix":"897"},{"desc":"889","fix":"898"},{"desc":"899","fix":"900"},{"desc":"901","fix":"902"},{"desc":"899","fix":"903"},{"desc":"899","fix":"904"},{"desc":"896","fix":"905"},{"desc":"901","fix":"906"},{"desc":"899","fix":"907"},{"desc":"889","fix":"908"},{"desc":"909","fix":"910"},{"desc":"889","fix":"911"},{"desc":"899","fix":"912"},{"desc":"901","fix":"913"},{"desc":"914","fix":"915"},"Update the dependencies array to be: [dispatch, props.history, userInfo]",{"range":"916","text":"917"},{"range":"918","text":"917"},{"range":"919","text":"917"},{"range":"920","text":"917"},"Update the dependencies array to be: [props.history, userInfo]",{"range":"921","text":"922"},{"range":"923","text":"917"},"Update the dependencies array to be: [dispatch, itemId, props.history, userInfo]",{"range":"924","text":"925"},{"range":"926","text":"917"},{"range":"927","text":"922"},"Update the dependencies array to be: [dispatch]",{"range":"928","text":"929"},{"range":"930","text":"922"},"Update the dependencies array to be: [adminInfo, props.history]",{"range":"931","text":"932"},"Update the dependencies array to be: [adminInfo, dispatch, props.history]",{"range":"933","text":"934"},{"range":"935","text":"932"},{"range":"936","text":"932"},{"range":"937","text":"929"},{"range":"938","text":"934"},{"range":"939","text":"932"},{"range":"940","text":"922"},"Update the dependencies array to be: [props.history, saveUserInfo]",{"range":"941","text":"942"},{"range":"943","text":"922"},{"range":"944","text":"932"},{"range":"945","text":"934"},"Update the dependencies array to be: [dispatch, token]",{"range":"946","text":"947"},[2455,2465],"[dispatch, props.history, userInfo]",[1700,1710],[1657,1667],[1783,1793],[1043,1053],"[props.history, userInfo]",[1652,1662],[988,998],"[dispatch, itemId, props.history, userInfo]",[1070,1080],[675,685],[1245,1247],"[dispatch]",[895,905],[1275,1286],"[adminInfo, props.history]",[1331,1342],"[adminInfo, dispatch, props.history]",[565,576],[1915,1926],[2797,2799],[801,812],[1147,1158],[783,793],[982,996],"[props.history, saveUserInfo]",[891,901],[706,717],[1396,1407],[679,686],"[dispatch, token]"]