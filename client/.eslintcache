[{"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\index.js":"1","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\App.js":"2","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reportWebVitals.js":"3","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\store\\Store.js":"4","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\item.js":"5","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\unit.js":"6","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Dashboard.js":"7","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\category.js":"8","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\settings.js":"9","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\area.js":"10","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\regulate.js":"11","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\auth\\singin.js":"12","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\auth.js":"13","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\items.js":"14","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\category.js":"15","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\unit.js":"16","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\area.js":"17","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\regulateItems.js":"18","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Navbar.js":"19","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\items.js":"20","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\unit.js":"21","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\category.js":"22","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\area.js":"23","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\auth.js":"24","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\regulateItems.js":"25","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\area.js":"26","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\regulateItem.js":"27","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\category.js":"28","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\unit.js":"29","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\items.js":"30","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\auth.js":"31","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\regulateChart.js":"32","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\itemBarChart.js":"33","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\complaint.js":"34","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\complaint.js":"35","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\complaint.js":"36","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\complaint.js":"37","G:\\expert system\\server\\client\\src\\index.js":"38","G:\\expert system\\server\\client\\src\\App.js":"39","G:\\expert system\\server\\client\\src\\reportWebVitals.js":"40","G:\\expert system\\server\\client\\src\\store\\Store.js":"41","G:\\expert system\\server\\client\\src\\screen\\auth\\singin.js":"42","G:\\expert system\\server\\client\\src\\reducer\\auth.js":"43","G:\\expert system\\server\\client\\src\\action\\auth.js":"44","G:\\expert system\\server\\client\\src\\screen\\chart\\itemBarChart.js":"45","G:\\expert system\\server\\client\\src\\screen\\chart\\regulateChart.js":"46","G:\\expert system\\server\\client\\src\\contant\\auth.js":"47","G:\\expert system\\server\\client\\src\\screen\\StartScreen.js":"48","G:\\expert system\\server\\client\\src\\screen\\Navbar.js":"49","G:\\expert system\\server\\client\\src\\screen\\actionButton.js":"50","G:\\expert system\\server\\client\\src\\screen\\ActionButton.js":"51","G:\\expert system\\server\\client\\src\\screen\\Contact.js":"52","G:\\expert system\\server\\client\\src\\screen\\DetailScreen.js":"53","G:\\expert system\\server\\client\\src\\screen\\auth\\signup.js":"54","G:\\expert system\\server\\client\\src\\screen\\admin\\Navbar.js":"55","G:\\expert system\\server\\client\\src\\screen\\admin\\Dashboard.js":"56","G:\\expert system\\server\\client\\src\\screen\\admin\\DetailScreen.js":"57","G:\\expert system\\server\\client\\src\\screen\\admin\\user.js":"58","G:\\expert system\\server\\client\\src\\screen\\admin\\Message.js":"59","G:\\expert system\\server\\client\\src\\screen\\admin\\Setting.js":"60","G:\\expert system\\server\\client\\src\\screen\\Signin.js":"61","G:\\expert system\\server\\client\\src\\screen\\signup.js":"62","G:\\expert system\\server\\client\\src\\screen\\forgotPassord.js":"63","G:\\expert system\\server\\client\\src\\screen\\newPassword.js":"64","G:\\expert system\\server\\client\\src\\screen\\Profile.js":"65","G:\\expert system\\server\\client\\src\\screen\\admin\\UplaodFile.js":"66","G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\PremiumChart.js":"67","G:\\expert system\\server\\client\\src\\screen\\admin\\RequestPremium.js":"68","G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\frequectChart.js":"69","G:\\expert system\\server\\client\\src\\screen\\verified.js":"70","G:\\expert system\\server\\client\\src\\action\\premium.js":"71","G:\\expert system\\server\\client\\src\\contant\\premium.js":"72","G:\\expert system\\server\\client\\src\\reducer\\premium.js":"73","G:\\expert system\\server\\client\\src\\reducer\\message.js":"74","G:\\expert system\\server\\client\\src\\contant\\message.js":"75","G:\\expert system\\server\\client\\src\\action\\message.js":"76","G:\\expert system\\server\\client\\src\\reducer\\user.js":"77","G:\\expert system\\server\\client\\src\\contant\\user.js":"78","G:\\expert system\\server\\client\\src\\action\\user.js":"79","G:\\expert system\\server\\client\\src\\reducer\\admin\\auth.js":"80","G:\\expert system\\server\\client\\src\\contant\\admin\\auth.js":"81","G:\\expert system\\server\\client\\src\\reducer\\admin\\message.js":"82","G:\\expert system\\server\\client\\src\\contant\\admin\\message.js":"83","G:\\expert system\\server\\client\\src\\reducer\\admin\\premium.js":"84","G:\\expert system\\server\\client\\src\\contant\\admin\\premium.js":"85","G:\\expert system\\server\\client\\src\\reducer\\admin\\user.js":"86","G:\\expert system\\server\\client\\src\\contant\\admin\\user.js":"87","G:\\expert system\\server\\client\\src\\action\\admin\\auth.js":"88","G:\\expert system\\server\\client\\src\\action\\admin\\premium.js":"89","G:\\expert system\\server\\client\\src\\action\\admin\\user.js":"90"},{"size":662,"mtime":1627510351000,"results":"91","hashOfConfig":"92"},{"size":1478,"mtime":1630595486179,"results":"93","hashOfConfig":"92"},{"size":362,"mtime":1627510351000,"results":"94","hashOfConfig":"92"},{"size":1912,"mtime":1630595014082,"results":"95","hashOfConfig":"92"},{"size":30159,"mtime":1633631227303,"results":"96","hashOfConfig":"92"},{"size":20042,"mtime":1628420703519,"results":"97","hashOfConfig":"92"},{"size":11323,"mtime":1628428189293,"results":"98","hashOfConfig":"92"},{"size":20298,"mtime":1628483765210,"results":"99","hashOfConfig":"92"},{"size":4469,"mtime":1627510351000,"results":"100","hashOfConfig":"92"},{"size":19136,"mtime":1628483724031,"results":"101","hashOfConfig":"92"},{"size":4364,"mtime":1628419779376,"results":"102","hashOfConfig":"92"},{"size":2836,"mtime":1627510351000,"results":"103","hashOfConfig":"92"},{"size":1591,"mtime":1627510351000,"results":"104","hashOfConfig":"92"},{"size":2035,"mtime":1628415414564,"results":"105","hashOfConfig":"92"},{"size":2216,"mtime":1627510351000,"results":"106","hashOfConfig":"92"},{"size":2034,"mtime":1627510351000,"results":"107","hashOfConfig":"92"},{"size":2034,"mtime":1627510351000,"results":"108","hashOfConfig":"92"},{"size":630,"mtime":1628415482817,"results":"109","hashOfConfig":"92"},{"size":7203,"mtime":1632407511850,"results":"110","hashOfConfig":"92"},{"size":2184,"mtime":1628403072224,"results":"111","hashOfConfig":"92"},{"size":2002,"mtime":1628139068621,"results":"112","hashOfConfig":"92"},{"size":2172,"mtime":1628483776451,"results":"113","hashOfConfig":"92"},{"size":2005,"mtime":1628138531021,"results":"114","hashOfConfig":"92"},{"size":1792,"mtime":1627658970109,"results":"115","hashOfConfig":"92"},{"size":757,"mtime":1628418262041,"results":"116","hashOfConfig":"92"},{"size":631,"mtime":1627510351000,"results":"117","hashOfConfig":"92"},{"size":211,"mtime":1628415356035,"results":"118","hashOfConfig":"92"},{"size":726,"mtime":1627510351000,"results":"119","hashOfConfig":"92"},{"size":631,"mtime":1627510351000,"results":"120","hashOfConfig":"92"},{"size":633,"mtime":1627510351000,"results":"121","hashOfConfig":"92"},{"size":530,"mtime":1627510351000,"results":"122","hashOfConfig":"92"},{"size":978,"mtime":1628315462938,"results":"123","hashOfConfig":"92"},{"size":2904,"mtime":1632407342995,"results":"124","hashOfConfig":"92"},{"size":590,"mtime":1630595063933,"results":"125","hashOfConfig":"92"},{"size":187,"mtime":1630594864176,"results":"126","hashOfConfig":"92"},{"size":6654,"mtime":1631566237351,"results":"127","hashOfConfig":"92"},{"size":689,"mtime":1630594800803,"results":"128","hashOfConfig":"92"},{"size":662,"mtime":1638468181206,"results":"129","hashOfConfig":"130"},{"size":2564,"mtime":1643644757681,"results":"131","hashOfConfig":"130"},{"size":362,"mtime":1627510351000,"results":"132","hashOfConfig":"130"},{"size":2125,"mtime":1643740082289,"results":"133","hashOfConfig":"130"},{"size":2607,"mtime":1643788067091,"results":"134","hashOfConfig":"130"},{"size":3160,"mtime":1643736502325,"results":"135","hashOfConfig":"130"},{"size":3099,"mtime":1643711355372,"results":"136","hashOfConfig":"130"},{"size":2904,"mtime":1632407342995,"results":"137","hashOfConfig":"130"},{"size":978,"mtime":1628315462938,"results":"138","hashOfConfig":"130"},{"size":1163,"mtime":1643644957044,"results":"139","hashOfConfig":"130"},{"size":2892,"mtime":1643872302307,"results":"140","hashOfConfig":"130"},{"size":4293,"mtime":1643870885366,"results":"141","hashOfConfig":"130"},{"size":425,"mtime":1638910053899,"results":"142","hashOfConfig":"130"},{"size":425,"mtime":1638910053899,"results":"143","hashOfConfig":"130"},{"size":3909,"mtime":1643736167298,"results":"144","hashOfConfig":"130"},{"size":6063,"mtime":1642603341229,"results":"145","hashOfConfig":"130"},{"size":4356,"mtime":1643887104899,"results":"146","hashOfConfig":"130"},{"size":6526,"mtime":1643787608178,"results":"147","hashOfConfig":"130"},{"size":7712,"mtime":1643787771947,"results":"148","hashOfConfig":"130"},{"size":3419,"mtime":1642602850089,"results":"149","hashOfConfig":"130"},{"size":35698,"mtime":1643882888493,"results":"150","hashOfConfig":"130"},{"size":5485,"mtime":1639853588049,"results":"151","hashOfConfig":"130"},{"size":3537,"mtime":1639838917953,"results":"152","hashOfConfig":"130"},{"size":3410,"mtime":1643711721928,"results":"153","hashOfConfig":"130"},{"size":3582,"mtime":1643881998896,"results":"154","hashOfConfig":"130"},{"size":3002,"mtime":1643694601953,"results":"155","hashOfConfig":"130"},{"size":3183,"mtime":1643655694517,"results":"156","hashOfConfig":"130"},{"size":4606,"mtime":1643711337721,"results":"157","hashOfConfig":"130"},{"size":2906,"mtime":1639849618114,"results":"158","hashOfConfig":"130"},{"size":2739,"mtime":1643798048217,"results":"159","hashOfConfig":"130"},{"size":6432,"mtime":1643877258325,"results":"160","hashOfConfig":"130"},{"size":1758,"mtime":1642603503864,"results":"161","hashOfConfig":"130"},{"size":1749,"mtime":1643644218224,"results":"162","hashOfConfig":"130"},{"size":649,"mtime":1643699046523,"results":"163","hashOfConfig":"130"},{"size":175,"mtime":1643696180133,"results":"164","hashOfConfig":"130"},{"size":656,"mtime":1643738990041,"results":"165","hashOfConfig":"130"},{"size":541,"mtime":1643701471448,"results":"166","hashOfConfig":"130"},{"size":175,"mtime":1643700844815,"results":"167","hashOfConfig":"130"},{"size":667,"mtime":1643706609174,"results":"168","hashOfConfig":"130"},{"size":535,"mtime":1643735485679,"results":"169","hashOfConfig":"130"},{"size":175,"mtime":1643734493576,"results":"170","hashOfConfig":"130"},{"size":636,"mtime":1643872280939,"results":"171","hashOfConfig":"130"},{"size":1635,"mtime":1643882356149,"results":"172","hashOfConfig":"130"},{"size":578,"mtime":1643737083128,"results":"173","hashOfConfig":"130"},{"size":575,"mtime":1643738091929,"results":"174","hashOfConfig":"130"},{"size":175,"mtime":1643736578225,"results":"175","hashOfConfig":"130"},{"size":1760,"mtime":1643875840558,"results":"176","hashOfConfig":"130"},{"size":559,"mtime":1643738651133,"results":"177","hashOfConfig":"130"},{"size":1923,"mtime":1643877751607,"results":"178","hashOfConfig":"130"},{"size":635,"mtime":1643739594545,"results":"179","hashOfConfig":"130"},{"size":1944,"mtime":1643887249455,"results":"180","hashOfConfig":"130"},{"size":1567,"mtime":1643872907880,"results":"181","hashOfConfig":"130"},{"size":1666,"mtime":1643878363591,"results":"182","hashOfConfig":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},"n71n87",{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"185"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"185"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"185"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"185"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"185"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":16,"source":"210","usedDeprecatedRules":"185"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":6,"source":"213","usedDeprecatedRules":"185"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"185"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"185"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"185"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":10,"source":"261","usedDeprecatedRules":"185"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"185"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},"1g3zd92",{"filePath":"274","messages":"275","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"273"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"273"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":10,"source":"261","usedDeprecatedRules":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"290"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"304"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"273"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"273"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"273"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"273"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"273"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"273"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"273"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"273"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"273"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"273"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"273"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"273"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"273"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"273"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\index.js",[],["397","398"],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\App.js",["399","400","401"],"import './App.css';\nimport { BrowserRouter, Route, Router, Switch, useLocation } from 'react-router-dom'\nimport SigninScreen from './screen/auth/singin';\nimport DashboardScreen from './screen/Dashboard';\nimport ItemsScreen from './screen/item';\nimport UnitScreen from './screen/unit';\nimport CategoryScreen from './screen/category';\nimport AreaScreen from './screen/area';\nimport SettingScreen from './screen/settings';\nimport RegulateScreen from './screen/regulate';\nimport ComplaintScreen from './screen/complaint';\n\nfunction App() {\n  var location = useLocation();\n  return (\n    <>\n\n      {location.pathname === '/signin'?\n        <Route exact path='/signin' component={SigninScreen} />\n      :\n          <div className=\"containerMain\">        \n                \n                {/* <Route exact path='/signup' component={signupScreen} /> */}\n                <Route exact path='/' component={DashboardScreen} />\n                <Route exact path='/items' component={ItemsScreen} />\n                <Route exact path='/units' component={UnitScreen} />\n                <Route exact path='/category' component={CategoryScreen} />\n                <Route exact path='/area' component={AreaScreen} />\n                <Route exact path='/settings' component={SettingScreen} />\n                <Route path='/regulate/:id' component={RegulateScreen} />\n                <Route path='/complaint' component={ComplaintScreen} />\n        </div>\n      }\n    </>\n  );\n}\n\nexport default App;\n","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reportWebVitals.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\store\\Store.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\item.js",["402","403","404","405"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { addItemsAction, deleteItemsAction, editItemsAction, listItemsAction } from \"../action/items\";\nimport { listCategoryAction } from \"../action/category\";\nimport { listUnitAction } from \"../action/unit\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { Link } from \"../../node_modules/react-router-dom/cjs/react-router-dom\";\nconst ItemsScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [minPrice, setMinPrice] = useState(\"\")\n    const [maxPrice, setMaxPrice] = useState(\"\")\n    const [unitId, setUnitId] = useState(\"\")\n    const [categoryId, setCategoryId] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    const [categoryFilter, setCategoryFilter] = useState(\"all\")\n    const [unitFilter, setUnitFilter] = useState(\"all\")\n    const [statusFilter, setStatusFilter] = useState(\"all\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const itemListData = useSelector(state => state.itemListData);\n    const { itemList, loading, error } = itemListData;\n\n    const itemAddData = useSelector(state => state.itemAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = itemAddData;\n\n    const itemDeleteData = useSelector(state => state.itemDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = itemDeleteData;\n\n    const itemEditData = useSelector(state => state.itemEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = itemEditData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList } = categoryListData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList } = unitListData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/items') : props.history.push('/signin');\n        dispatch(listItemsAction())\n        dispatch(listCategoryAction())\n        dispatch(listUnitAction())\n\n    }, [userInfo])\n\n    var selectItems = itemList?.filter(function (data) {\n        if (categoryFilter !== 'all' && unitFilter !== 'all' && statusFilter === \"all\") {\n            return data?.category === categoryFilter && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter === 'all' && unitFilter !== 'all' && statusFilter === \"active\") {\n            return data?.isActive === true && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter === 'all' && unitFilter !== 'all' && statusFilter === \"inActive\") {\n            return data?.isActive === false && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter !== 'all' && unitFilter === 'all' && statusFilter === \"active\") {\n            return data?.isActive === true && data?.category === categoryFilter;\n        }\n\n        if (categoryFilter !== 'all' && unitFilter === 'all' && statusFilter === \"inActive\") {\n            return data?.isActive === false && data?.category === categoryFilter;\n        }\n\n        if (categoryFilter !== 'all' && statusFilter === \"active\" && unitFilter !== 'all') {\n            return data.isActive === true && data?.category === categoryFilter && data.unit === unitFilter;\n        }\n        if (categoryFilter !== 'all' && statusFilter === \"inActive\" && unitFilter !== 'all') {\n            return data.isActive === false && data?.category === categoryFilter && data.unit === unitFilter;\n        }\n        if (unitFilter !== 'all') {\n            return data?.unit === unitFilter;\n        }\n        if (categoryFilter !== 'all') {\n            return data?.category === categoryFilter\n        }\n        if (statusFilter === \"active\") {\n            return data?.isActive === true;\n        }\n        if (statusFilter === \"inActive\") {\n            return data?.isActive === false;\n        }\n        if (statusFilter === \"all\") {\n            return data\n        }\n        else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Item Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Item Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Item Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addItemsAction(name, unitId, categoryId, isActive, minPrice, maxPrice))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editItemsAction(id, name, unitId, categoryId, isActive, minPrice, maxPrice))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteItemsAction(id))\n    }\n\n    const updateHandler = (item) => {\n        setId(item?._id)\n        setName(item?.name)\n        setMinPrice(item?.minPrice)\n        setMaxPrice(item?.maxPrice)\n        setUnitId(item?.unitId)\n        setCategoryId(item?.categoryId)\n        setIsActive(item.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Items</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select className=\"form-control bg-light rounded\" onChange={(e) => setStatusFilter(e.target.value)} id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Status</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group\">\n                                                        <select onChange={(e) => setCategoryFilter(e.target.value)} className=\"form-control  bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Category</option>\n                                                            <option value=\"all\">All</option>\n                                                            {categoryList?.map(category =>\n                                                                <option value={category?.name}>{category?.name}</option>\n                                                            )}\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group\">\n                                                        <select onChange={(e) => setUnitFilter(e.target.value)} className=\"form-control  bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Unit</option>\n                                                            <option value=\"all\">All</option>\n                                                            {unitList?.map(unit =>\n                                                                <option value={unit?.name}>{unit?.name}</option>\n                                                            )}\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {itemList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Min Price</th>\n                                                            <th scope=\"col\">Max Price</th>\n                                                            <th scope=\"col\">Unit</th>\n                                                            <th scope=\"col\">Category</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        {selectItems?.map(item =>\n                                                            <>\n                                                                <tr>\n                                                                    <th scope=\"row\">{serNo += 1}</th>\n                                                                    <td>{item?.name}</td>\n                                                                    <td>{item?.minPrice}</td>\n                                                                    <td>{item?.maxPrice}</td>\n                                                                    <td>{item?.unit}</td>\n                                                                    <td>{item?.category}</td>\n                                                                    <td>\n                                                                        <span class={item?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {item?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                    </td>\n                                                                    <td>\n                                                                        <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(item)} data-target={\"#edititems\" + item?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                        <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this item?')) deleteHandler(item?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                        <Link to={'/regulate/' + item?._id} title=\"Regulate\">\n                                                                            <i className=\"fa fa-eye text-success  ml-2\" style={{ cursor: \"pointer\" }} ></i>\n                                                                        </Link>\n                                                                        {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} title=\"active\"></i> */}\n                                                                    </td>\n                                                                </tr>\n\n\n                                                                {/* edit model */}\n\n                                                                <div className=\"modal fade\" id={\"edititems\" + item?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                        <div className=\"modal-content\">\n                                                                            <div className=\"modal-header text-center\">\n                                                                                <div className='modal-title w-100 '>\n                                                                                    <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                    <h4 className=\"text-muted\">Edit Item</h4>\n                                                                                </div>\n\n                                                                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                    <span aria-hidden=\"true\">&times;</span>\n                                                                                </button>\n                                                                            </div>\n\n                                                                            {editLoading &&\n                                                                                <div className=\"text-center\">\n                                                                                    <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                        <span className=\"sr-only\">Loading...</span>\n                                                                                    </div>\n                                                                                </div>}\n                                                                            {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n                                                                            <div className=\"modal-body\">\n                                                                                <form onSubmit={submitUpdHandler}>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Name\" />\n                                                                                    </div>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"number\" value={minPrice} onChange={(e) => setMinPrice(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Min Price\" />\n                                                                                    </div>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"number\" value={maxPrice} onChange={(e) => setMaxPrice(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Max Price\" />\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group\">\n                                                                                        <select value={unitId} onChange={(e) => setUnitId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\">\n                                                                                            <option value=\"\" disabled selected>Unit</option>\n                                                                                            {unitList?.map(unit =>\n                                                                                                <> {unit.isActive === true && <option value={unit?._id}>{unit?.name}</option>}</>\n                                                                                            )}\n\n                                                                                        </select>\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group\">\n                                                                                        <select value={categoryId} onChange={(e) => setCategoryId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\">\n                                                                                            <option value=\"\" disabled selected>Category</option>\n                                                                                            {categoryList?.map(category =>\n                                                                                                <> {category.isActive === true && <option value={category?._id}>{category?.name}</option>}</>\n                                                                                            )}\n                                                                                        </select>\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group \">\n                                                                                        <label className=\"checkbox checkbox-primary\">\n                                                                                            <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={item?.isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                                            <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                    </div>\n\n                                                                                    <div>\n                                                                                        <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Item</button>\n                                                                                    </div>\n\n                                                                                </form>\n                                                                            </div>\n\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </>\n                                                        )}\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Item</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Item Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Name\" required />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"number\" onChange={(e) => setMinPrice(e.target.value)} value={minPrice} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Min Price\" required />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"number\" onChange={(e) => setMaxPrice(e.target.value)} value={maxPrice} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Max Price\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <select onChange={(e) => setUnitId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\" required>\n                                                                <option value=\"\" disabled selected>Unit</option>\n                                                                {unitList?.map(unit =>\n                                                                    <> {unit.isActive === true && <option value={unit?._id}>{unit?.name}</option>}</>\n                                                                )}\n                                                            </select>\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <select onChange={(e) => setCategoryId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\" required>\n                                                                <option value=\"\" disabled selected>Category</option>\n                                                                {categoryList.map(category =>\n                                                                    <> {category.isActive === true && <option value={category?._id}>{category?.name}</option>}</>\n                                                                )}\n                                                            </select>\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Item</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default ItemsScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\unit.js",["406","407","408","409"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { addUnitAction, deleteUnitAction, editUnirAction, listUnitAction } from \"../action/unit\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\n\nconst UnitScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const unitAddData = useSelector(state => state.unitAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = unitAddData;\n\n    const unitDeleteData = useSelector(state => state.unitDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = unitDeleteData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList, loading, error } = unitListData;\n\n    const unitEditData = useSelector(state => state.unitEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = unitEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/units') : props.history.push('/signin');\n        dispatch(listUnitAction())\n    }, [userInfo])\n\n    var selectUnit = unitList?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Unit Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Unit Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Unit Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addUnitAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editUnirAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteUnitAction(id))\n    }\n\n    const updateHandler = (unit) => {\n        setId(unit?._id)\n        setName(unit?.name)\n        setDescription(unit?.description)\n        setIsActive(unit.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n                < div className=\" m-4\">\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Units</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Status</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {unitList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectUnit?.map(unit =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{unit?.name}</td>\n                                                                        <td>{unit?.description}</td>\n                                                                        <td>\n                                                                            <span class={unit?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {unit?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(unit)} data-target={\"#edititems\" + unit?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this unit?')) deleteHandler(unit?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + unit?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Unit</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                {editLoading &&\n                                                                                    <div className=\"text-center\">\n                                                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                            <span className=\"sr-only\">Loading...</span>\n                                                                                        </div>\n                                                                                    </div>}\n                                                                                {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={unit?.isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Unit</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Unit</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Unit Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} value={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Unit</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default UnitScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Dashboard.js",["410","411","412","413","414","415","416","417","418"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { listItemsAction } from \"../action/items\";\nimport { listCategoryAction } from \"../action/category\";\nimport { listUnitAction } from \"../action/unit\";\nimport { listAreaAction } from \"../action/area\";\nimport RegulareChart from \"./chart/regulateChart\";\nimport ItemBarChart from \"./chart/itemBarChart\";\nconst DashboardScreen = (props) => {\n    const dispatch = useDispatch()\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const itemListData = useSelector(state => state.itemListData);\n    const { itemList, loading: listItemLoading, error: listItemError } = itemListData;\n\n    const areaListData = useSelector(state => state.areaListData);\n    const { areaList, loading: listAreaLoading, error: listAreaError } = areaListData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList, loading: listCategoryLoading, error: listCategoryError } = categoryListData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList, loading: listUnitLoading, error: listUnitError } = unitListData;\n    useEffect(() => {\n        userInfo ? props.history.push('/') : props.history.push('/signin')\n        dispatch(listItemsAction())\n        dispatch(listCategoryAction())\n        dispatch(listUnitAction())\n        dispatch(listAreaAction())\n\n    }, [userInfo])\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {listItemLoading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div> :\n                        <>\n                            {listItemError ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n\n                                    <div className=\"row d-flex \">\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#ff9f00', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart orange\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{itemList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: \"#ff9f00\" }}>{itemList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Items</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#4CC790', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart green\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{areaList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: \"#4CC790\" }}>{areaList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Areas</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart \" style={{ borderBottomColor: '#3c9ee5' }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart blue\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{categoryList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: '#3c9ee5' }}>{categoryList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Categories</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#F75A5F', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart red\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{unitList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: '#F75A5F' }}>{unitList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Units</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-sm\">\n                                            <div className=\"shadow bg-white rounded p-2\">\n                                                <ItemBarChart />\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                </>\n                            }\n\n                        </>\n                    }\n\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default DashboardScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\category.js",["419","420","421","422"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { addCategoryAction, deleteCategoryAction, editCategoryAction, listCategoryAction } from \"../action/category\";\n\nconst CategoryScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const categoryAddData = useSelector(state => state.categoryAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = categoryAddData;\n\n    const categoryDeleteData = useSelector(state => state.categoryDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = categoryDeleteData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList, loading, error } = categoryListData;\n\n    const categoryEditData = useSelector(state => state.categoryEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = categoryEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/category') : props.history.push('/signin');\n        dispatch(listCategoryAction())\n    }, [userInfo])\n\n    var selectCategory = categoryList?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Category Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Category Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast(\"Category Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addCategoryAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editCategoryAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteCategoryAction(id))\n    }\n\n    const updateHandler = (category) => {\n        setId(category?._id)\n        setName(category?.name)\n        setDescription(category?.description)\n        setIsActive(category.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Categories</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option defaultValue=\"\" disabled selected>Status</option>\n                                                            <option defaultValue=\"all\">All</option>\n                                                            <option defaultValue=\"active\">Active</option>\n                                                            <option defaultValue=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {categoryList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectCategory?.map(category =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{category?.name}</td>\n                                                                        <td>{category?.description}</td>\n                                                                        <td>\n                                                                            <span className={category?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {category?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(category)} data-target={\"#edititems\" + category?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this category?')) deleteHandler(category?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\" ></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + category?._id} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Category</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                {editLoading &&\n                                                                                    <div className=\"text-center\">\n                                                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                            <span className=\"sr-only\">Loading...</span>\n                                                                                        </div>\n                                                                                    </div>}\n                                                                                {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" defaultValue={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" defaultValue={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={category?.isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Category</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Category</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Category Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} defaultValue={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} defaultValue={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Category</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default CategoryScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\settings.js",["423"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport { editPasswordAction } from \"../action/auth\";\n\nconst SettingScreen = (props) => {\n    const dispatch = useDispatch()\n    const [currentPassword, setCurrentPassword] = useState(\"\")\n    const [matchPassword, setMatchPassword] = useState(\"\")\n    const [updatePassword, setUpdatePassword] = useState(\"\")\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const passwordEditData = useSelector(state => state.passwordEditData);\n    const { loading, error, success } = passwordEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/settings') : props.history.push('/signin');\n    }, [userInfo])\n\n    if (success) {\n        toast.success(\"Password Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(editPasswordAction(currentPassword, updatePassword))\n    }\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n                    <ToastContainer />\n                    <div className='cart shadow bg-white rounded '>\n                        <div className='border border-top-0 border-left-0 border-right-0 '>\n                            <h5 className=\"text-muted pt-4 pb-4 pl-4\">Change Password</h5>\n                        </div>\n\n                        <form onSubmit={submitHandler} className=' p-3 mt-3'>\n                            {loading &&\n                                <div className=\"text-center\">\n                                    <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                        <span className=\"sr-only\">Loading...</span>\n                                    </div>\n                                </div>\n                            }\n\n                            {error &&\n                                <div className=' text-center'>\n                                    <p className=\"text-danger\">The current password is not match with old password.</p>\n                                </div>\n                            }\n\n                            <div className=\"form-group\">\n                                <input type=\"password\" onChange={(e) => setCurrentPassword(e.target.value)} value={currentPassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Current Password\" required />\n                            </div>\n                            <div className=\"form-group py-3\">\n                                <input type=\"password\" onChange={(e) => setUpdatePassword(e.target.value)} value={updatePassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password\" required />\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" onChange={(e) => setMatchPassword(e.target.value)} value={matchPassword} className={matchPassword !== updatePassword ? \"form-control is-invalid\" : \"form-control\"} id=\"validationServer03\" placeholder=\"City\" required />\n                                {matchPassword !== updatePassword &&\n                                    <div className=\"invalid-feedback\">\n                                        Please enter the same value again.\n                                    </div>\n                                }\n                            </div>\n                            <div className='pt-4'>\n                                <button type=\"submit\" className=\"btn btn-primary mr-3\" style={{ width: '100px' }} disabled={matchPassword !== updatePassword}>Save</button>\n                                <button className=\"btn btn-secondary\" onClick={() => props.history.push('/')} style={{ width: '100px' }}>Cancel</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default SettingScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\area.js",["424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport $ from 'jquery'\nimport { addAreaAction, deleteAreaAction, editAreaAction, listAreaAction } from \"../action/area\";\n\nconst AreaScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const areaAddData = useSelector(state => state.areaAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = areaAddData;\n\n    const areaDeleteData = useSelector(state => state.areaDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = areaDeleteData;\n\n    const areaListData = useSelector(state => state.areaListData);\n    const { areaList, loading, error } = areaListData;\n\n    const areaEditData = useSelector(state => state.areaEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = areaEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/area') : props.history.push('/signin');\n        dispatch(listAreaAction())\n    }, [userInfo])\n\n    var selectarea = areaList ?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data ?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data ?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Area Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Area Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Area Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addAreaAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editAreaAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteAreaAction(id))\n    }\n\n    const updateHandler = (area) => {\n        setId(area ?._id)\n        setName(area ?.name)\n        setDescription(area ?.description)\n        setIsActive(area ?.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Area</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Search</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {areaList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectarea ?.map(area =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{area ?.name}</td>\n                                                                        <td>{area ?.description}</td>\n                                                                        <td>\n                                                                            <span class={area ?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {area ?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(area)} data-target={\"#edititems\" + area ?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this area?')) deleteHandler(area ?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + area ?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Area</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={area ?.isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Area</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add area</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">area Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} value={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Area</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                    <ToastContainer />\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default AreaScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\regulate.js",["446","447","448","449","450","451","452","453","454"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { listRegulateItemsAction } from \"../action/regulateItems\";\n\nconst RegulateScreen = (props) => {\n    const dispatch = useDispatch()\n    let serNo = 0   \n    const itemId = props.match.params.id\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const regulateItemListData = useSelector(state => state.regulateItemListData);\n    const { regulateItemList, loading, error } = regulateItemListData;\n    \n    useEffect(() => {\n        userInfo ? props.history.push('/regulate/'+itemId) : props.history.push('/signin');\n        dispatch(listRegulateItemsAction(itemId))\n\n    }, [userInfo])\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <div className='cart shadow bg-white rounded p-3 '>\n                                    <div>\n                                        <h5 className=\"text-muted\">Regulate Items</h5>\n                                    </div>\n\n                                    {/* table */}\n                                    <div className='table-responsive '>\n                                        <table className=\"table table-bordered table table-hover\">\n                                            <thead>\n                                                <tr className='table-active'>\n                                                    <th scope=\"col\">#</th>\n                                                    <th scope=\"col\">Date</th>\n                                                    <th scope=\"col\">Min Price</th>\n                                                    <th scope=\"col\">Max Price</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody id=\"myTable\">\n                                                {regulateItemList ?.map(item =>\n                                                    <tr>\n                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                        <td>{new Date(item ?.createdAt).getDate() + '-' + new Date(item ?.createdAt).getMonth() + '-' + new Date(item ?.createdAt).getFullYear()}</td>\n                                                        <td>{item ?.minPrice}</td>\n                                                        <td>{item ?.maxPrice}</td>\n                                                    </tr>\n                                                )}\n                                            </tbody>\n                                        </table>\n                                    </div>\n\n                                </div>\n\n                            }\n                        </>\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default RegulateScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\auth\\singin.js",["455"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { signin } from '../../action/auth'\nimport Logo from '../assets/Logo.jpeg'\nimport '../style/Login.css'\nimport $ from 'jquery'\nimport 'jquery-validation'\n\nconst SigninScreen = (props) => {\n\tconst dispatch = useDispatch()\n\tconst [email, setEmail] = useState();\n\tconst [password, setPassword] = useState();\n\tconst userSignin = useSelector(state => state.userSignin);\n\tconst { loading, userInfo, error } = userSignin;\n\n\tuseEffect(() => {\n\t\tif (userInfo) {\n      window.location.href = \"/\"\n      // window.location.reload()\n    }\t\t\n\t}, [userInfo])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(signin(email, password));\n\t}\n\n\treturn (\n\n\t\t<div className='login'>\n\n\t\t\t<div className=\"cover\"></div>\n\t\t\t<div style={{ maxWidth: \"430px\", margin: \"100px auto 50px\" }}>\n\t\t\t\t<div className=\"text-center mb-5\">\n\t\t\t\t\t<span className=\"auth-head-icon\"><i className=\"fa fa-user\"></i></span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ibox login-box\">\n\t\t\t\t\t<form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\n\t\t\t\t\t\t<h4 className=\"font-strong text-center py-4 \">LOG IN</h4>\n\n\t\t\t\t\t\t{loading &&\n\t\t\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t\t\t<div class=\"spinner-border text-primary\" role=\"status\">\n\t\t\t\t\t\t\t\t\t<span class=\"sr-only\">Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{error && <div className=\"text-danger text-center\">Invaled Username or Password</div>}\n\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setEmail(e.target.value)} value={email} type=\"text\" name=\"email\" placeholder=\"Email\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} value={password} type=\"password\" name=\"password\" placeholder=\"Password\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"flexbox mb-5\">\n\t\t\t\t\t\t\t<label className=\"checkbox checkbox-primary\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"remember\" id=\"remember\" />\n\t\t\t\t\t\t\t\t<span className=\"input-span\"></span> Remember\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<a className=\"color-inherit\" >Forgot password?</a>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div className=\"text-center pb-4\">\n\t\t\t\t\t\t\t<button type='submit' className=\"btn btn-primary btn-rounded btn-block\">LOGIN</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t)\n}\n$(function () {\n\t$('#login-form').validate({\n\t\terrorClass: \"help-block\",\n\n\t\trules: {\n\t\t\temail: {\n\t\t\t\trequired: true,\n\t\t\t\temail: true\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\trequired: true\n\t\t\t}\n\t\t},\n\t\thighlight: function (e) {\n\t\t\t$(e).closest(\".form-group\").addClass(\"has-error\")\n\t\t},\n\t\tunhighlight: function (e) {\n\t\t\t$(e).closest(\".form-group\").removeClass(\"has-error\")\n\t\t},\n\t});\n});\nexport default SigninScreen\n\n\n","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\regulateItems.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Navbar.js",["456","457","458","459","460","461"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\nimport Cookie from 'js-cookie'\nimport ProfileImg from './assets/profile.png'\nimport 'bootstrap/js/dist/tab';\nimport logo from './assets/Logo.jpeg'\nimport './style/Navbar.css'\nimport './style/Sidebar.css'\n\nconst Navbar = () => {\n    const history = useHistory()\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n    const [sidebarOpen, setsidebarOpen] = useState(false);\n    const openSidebar = () => {\n        setsidebarOpen(true);\n    };\n    const closeSidebar = () => {\n        setsidebarOpen(false);\n    };\n\n    const logoutHandler = () => {\n        Cookie.remove(\"userInfo\");\n        history.push('/signin')\n        window.location.reload()\n    };\n\n\n    return (\n        <>\n\n            <nav className=\"navbar shadow\">\n                <div className=\"nav_icon\" onClick={() => openSidebar()}>\n                    <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"navbar__left\">\n                    {/* <a href=\"#\">Subscribers</a>\n                <a href=\"#\">Video Management</a>\n                <a className=\"active_link\" href=\"#\">\n                Admin\n                </a> */}\n                </div>\n                <div className=\"navbar__right\">\n                    {/* <a href=\"#\">\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </a>\n                <a href=\"#\">\n                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\n                </a> */}\n                    <div className='chip'>\n                        <span className=\"dropdown\">\n                            <img src={ProfileImg} style={{ cursor: 'pointer' }} className=\"rounded-circle dropdown-toggle navImg\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\n                            <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                                <div style={{ width: '200px', margin: 'auto' }}>\n                                    <img src={ProfileImg} className=\"card-img-top rounded-circle\" style={{ width: '100px', display: \"block\", margin: 'auto' }} alt=\"Card image cap\" />\n                                    <h5 className=\"card-title text-center\">{userInfo?.data?.name}</h5>\n                                    <div className=\"card-body text-center\">\n                                        {/* <Link to='/profile' className=\" btn btn-info shadow rounded mr-2\"> <i className=\"fas fa-user\"></i></Link> */}\n                                        <button onClick={() => { if (window.confirm('Are you sure you want to log out?')) { logoutHandler() }; }} className=\" btn btn-danger shadow rounded\"> <i className=\"fas fa-sign-out-alt\"></i></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </span>\n                        <span className=\"text-dark mx-2 h6\">{userInfo?.data?.name}</span>\n                    </div>\n                </div>\n            </nav>\n\n            <div className={sidebarOpen ? \"sidebar_responsive\" : \"\"} id=\"sidebar\">\n                <div className=\"sidebar__title\">\n                    <div className=\"sidebar__img\">\n                        {/* <Link to='/'>\n                    <img src={logo} alt=\"logo\" />\n\n                    </Link> */}\n                        <h4 className=\"title\">ADMIN</h4>\n                    </div>\n                    <i\n                        onClick={() => closeSidebar()}\n                        className=\"fa fa-times\"\n                        id=\"sidebarIcon\"\n                        aria-hidden=\"true\"\n                    ></i>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/' activeClassName='text-success'>\n                            <i className=\"fa fa-home icon\"> </i>\n                            <p>Dashboard</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                {/* <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/regulate' activeClassName='text-success'>\n                            <i className=\"fa fa-save icon\"> </i>\n                            <p>Regulate Items</p>\n                        </NavLink>\n                    </div>\n                </div> */}\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/items' activeClassName='text-success'>\n                            <i className=\"fa fa-columns icon\"> </i>\n                            <p>Items</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/category' activeClassName='text-success'>\n                            <i className=\"fa fa-align-justify icon\"> </i>\n                            <p>Categories</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/units' activeClassName='text-success'>\n                            <i className=\"fa fa-grip-lines icon\"> </i>\n                            <p>Units</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/area' activeClassName='text-success'>\n                            <i className=\"fa fa-compass icon\"> </i>\n                            <p>Area</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/complaint' activeClassName='text-success'>\n                            <i className=\"fa fa-comment icon\"> </i>\n                            <p>Complaints</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/settings' activeClassName='text-success'>\n                            <i className=\"fa fa-cog icon\"> </i>\n                            <p>Settings</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n            </div>\n\n        </>\n    )\n}\n\nexport default Navbar;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\regulateItems.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\regulateItem.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\regulateChart.js",["462"],"import react from 'react'\r\nimport { Chart } from \"react-google-charts\";\r\n\r\n\r\nconst RegulareChart = () => {\r\n\r\n    return (\r\n        <>\r\n        <h4 className='text-center pt-2'>Rates Analytics </h4>\r\n        <Chart\r\n        \r\n        chartType=\"AreaChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={[\r\n          ['Style', 'Fruit', 'Vagetible', 'Poultry'],\r\n          ['Sun', 92, 96, 2],\r\n          ['Mon', 86, 80, 32],\r\n          ['Tue', 76, 70, 23],\r\n          ['Wed', 56, 60, 34],\r\n          ['Thu', 59, 50, 63],\r\n          ['Fri', 72, 22, 60],\r\n          ['Sat', 80, 17, 40],\r\n        ]}\r\n        options={{\r\n          isStacked: false,\r\n          height: 300,\r\n          legend: { position: 'top', maxLines: 3 },\r\n          vAxis: {\r\n            minValue: 0,\r\n          },\r\n          hAxis: {\r\n            title: 'Date'\r\n          },\r\n        }}\r\n        rootProps={{ 'data-testid': '2' }}\r\n      /> \r\n      </>      \r\n    )\r\n}\r\n\r\nexport default RegulareChart","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\itemBarChart.js",["463","464","465","466","467","468","469","470","471","472","473","474","475","476"],"import react, { useState } from 'react'\r\nimport { Chart } from \"react-google-charts\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nconst ItemBarChart = (props) => {\r\n  const [chartSelect, setcChartSelect] = useState(1)\r\n\r\n  const itemListData = useSelector(state => state.itemListData);\r\n  const { itemList, loading: listItemLoading, error: listItemError } = itemListData;\r\n\r\n  const getFruits = () => {\r\n    var data = []\r\n    data.push(['Item', \"Max Price\", \"Min Price\"])\r\n\r\n    var fruitData = itemList.filter(function (item) {\r\n      return item ?.category === 'fruit' || item ?.category === 'fruits' \r\n    })\r\n    fruitData.map(item =>\r\n      data.push([item.name, item ?.maxPrice, item ?.minPrice])\r\n    )\r\n    return data\r\n  }\r\n\r\n  const getVagetable = () => {\r\n    var data = []\r\n    data.push(['Item', \"Max Price\", \"Min Price\"])\r\n\r\n    var vagetableData = itemList.filter(function (item) {\r\n      return item ?.category === 'vegetable' || item ?.category === 'vegetables' ||  item ?.category === 'vagetable' || item ?.category === 'vagetables'\r\n    })\r\n    vagetableData.map(item =>\r\n      data.push([item.name, item ?.maxPrice, item ?.minPrice])\r\n    )\r\n    return data\r\n  }\r\n\r\n  function chartData() {\r\n    if (chartSelect === 1) {\r\n      return getFruits()\r\n    }\r\n    if (chartSelect === 2) {\r\n      return getVagetable()\r\n    }\r\n    else {\r\n      return getFruits()\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='d-flex justify-content-between'>\r\n        <div className=''>\r\n          <h3 className='text-center text-muted '>Rates Analytics</h3>\r\n        </div>\r\n\r\n        <div className=\"dropdown d-flex justify-content-end mt-2\">\r\n\r\n          <button className=\"btn btn-primary mx-1 mb-1\" onClick={() => setcChartSelect(1)} >Fruits</button>\r\n          <button className=\"btn btn-success mx-1 mb-1\" onClick={() => setcChartSelect(2)}>Vegetables</button>\r\n        </div>\r\n      </div>\r\n      <Chart\r\n        // width={'500px'}\r\n        // height={'300px'}\r\n\r\n        chartType=\"ComboChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={\r\n          chartData()\r\n        }\r\n        options={{\r\n          // colors: ['#FB7A21'],\r\n          // backgroundColor: '#2F4F4F',\r\n          chart: {\r\n            title: 'Company Performance',\r\n            subtitle: 'Sales, Expenses, and Profit: 2014-2017',\r\n          },\r\n          legend: { position: 'none' },\r\n          title: \"weeklyTitle\",\r\n          titleTextStyle: { color: '#FFF' },\r\n          // vAxis: { title: 'Percentage', titleTextStyle: { color: '#FFF' }, textStyle: { color: '#FFF' } },\r\n          // hAxis: { title: 'Month', fontSize: 28, titleTextStyle: { color: '#FFF' }, textStyle: { color: '#FFF' } },\r\n          seriesType: 'bars',\r\n          series: { 5: { type: 'line' } },\r\n        }}\r\n        rootProps={{ 'data-testid': '1' }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ItemBarChart","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\complaint.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\complaint.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\complaint.js",["477","478","479","480","481"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport $ from 'jquery'\nimport { listComplaintAction } from \"../action/complaint\";\nimport NotFound from './assets/notfound.png'\n\nconst ComplaintScreen = (props) => {\n    const dispatch = useDispatch()\n    const [loaded, setLoaded] = useState(false)\n    let serNo = 0\n    function showImage() {\n        return setLoaded(true)\n    }\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const complaintListData = useSelector(state => state.complaintListData);\n    const { complaintList, loading, error } = complaintListData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/complaint') : props.history.push('/signin');\n        dispatch(listComplaintAction())\n    }, [userInfo])\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Area</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {complaintList.length === 0 ? <h5 className=\"text-muted text-center\">Complaint Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Contact</th>\n                                                            <th scope=\"col\">Details</th>\n                                                            <th scope=\"col\">image</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {complaintList?.map(complaint =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{complaint?.name}</td>\n                                                                        <td>{complaint?.contactNo}</td>\n                                                                        <td>{complaint?.detail}</td>\n                                                                        <td>\n                                                                            <img src={NotFound} width=\"100\" height=\"50\" style={loaded ? { display: \"none\" } : {}} />\n\n                                                                            <img src={'http://localhost:5000/' + complaint.image} width=\"100\" height=\"50\" onLoad={showImage} style={loaded ? {} : { display: \"none\" }} />\n\n                                                                        </td>\n\n                                                                    </tr>\n\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                    <ToastContainer />\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default ComplaintScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\complaint.js",[],"G:\\expert system\\server\\client\\src\\index.js",[],["482","483"],"G:\\expert system\\server\\client\\src\\App.js",["484","485","486","487"],"import './App.css';\nimport { BrowserRouter, Route, Router, Switch, useLocation } from 'react-router-dom'\nimport StartScreen from './screen/StartScreen';\nimport DetailScreen from './screen/DetailScreen';\nimport ContactScreen from './screen/Contact';\nimport SigninScreen from './screen/auth/singin';\nimport SignupScreen from './screen/auth/signup';\nimport DashboardScreen from './screen/admin/Dashboard';\nimport AdminDetailScreen from './screen/admin/DetailScreen';\nimport AdminUserScreen from './screen/admin/user';\nimport AdminMessageScreen from './screen/admin/Message';\nimport SettingScreen from './screen/admin/Setting';\nimport ClientSigninScreen from './screen/Signin';\nimport ClientSignupScreen from './screen/signup';\nimport ClientForgotPasswordScreen from './screen/forgotPassord';\nimport ClientNewPasswordScreen from './screen/newPassword';\nimport ProfileScreen from './screen/Profile';\nimport UplaodFileScreen from './screen/admin/UplaodFile';\nimport RequestPremiumScreen from './screen/admin/RequestPremium';\nimport VerifiedScreen from './screen/verified';\n\nfunction App() {\n  var location = useLocation();\n  return (\n    <div className=\"\">\n      <>\n        <Route exact path='/' component={StartScreen} />\n        <Route exact path='/detail' component={DetailScreen} />\n        <Route exact path='/contact' component={ContactScreen} />\n        <Route exact path='/profile' component={ProfileScreen} />\n        <Route exact path='/signin' component={ClientSigninScreen} />\n        <Route exact path='/signup' component={ClientSignupScreen} />\n        <Route exact path='/reset-password' component={ClientForgotPasswordScreen} />\n        <Route exact path='/reset/:token' component={ClientNewPasswordScreen} />\n        <Route exact path='/account/confirm/:token' component={VerifiedScreen} />\n      </>\n      <div>\n        <Route exact path='/admin/signin' component={SigninScreen} />\n        <Route exact path='/admin/add-user' component={SignupScreen} />\n        <Route exact path='/admin/dashboard' component={DashboardScreen} />\n        <Route exact path='/admin/product-association' component={UplaodFileScreen} />\n        <Route exact path='/admin/detail' component={AdminDetailScreen} />\n        <Route exact path='/admin/user' component={AdminUserScreen} />\n        <Route exact path='/admin/request-premium' component={RequestPremiumScreen} />\n        <Route exact path='/admin/message' component={AdminMessageScreen} />\n        <Route exact path='/admin/settings' component={SettingScreen} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","G:\\expert system\\server\\client\\src\\reportWebVitals.js",[],"G:\\expert system\\server\\client\\src\\store\\Store.js",[],"G:\\expert system\\server\\client\\src\\screen\\auth\\singin.js",["488","489","490"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { signin } from '../../action/auth'\nimport Logo from '../assets/Logo.png'\nimport '../style/Login.css'\nimport $ from 'jquery'\nimport 'jquery-validation'\nimport { adminSigninAction } from '../../action/admin/auth'\n\nconst SigninScreen = (props) => {\n\tconst dispatch = useDispatch()\n\tconst [email, setEmail] = useState();\n\tconst [password, setPassword] = useState();\n\n\tconst adminSignin = useSelector(state => state.adminSignin);\n\tconst { loading, success, adminInfo, error } = adminSignin;\n\n\tuseEffect(() => {\n\t\tif (adminInfo) {\n\t\t\twindow.location.href = \"/admin/dashboard\"\n\t\t}\n\t}, [adminInfo])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(adminSigninAction(email, password));\n\t}\n\n\treturn (\n\n\t\t<div className='login'>\n\n\t\t\t<div className=\"cover\"></div>\n\t\t\t<div style={{ maxWidth: \"430px\", margin: \"100px auto 50px\" }}>\n\t\t\t\t<div className=\"text-center mb-5\">\n\t\t\t\t\t<span className=\"auth-head-icon\"><i className=\"fa fa-user\"></i></span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ibox login-box\">\n\t\t\t\t\t<form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\n\t\t\t\t\t\t<h4 className=\"font-strong text-center py-4 \">LOG IN</h4>\n\n\t\t\t\t\t\t{loading &&\n\t\t\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t\t\t<div class=\"spinner-border text-primary\" role=\"status\">\n\t\t\t\t\t\t\t\t\t<span class=\"sr-only\">Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{success && <div className=\"text-primary text-center h6\">{adminInfo.message}</div>}\n\t\t\t\t\t\t{error && <div className=\"text-danger text-center h6\">{error.message}</div>}\n\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setEmail(e.target.value)} value={email} type=\"text\" name=\"email\" placeholder=\"Email\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} value={password} type=\"password\" name=\"password\" placeholder=\"Password\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"flexbox mb-5\">\n\t\t\t\t\t\t\t<label className=\"checkbox checkbox-primary\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"remember\" id=\"remember\" />\n\t\t\t\t\t\t\t\t<span className=\"input-span\"></span> Remember\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<a className=\"color-inherit\" >Forgot password?</a>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div className=\"text-center pb-4\">\n\t\t\t\t\t\t\t<button type='submit' className=\"btn btn-success btn-rounded btn-block\">LOGIN</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default SigninScreen\n\n\n","G:\\expert system\\server\\client\\src\\reducer\\auth.js",[],"G:\\expert system\\server\\client\\src\\action\\auth.js",[],"G:\\expert system\\server\\client\\src\\screen\\chart\\itemBarChart.js",["491","492","493","494","495","496","497","498","499","500","501","502","503","504"],["505","506"],"G:\\expert system\\server\\client\\src\\screen\\chart\\regulateChart.js",["507"],"G:\\expert system\\server\\client\\src\\contant\\auth.js",[],"G:\\expert system\\server\\client\\src\\screen\\StartScreen.js",["508","509","510","511","512","513","514"],"G:\\expert system\\server\\client\\src\\screen\\Navbar.js",["515","516","517","518","519","520","521"],"G:\\expert system\\server\\client\\src\\screen\\actionButton.js",["522"],"G:\\expert system\\server\\client\\src\\screen\\ActionButton.js",["523"],"import React from 'react'\r\nimport './style/actionButton.css'\r\n\r\nconst ActionButton = () => {\r\n    return (\r\n        <>\r\n            <div className=\"zoom\">\r\n                <a target='_blank' href=\"https://wa.me/+923088887580\" className=\"zoom-btn-large\" id=\"zoomBtn\" >\r\n                    <i className=\"fa fa-whatsapp fa-4x\"></i>\r\n                </a>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionButton",["524","525"],"G:\\expert system\\server\\client\\src\\screen\\Contact.js",["526","527"],"import React, { useEffect, useState } from 'react';\r\nimport Navbar from './Navbar';\r\nimport contactImg from './assets/contact.png'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { messageRequest } from '../action/message';\r\n\r\nconst ContactScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [message, setMessage] = useState(\"\")\r\n    const [file, setFile] = useState(\"\")\r\n    var formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('message', message);\r\n    \r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const messageRequestRed = useSelector(state => state.messageRequestRed);\r\n    const { loading, success, messageReq, error } = messageRequestRed;\r\n\r\n    useEffect(() => {\r\n        userInfo ? props.history.push('/contact') : props.history.push('/signin')\r\n    }, [userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(messageRequest(formData))\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"m-4\">\r\n                <div className='cart shadow bg-white rounded p-3 '>\r\n                    <div className=\"row justify-content-around my-3\">\r\n                        <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                            <img width=\"60%\" src={contactImg} />\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-6\">\r\n                            <h3 className='text-muted text-center pb-3'>Get in touch </h3>\r\n\r\n                            <form onSubmit={submitHandler}>\r\n\r\n                                {loading &&\r\n                                    <div class=\"text-center\">\r\n                                        <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                            <span class=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                                {success && <div className=\"text-primary text-center h6\">{messageReq.message}</div>}\r\n\r\n\r\n                                <div className=\"form-group custom-file mb-3\">\r\n                                    <input onChange={(e) => setFile(e.target.files[0])} className=\"form-control-file rounded border-top-0 border-left-0 border-right-0 bg-light rounded\" type=\"file\" id=\"customFile\" />\r\n                                    {/* <input onChange={(e) => setFile(e.target.files[0])} type=\"file\" className=\"custom-file-input \" id=\"customFile\"  />\r\n                                    <label  className=\"form-control rounded border-top-0 border-left-0 border-right-0 custom-file-label bg-light rounded\" for=\"customFile\">Choose file (Optional) </label> */}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <textarea onChange={(e) => setMessage(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0 bg-light rounded\" id=\"exampleFormControlTextarea1\" placeholder=\"Message\" rows=\"3\" required />\r\n                                </div>\r\n\r\n                                <div className=\"text-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-success  text-center\">\r\n                                        Send <i className=\"fas fa-arrow-right\">  </i>\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactScreen","G:\\expert system\\server\\client\\src\\screen\\DetailScreen.js",["528"],"import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport Navbar from './Navbar';\r\nimport Chart from \"react-google-charts\";\r\nimport FrequentChartScreen from './admin/chart.js/frequectChart';\r\n\r\nconst DetailScreen = (props) => {\r\n    let serNo = 0\r\n    const [visibility, setVisibility] = useState(true)\r\n\r\n    const frequentItemsets = [\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"MilkPak Full Cream 250ml\"\r\n        ],\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"MilkPak Full Cream 250ml\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Lays French Cheese 20Rs\",\r\n            \"Candy Rs.5\",\r\n            \"Dall Mongi 500g\"\r\n        ],\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"Dall Mongi 500g\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"Dall Mongi 500g\",\r\n            \"MilkPak Full Cream 250ml\"\r\n        ],\r\n        [\r\n            \"Abbasi Salan Masala 200g\",\r\n            \"Dall Mongi 500g\",\r\n            \"MilkPak Full Cream 250ml\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Lays French Cheese 20Rs\",\r\n            \"Lays Yogurt&Herb 20Rs\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Islamabad Tea 950g\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Butter Puff G HR\",\r\n            \"MilkPak Full Cream 250ml\"\r\n        ],\r\n        [\r\n            \"LiptonYellow Label Tea 190g\",\r\n            \"White Sugar\"\r\n        ],\r\n        [\r\n            \"Misk POP-UP \",\r\n            \"Tapal Green Tea Lemon 30Bags\"\r\n        ],\r\n        [\r\n            \"Misk POP-UP \",\r\n            \"Tapal Green Tea Lemon 30Bags\",\r\n            \"White Sugar\"\r\n        ]\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"m-4\">\r\n                <div className='cart shadow bg-white rounded p-3 '>\r\n                    {/* <div>\r\n                    <h5 className=\"text-muted\">Title</h5>\r\n                </div> */}\r\n\r\n                    {/* filter */}\r\n\r\n                    <div className='row justify-content-between'>\r\n                        <form className='col-sm-4'>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control rounded bg-light\" id=\"myInput\" placeholder=\"Search\" />\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"mr-3\">\r\n                            <button type=\"button\" className=\"btn btn-success btn-sm\" >\r\n                                <i className=\"fas fa-download\"> Export </i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n\r\n                        <ul className=\"nav nav-tabs md-tabs nav-justified rounded-lg mb-3\" id=\"myTab\" role=\"tablist\">\r\n                            <li className=\"nav-item waves-effect waves-light\" onClick={() => setVisibility(true)}>\r\n                                <a className=\"nav-link active\" id=\"table-association-tab-md\" data-toggle=\"tab\" href=\"#table-association-md\" role=\"tab\" aria-controls=\"table-association-md\" aria-selected=\"true\">Tablular View <span className=\"badge badge-primary\"> {frequentItemsets?.length} </span></a>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item waves-effect waves-light\" onClick={() => setVisibility(false)}>\r\n                                <a className=\"nav-link\" id=\"graph-association-tab-md\" data-toggle=\"tab\" href=\"#graph-association-md\" role=\"tab\" aria-controls=\"graph-association-md\" aria-selected=\"false\">Graphical View</a>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        {visibility ?\r\n                            <div className='table-responsive '>\r\n                                <table className=\"table table-bordered table table-hover\">\r\n                                    <thead>\r\n                                        <tr className='table-active'>\r\n                                            <th scope=\"col\">S No.</th>\r\n                                            <th scope=\"col\">Association Items</th>\r\n                                            <th scope=\"col\">Order Frequency</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody id=\"myTable\">\r\n                                        {frequentItemsets.map((data, index) =>\r\n                                            <tr>\r\n                                                <th scope=\"row\">{serNo += 1}</th>\r\n                                                <td>{data.join(' -> ')}</td>\r\n                                                <td>{index * 2 + 3}</td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n\r\n                                </table>\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <ul className=\"pagination pagination-sm\">\r\n                                        <li className=\"page-item\"><button className=\"page-link\">Previous</button></li>\r\n                                        <li className=\"page-item px-3 text-muted\">3 of 100</li>\r\n                                        <li className=\"page-item\"><button className=\"page-link\">Next</button></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <FrequentChartScreen frequentItemsets={frequentItemsets} />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DetailScreen","G:\\expert system\\server\\client\\src\\screen\\auth\\signup.js",["529","530","531","532","533","534","535","536"],"G:\\expert system\\server\\client\\src\\screen\\admin\\Navbar.js",["537","538","539","540","541","542","543","544","545","546"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\nimport Cookie from 'js-cookie'\nimport ProfileImg from '../assets/profile.png'\nimport 'bootstrap/js/dist/tab';\nimport logo from '../assets/Logo.png'\nimport '../style/Navbar.css'\nimport '../style/Sidebar.css'\n\nconst Navbar = () => {\n    const history = useHistory()\n    const adminSignin = useSelector(state => state.adminSignin);\n\tconst { loading, success, adminInfo, error } = adminSignin;\n\n    const [sidebarOpen, setsidebarOpen] = useState(false);\nconsole.log(adminInfo);\n    const openSidebar = () => {\n        setsidebarOpen(true);\n    };\n    const closeSidebar = () => {\n        setsidebarOpen(false);\n    };\n\n    const logoutHandler = () => {\n        Cookie.remove(\"adminInfo\");\n        window.location.href='/admin/signin'\n    };\n\n\n    return (\n        <>\n\n            <nav className=\"navbar_main shadow\">\n                <div className=\"nav_icon\" onClick={() => openSidebar()}>\n                    <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"navbar__left\">\n                    {/* <a href=\"#\">Subscribers</a>\n                <a href=\"#\">Video Management</a>\n                <a className=\"active_link\" href=\"#\">\n                Admin\n                </a> */}\n                </div>\n                <div className=\"navbar__right\">\n                    {/* <a href=\"#\">\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </a>\n                <a href=\"#\">\n                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\n                </a> */}\n                    <div className='chip'>\n                        <span className=\"dropdown\">\n                            <img src={ProfileImg} style={{ cursor: 'pointer' }} className=\"rounded-circle dropdown-toggle navImg\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\n                            <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                                <div style={{ width: '200px', margin: 'auto' }}>\n                                    <img src={ProfileImg} className=\"card-img-top rounded-circle\" style={{ width: '100px', display: \"block\", margin: 'auto' }} alt=\"Card image cap\" />\n                                    <h5 className=\"card-title text-center\">{adminInfo?.user?.name || \"User name\"}</h5>\n                                    <div className=\"card-body text-center\">\n                                        {/* <Link to='/profile' className=\" btn btn-info shadow rounded mr-2\"> <i className=\"fas fa-user\"></i></Link> */}\n                                        <button onClick={() => { if (window.confirm('Are you sure you want to log out?')) { logoutHandler() }; }} className=\" btn btn-danger shadow rounded\"> <i className=\"fas fa-sign-out-alt\"></i></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </span>\n                        <span className=\"text-dark mx-2 h6\">{adminInfo?.user?.name || \"User Name\"}</span>\n                    </div>\n                </div>\n            </nav>\n\n            <div className={sidebarOpen ? \"sidebar_responsive\" : \"\"} id=\"sidebar\">\n                <div className=\"sidebar__title\">\n                    <div className=\"sidebar__img\">\n                        {/* <Link to='/'>\n                    <img src={logo} alt=\"logo\" />\n\n                    </Link> */}\n                        <h4 className=\"title\">ADMIN</h4>\n                    </div>\n                    <i\n                        onClick={() => closeSidebar()}\n                        className=\"fa fa-times\"\n                        id=\"sidebarIcon\"\n                        aria-hidden=\"true\"\n                    ></i>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/dashboard' activeClassName='text-success'>\n                            <i className=\"fa fa-home icon\"> </i>\n                            <p>Dashboard</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/product-association' activeClassName='text-success'>\n                            <i className=\"fas fa-file-upload icon\"> </i>\n                            <p>Product Association</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/request-premium' activeClassName='text-success'>\n                            <i className=\"fas fa-crown icon\"> </i>\n                            <p>Request Premium</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/user' activeClassName='text-success'>\n                            <i className=\"fa fa-user icon\"> </i>\n                            <p>User</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/message' activeClassName='text-success'>\n                            <i className=\"fa fa-comment icon\"> </i>\n                            <p>Message</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/admin/settings' activeClassName='text-success'>\n                            <i className=\"fa fa-cog icon\"> </i>\n                            <p>Settings</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n            </div>\n\n        </>\n    )\n}\n\nexport default Navbar;","G:\\expert system\\server\\client\\src\\screen\\admin\\Dashboard.js",["547","548","549"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../App.css';\r\nimport Navbar from \"./Navbar\";\r\nimport '../style/dashboard.css'\r\nimport PremiumChartScreen from \"./chart.js/PremiumChart\";\r\n\r\nconst DashboardScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n\tconst adminSignin = useSelector(state => state.adminSignin);\r\n\tconst {adminInfo } = adminSignin;\r\n\r\n    useEffect(() => {\r\n        adminInfo ? props.history.push('/admin/dashboard') : props.history.push('/admin/signin')\r\n\r\n    },[adminInfo])\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n\r\n            <Navbar />\r\n            <main >\r\n\r\n                < div className=\" m-4\">\r\n\r\n                    <div className=\"row d-flex \">\r\n\r\n                        <div className=\"col-sm mt-2\">\r\n                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#ff9f00', }}>\r\n                                <div>\r\n                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart orange\">\r\n                                        <path className=\"circle-bg\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <path className=\"circle\"\r\n                                            strokeDasharray=\"30, 100\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <text x=\"18\" y=\"20.35\" className=\"percentage\"> 1%</text>\r\n                                    </svg>\r\n                                </div>\r\n                                <div className=\"svg-text\">\r\n                                    <h3 style={{ color: \"#ff9f00\" }}> 1%</h3>\r\n                                    <p className=' text-muted'>Premium Users</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm mt-2\">\r\n                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#4CC790', }}>\r\n                                <div>\r\n                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart green\">\r\n                                        <path className=\"circle-bg\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <path className=\"circle\"\r\n                                            strokeDasharray=\"30, 100\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <text x=\"18\" y=\"20.35\" className=\"percentage\"> 1%</text>\r\n                                    </svg>\r\n                                </div>\r\n                                <div className=\"svg-text\">\r\n                                    <h3 style={{ color: \"#4CC790\" }}> 1%</h3>\r\n                                    <p className=' text-muted'>Total Users</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-sm mt-2\">\r\n                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart \" style={{ borderBottomColor: '#3c9ee5' }}>\r\n                                <div>\r\n                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart blue\">\r\n                                        <path className=\"circle-bg\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <path className=\"circle\"\r\n                                            strokeDasharray=\"30, 100\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <text x=\"18\" y=\"20.35\" className=\"percentage\"> 1%</text>\r\n                                    </svg>\r\n                                </div>\r\n                                <div className=\"svg-text\">\r\n                                    <h3 style={{ color: '#3c9ee5' }}>1%</h3>\r\n                                    <p className=' text-muted'>Total Messages</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-sm mt-2\">\r\n                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#F75A5F', }}>\r\n                                <div>\r\n                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart red\">\r\n                                        <path className=\"circle-bg\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <path className=\"circle\"\r\n                                            strokeDasharray=\"30, 100\"\r\n                                            d=\"M18 2.0845\r\n                                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                        />\r\n                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">1%</text>\r\n                                    </svg>\r\n                                </div>\r\n                                <div className=\"svg-text\">\r\n                                    <h3 style={{ color: '#F75A5F' }}>1%</h3>\r\n                                    <p className=' text-muted'>Premium Requests</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row mt-2\">\r\n                        <div className=\"col-sm\">\r\n                            <div className=\"shadow bg-white rounded p-2\">\r\n                                <PremiumChartScreen />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DashboardScreen;","G:\\expert system\\server\\client\\src\\screen\\admin\\DetailScreen.js",[],"G:\\expert system\\server\\client\\src\\screen\\admin\\user.js",["550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571"],"G:\\expert system\\server\\client\\src\\screen\\admin\\Message.js",[],"G:\\expert system\\server\\client\\src\\screen\\admin\\Setting.js",["572","573","574","575","576"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../App.css';\r\nimport Navbar from \"./Navbar\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport uplaodImg from '../assets/setting.png'\r\n\r\nconst SettingScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [matchPassword, setMatchPassword] = useState(\"\")\r\n    const [updatePassword, setUpdatePassword] = useState(\"\")\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n            <Navbar />\r\n            <main >\r\n\r\n                <div className=\" m-4\">\r\n                    <ToastContainer />\r\n                    <div className='cart shadow bg-white rounded'>\r\n                        <div className='border border-top-0 border-left-0 border-right-0 '>\r\n                            <h5 className=\"text-muted text-center pt-4 pb-4 pl-4\">Change Password</h5>\r\n                        </div>\r\n\r\n                        <div className=\"row justify-content-around my-3\" >\r\n                            <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                                <img width=\"40%\" src={uplaodImg} />\r\n                            </div>\r\n\r\n                            <form className='col-sm-6 py-3'>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setCurrentPassword(e.target.value)} value={currentPassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Current Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group py-3\">\r\n                                    <input type=\"password\" onChange={(e) => setUpdatePassword(e.target.value)} value={updatePassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setMatchPassword(e.target.value)} value={matchPassword} className={matchPassword !== updatePassword ? \"form-control is-invalid\" : \"form-control\"} id=\"validationServer03\" placeholder=\"Confirm New Password\" required />\r\n                                    {matchPassword !== updatePassword &&\r\n                                        <div className=\"invalid-feedback\">\r\n                                            Password not match.\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className='pt-4 text-center'>\r\n                                    <button type=\"submit\" className=\"btn btn-success mr-3\" style={{ width: '100px' }} disabled={matchPassword !== updatePassword}>Save</button>\r\n                                    <button className=\"btn btn-secondary\" onClick={() => props.history.push('/admin/dashboard')} style={{ width: '100px' }}>Cancel</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SettingScreen;","G:\\expert system\\server\\client\\src\\screen\\Signin.js",["577","578","579","580","581"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport $ from 'jquery'\r\nimport 'jquery-validation'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport { signin } from '../action/auth'\r\nimport axios from 'axios'\r\n\r\nconst ClientSigninScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { loading, success, userInfo, error } = userSignin;\r\n\r\n    useEffect(() => {\r\n            userInfo ? window.location.href = \"/\" : props.history.push('/signin')\r\n    }, [userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin(email, password))\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center pb-2 \">Login</h4>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {success && <div className=\"text-primary text-center h6\">{userInfo.message}</div>}\r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" onChange={(e) => setEmail(e.target.value)} type=\"email\" name=\"email\" placeholder=\"Email\" required />\r\n                            </div>\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} type=\"password\" name=\"password\" placeholder=\"Password\" required />\r\n                                <div className=\"float-right\">\r\n                                    <Link to=\"/reset-password\" >Forgot password?</Link>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"text-center pb-4 pt-4\">\r\n                                <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                Not a Member? <Link to=\"/signup\" >Signup</Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientSigninScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\signup.js",["582","583","584"],"G:\\expert system\\server\\client\\src\\screen\\forgotPassord.js",["585","586","587","588","589","590","591"],"import React, { useDebugValue, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport $ from 'jquery'\r\nimport 'jquery-validation'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport e from 'cors'\r\nimport { forgotPassword } from '../action/auth'\r\nconst ClientForgotPasswordScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    const forgotPasswordRed = useSelector(state => state.forgotPasswordRed);\r\n    const { loading, forgotPass, error, success } = forgotPasswordRed\r\n    \r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo} = userSignin;\r\n    \r\n    useEffect(() => {\r\n        userInfo ? props.history.push('/') : props.history.push('/reset-password')\r\n    }, [userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(forgotPassword(email))\r\n    }\r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center\">Reset Password</h4>\r\n                            <p className='text-center'>Enter your email address, we will send you instructions to reset your password </p>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            {success && <div className=\"text-primary text-center h6\">{forgotPass.message}</div>}\r\n\r\n                            <div className=\"form-group mb-4\">\r\n                                <input className=\"form-control form-control-line\" type=\"email\" onChange={(e) => setEmail(e.target.value)} name=\"email\" placeholder=\"Email\" required />\r\n                            </div>\r\n\r\n                            <div className=\"text-center pb-4\">\r\n                                <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ClientForgotPasswordScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\newPassword.js",["592","593","594","595"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style/Login.css'\r\nimport $ from 'jquery'\r\nimport 'jquery-validation'\r\nimport logo from './assets/Logo.png'\r\nimport Navbar from './Navbar'\r\nimport { Link } from 'react-router-dom'\r\nimport { newPassword } from '../action/auth'\r\nconst ClientNewPasswordScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const token = props.match.params.token\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const newPasswordReduser = useSelector(state => state.newPasswordRed)\r\n    const { loading, error, success, newPass } = newPasswordReduser\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(newPassword(password, token))\r\n    }\r\n    \r\n    return (\r\n        <div className=\"clientLogin \">\r\n\r\n            {/* <Navbar /> */}\r\n            <div className=\" \">\r\n                <div className='d-flex align-content-center flex-end justify-content-md-around justify-content-center' style={{ marginTop: \"100px\" }} >\r\n                    <div className='cart shadow bg-white rounded col-sm-4 m-2'>\r\n                        <form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\r\n                            <h4 className=\"font-strong text-center pb-4 \">New Password</h4>\r\n                            {loading &&\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                            {success ?\r\n                                <>\r\n                                    <div className=\"text-primary text-center h6\">{newPass?.message}</div>\r\n                                    <div className='text-center'>\r\n                                        <Link to='/signin' className=\"btn btn-primary btn-sm\" role=\"button\">Continue to login</Link>\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <div className=\"form-group mb-4\">\r\n                                        <input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} type=\"password\" name=\"password\" placeholder=\"New Password\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"text-center pb-4\">\r\n                                        <button type='submit' className=\"btn btn-success btn-rounded btn-block\">Submit</button>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n\r\n\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientNewPasswordScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\Profile.js",["596","597","598","599"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport './../App.css';\r\nimport Navbar from \"./Navbar\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport uplaodImg from './assets/setting.png'\r\nimport { changePassword } from \"../action/auth\";\r\n\r\nconst ProfileScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [matchPassword, setMatchPassword] = useState(\"\")\r\n    const [updatePassword, setUpdatePassword] = useState(\"\")\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo } = userSignin;\r\n\r\n    const changePasswordRed = useSelector(state => state.changePasswordRed);\r\n    const {loading, changePass, success, error } = changePasswordRed;\r\n\r\n    const id = userInfo?.user?._id\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(changePassword(id,currentPassword, updatePassword))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <main >\r\n\r\n                <div className=\" m-4\">\r\n                    <div className='cart shadow bg-white rounded'>\r\n                        <div className='border border-top-0 border-left-0 border-right-0 '>\r\n                            <h5 className=\"text-muted text-center pt-4 pb-4 pl-4\">Change Password</h5>\r\n                        </div>\r\n\r\n                        <div className=\"row justify-content-around my-3\" >\r\n                            <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                                <img width=\"40%\" src={uplaodImg} />\r\n                            </div>\r\n\r\n                            <form onSubmit={submitHandler} className='col-sm-6 py-3'>\r\n                                {loading &&\r\n                                    <div class=\"text-center\">\r\n                                        <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                            <span class=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {error && <div className=\"text-danger text-center h6\">{error.message}</div>}\r\n                                {success && <div className=\"text-primary text-center h6\">{changePass?.message}</div>}\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setCurrentPassword(e.target.value)} value={currentPassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Current Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group py-3\">\r\n                                    <input type=\"password\" onChange={(e) => setUpdatePassword(e.target.value)} value={updatePassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password\" required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" onChange={(e) => setMatchPassword(e.target.value)} value={matchPassword} className={matchPassword !== updatePassword ? \"form-control is-invalid\" : \"form-control\"} id=\"validationServer03\" placeholder=\"Confirm New Password\" required />\r\n                                    {matchPassword !== updatePassword &&\r\n                                        <div className=\"invalid-feedback\">\r\n                                            Password not match.\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className='pt-4 text-center'>\r\n                                    <button type=\"submit\" className=\"btn btn-success mr-3\" style={{ width: '100px' }} disabled={matchPassword !== updatePassword}>Save</button>\r\n                                    <button className=\"btn btn-secondary\" onClick={() => props.history.push('/')} style={{ width: '100px' }}>Cancel</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileScreen;","G:\\expert system\\server\\client\\src\\screen\\admin\\UplaodFile.js",["600","601","602","603","604","605","606","607","608"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { signup } from '../../action/auth'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Navbar from '../admin/Navbar';\r\nimport uplaodImg from '../assets/upload.png'\r\n\r\nconst UplaodFileScreen = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = () => {\r\n        props.history.push('/admin/detail')\r\n    }\r\n\r\n    return (\r\n        <div className='containerMain'>\r\n            <Navbar />\r\n            <main>\r\n                <div className=\"m-4\">\r\n                    <div className='cart shadow bg-white rounded p-3 '>\r\n                        <div className=\"row justify-content-around my-3\">\r\n                            <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                                <img width=\"40%\" src={uplaodImg} />\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <h3 className='text-muted text-center py-3'>Uplaod File </h3>\r\n\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <select className=\"form-control border-top-0 border-left-0 border-right-0 bg-light rounded\" id=\"exampleFormControlSelect1\" required>\r\n                                            <option value=\"\" disabled selected>Select File Type</option>\r\n                                            <option value=\"\">JSON</option>\r\n                                            <option value=\"\">Excel</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group custom-file mb-3\">\r\n                                        <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" accept=\".pdf\" />\r\n                                        <label className=\"form-control rounded border-top-0 border-left-0 border-right-0 custom-file-label bg-light rounded\" for=\"customFile\">Choose file</label>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"text-center\">\r\n                                        <button onClick={submitHandler} type=\"button\" className=\"btn btn-success\">\r\n                                            <i className=\"fas fa-file\"> Uplaod File </i>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UplaodFileScreen\r\n\r\n\r\n","G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\PremiumChart.js",["609","610","611","612","613","614"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../../App.css';\r\nimport Chart from \"react-google-charts\";\r\n\r\nconst PremiumChartScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [chartSelect, setcChartSelect] = useState(1)\r\n    var weeklyTitle = null\r\n\r\n    return (\r\n        <> \r\n\r\n            <div className='d-flex justify-content-between'>\r\n                <div className=''>\r\n                    <h3 className='text-center text-muted '>User Analytics</h3>\r\n                </div>\r\n\r\n                <div className=\" d-flex justify-content-end mt-2\">\r\n\r\n                    <button className=\"btn btn-primary mx-1 mb-1\" >Weekly</button>\r\n                    <button className=\"btn btn-success mx-1 mb-1\" >Last 30 days</button>\r\n                    <button className=\"btn btn-warning mx-1 mb-1\" >Yearly</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <Chart\r\n                    // width={'500px'}\r\n                    // height={'300px'}\r\n\r\n                    chartType=\"ComboChart\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={[\r\n                        ['Date', 'Basic', 'Premium',],\r\n                        ['19-12-2021', 100, 50],\r\n                        ['19-12-2021', 70, 60],\r\n                        ['19-12-2021', 60, 50],\r\n                        ['19-12-2021', 30, 20],\r\n                        ['19-12-2021', 130, 40],\r\n                        ['19-12-2021', 30, 40],\r\n                    ]}\r\n                    options={{\r\n                        // colors: ['#FB7A21'],\r\n                        // backgroundColor: '#2F4F4F',\r\n                        // chart: {\r\n                        //     title: 'Company Performance',\r\n                        //     subtitle: 'Sales, Expenses, and Profit: 2014-2017',\r\n                        // },\r\n                        legend: { position: 'none' },\r\n                        // title: \"weeklyTitle\",\r\n                        titleTextStyle: { color: '#FFF' },\r\n                        // vAxis: { title: 'Percentage', titleTextStyle: { color: '#FFF' }, textStyle: { color: '#FFF' } },\r\n                        // hAxis: { title: 'Month', fontSize: 28, titleTextStyle: { color: '#FFF' }, textStyle: { color: '#FFF' } },\r\n                        seriesType: 'bars',\r\n                        series: { 5: { type: 'line' } },\r\n                    }}\r\n                    rootProps={{ 'data-testid': '1' }}\r\n                />\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default PremiumChartScreen;","G:\\expert system\\server\\client\\src\\screen\\admin\\RequestPremium.js",["615","616","617","618","619"],"G:\\expert system\\server\\client\\src\\screen\\admin\\chart.js\\frequectChart.js",["620","621","622","623"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '../../../App.css';\r\nimport Chart from \"react-google-charts\";\r\n\r\nconst FrequentChartScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    console.log(props);\r\n    const getProductAssociation = () => {\r\n        var data = []\r\n        data.push(['Item', \"Frequency\"])\r\n\r\n        props?.frequentItemsets.map(item =>\r\n            data.push([item.toString(), item?.length])\r\n        )\r\n        return data\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Chart\r\n                // width={'500px'}\r\n                height={'300px'}\r\n                chartType=\"ComboChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={\r\n                    getProductAssociation()\r\n                }\r\n                options={{\r\n                    // colors: ['#FB7A21'],\r\n                    // backgroundColor: '#2F4F4F',\r\n                    chart: {\r\n                        title: 'Frequent Items',\r\n                        subtitle: 'Frequent Items and Frequency',\r\n                    },\r\n                    legend: { position: 'none' },\r\n                    title: \"Maximium Frequent Items\",\r\n                    titleTextStyle: { color: '#3366CC' },\r\n                    vAxis: { title: 'Frequency', },\r\n                    hAxis: { title: 'Frequent Items', fontSize: 28, },\r\n                    seriesType: 'bars',\r\n                    series: { 5: { type: 'line' } },\r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default FrequentChartScreen;","G:\\expert system\\server\\client\\src\\screen\\verified.js",["624","625","626"],"import React, { useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport contactImg from './assets/contact.png'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { accountConformation } from '../action/auth';\r\nconst VerifiedScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const token = props.match.params.token\r\n    const accountConformationRed = useSelector(state => state.accountConformationRed);\r\n    const { loading, success, accConfirm, error } = accountConformationRed;\r\n    \r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(accountConformation(token))\r\n        }\r\n\r\n    }, [token])\r\n\r\n    return (\r\n        <>\r\n            {loading?\r\n                <div class=\"d-flex justify-content-center align-items-center vh-100\">\r\n                    <div class=\"spinner-border text-primary \" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>:\r\n            \r\n            <div className=\"jumbotron text-center\">\r\n                <h1 className=\"display-3\">Thank You!</h1>\r\n                {error && <p className=\"lead text-danger\"><strong>{error.message}</strong></p>}\r\n                {success && <p className=\"lead\"><strong>{accConfirm.message}</strong></p>}\r\n\r\n                {/* <hr> */}\r\n                {/* <p>\r\n                Having trouble? <a href=\"\">Contact us</a>\r\n                </p> \r\n                */}\r\n                <p className=\"lead\">\r\n                    <Link to='/signin' className=\"btn btn-primary btn-sm\" role=\"button\">Continue to login</Link>\r\n                </p>\r\n            </div>\r\n}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VerifiedScreen","G:\\expert system\\server\\client\\src\\action\\premium.js",[],"G:\\expert system\\server\\client\\src\\contant\\premium.js",[],"G:\\expert system\\server\\client\\src\\reducer\\premium.js",["627","628","629"],"import { CONFIRM_PREMIUM_FAIL, CONFIRM_PREMIUM_REQUEST, CONFIRM_PREMIUM_SUCCESS } from \"../contant/admin/premium\";\nimport { USER_PREMIUM_FAIL, USER_PREMIUM_REQUEST, USER_PREMIUM_SUCCESS } from \"../contant/premium\";\n\nfunction premiumRequestReducer(state = {}, action) {\n    switch (action.type) {\n        case USER_PREMIUM_REQUEST:\n            return { loading: true }\n        case USER_PREMIUM_SUCCESS:\n            return { loading: false, success: true, premiumReq: action.payload }\n        case USER_PREMIUM_FAIL:\n            return { loading: false, error: action.payload };\n        default: return state;\n    }\n}\n\n\nexport {\n    premiumRequestReducer\n};","G:\\expert system\\server\\client\\src\\reducer\\message.js",[],"G:\\expert system\\server\\client\\src\\contant\\message.js",[],"G:\\expert system\\server\\client\\src\\action\\message.js",[],"G:\\expert system\\server\\client\\src\\reducer\\user.js",[],"G:\\expert system\\server\\client\\src\\contant\\user.js",[],"G:\\expert system\\server\\client\\src\\action\\user.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\auth.js",[],"G:\\expert system\\server\\client\\src\\contant\\admin\\auth.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\message.js",[],"G:\\expert system\\server\\client\\src\\contant\\admin\\message.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\premium.js",["630"],"G:\\expert system\\server\\client\\src\\contant\\admin\\premium.js",[],"G:\\expert system\\server\\client\\src\\reducer\\admin\\user.js",[],"G:\\expert system\\server\\client\\src\\contant\\admin\\user.js",[],"G:\\expert system\\server\\client\\src\\action\\admin\\auth.js",[],"G:\\expert system\\server\\client\\src\\action\\admin\\premium.js",[],"G:\\expert system\\server\\client\\src\\action\\admin\\user.js",[],{"ruleId":"631","replacedBy":"632"},{"ruleId":"633","replacedBy":"634"},{"ruleId":"635","severity":1,"message":"636","line":2,"column":10,"nodeType":"637","messageId":"638","endLine":2,"endColumn":23},{"ruleId":"635","severity":1,"message":"639","line":2,"column":32,"nodeType":"637","messageId":"638","endLine":2,"endColumn":38},{"ruleId":"635","severity":1,"message":"640","line":2,"column":40,"nodeType":"637","messageId":"638","endLine":2,"endColumn":46},{"ruleId":"635","severity":1,"message":"641","line":40,"column":22,"nodeType":"637","messageId":"638","endLine":40,"endColumn":35},{"ruleId":"635","severity":1,"message":"642","line":40,"column":44,"nodeType":"637","messageId":"638","endLine":40,"endColumn":55},{"ruleId":"643","severity":1,"message":"644","line":57,"column":8,"nodeType":"645","endLine":57,"endColumn":18,"suggestions":"646"},{"ruleId":"647","severity":1,"message":"648","line":158,"column":37,"nodeType":"649","messageId":"650","endLine":158,"endColumn":46},{"ruleId":"635","severity":1,"message":"641","line":30,"column":22,"nodeType":"637","messageId":"638","endLine":30,"endColumn":35},{"ruleId":"635","severity":1,"message":"642","line":30,"column":44,"nodeType":"637","messageId":"638","endLine":30,"endColumn":55},{"ruleId":"643","severity":1,"message":"644","line":41,"column":8,"nodeType":"645","endLine":41,"endColumn":18,"suggestions":"651"},{"ruleId":"647","severity":1,"message":"648","line":102,"column":37,"nodeType":"649","messageId":"650","endLine":102,"endColumn":46},{"ruleId":"635","severity":1,"message":"652","line":1,"column":28,"nodeType":"637","messageId":"638","endLine":1,"endColumn":36},{"ruleId":"635","severity":1,"message":"653","line":12,"column":8,"nodeType":"637","messageId":"638","endLine":12,"endColumn":21},{"ruleId":"635","severity":1,"message":"654","line":24,"column":32,"nodeType":"637","messageId":"638","endLine":24,"endColumn":47},{"ruleId":"635","severity":1,"message":"655","line":24,"column":56,"nodeType":"637","messageId":"638","endLine":24,"endColumn":69},{"ruleId":"635","severity":1,"message":"656","line":27,"column":36,"nodeType":"637","messageId":"638","endLine":27,"endColumn":55},{"ruleId":"635","severity":1,"message":"657","line":27,"column":64,"nodeType":"637","messageId":"638","endLine":27,"endColumn":81},{"ruleId":"635","severity":1,"message":"658","line":30,"column":32,"nodeType":"637","messageId":"638","endLine":30,"endColumn":47},{"ruleId":"635","severity":1,"message":"659","line":30,"column":56,"nodeType":"637","messageId":"638","endLine":30,"endColumn":69},{"ruleId":"643","severity":1,"message":"644","line":38,"column":8,"nodeType":"645","endLine":38,"endColumn":18,"suggestions":"660"},{"ruleId":"635","severity":1,"message":"641","line":30,"column":22,"nodeType":"637","messageId":"638","endLine":30,"endColumn":35},{"ruleId":"635","severity":1,"message":"642","line":30,"column":44,"nodeType":"637","messageId":"638","endLine":30,"endColumn":55},{"ruleId":"643","severity":1,"message":"644","line":41,"column":8,"nodeType":"645","endLine":41,"endColumn":18,"suggestions":"661"},{"ruleId":"647","severity":1,"message":"648","line":102,"column":37,"nodeType":"649","messageId":"650","endLine":102,"endColumn":46},{"ruleId":"643","severity":1,"message":"662","line":26,"column":8,"nodeType":"645","endLine":26,"endColumn":18,"suggestions":"663"},{"ruleId":"635","severity":1,"message":"641","line":29,"column":22,"nodeType":"637","messageId":"638","endLine":29,"endColumn":35},{"ruleId":"635","severity":1,"message":"642","line":29,"column":44,"nodeType":"637","messageId":"638","endLine":29,"endColumn":55},{"ruleId":"635","severity":1,"message":"664","line":35,"column":22,"nodeType":"637","messageId":"638","endLine":35,"endColumn":33},{"ruleId":"635","severity":1,"message":"665","line":35,"column":42,"nodeType":"637","messageId":"638","endLine":35,"endColumn":51},{"ruleId":"643","severity":1,"message":"644","line":40,"column":8,"nodeType":"645","endLine":40,"endColumn":18,"suggestions":"666"},{"ruleId":"667","severity":1,"message":"668","line":42,"column":22,"nodeType":"669","messageId":"670","endLine":42,"endColumn":39,"fix":"671"},{"ruleId":"667","severity":1,"message":"672","line":44,"column":20,"nodeType":"669","messageId":"670","endLine":44,"endColumn":35,"fix":"673"},{"ruleId":"667","severity":1,"message":"672","line":46,"column":20,"nodeType":"669","messageId":"670","endLine":46,"endColumn":35,"fix":"674"},{"ruleId":"667","severity":1,"message":"675","line":92,"column":15,"nodeType":"669","messageId":"670","endLine":92,"endColumn":25,"fix":"676"},{"ruleId":"667","severity":1,"message":"677","line":93,"column":17,"nodeType":"669","messageId":"670","endLine":93,"endColumn":28,"fix":"678"},{"ruleId":"667","severity":1,"message":"679","line":94,"column":24,"nodeType":"669","messageId":"670","endLine":94,"endColumn":42,"fix":"680"},{"ruleId":"667","severity":1,"message":"672","line":95,"column":21,"nodeType":"669","messageId":"670","endLine":95,"endColumn":36,"fix":"681"},{"ruleId":"647","severity":1,"message":"648","line":101,"column":37,"nodeType":"649","messageId":"650","endLine":101,"endColumn":46},{"ruleId":"667","severity":1,"message":"682","line":179,"column":62,"nodeType":"669","messageId":"670","endLine":179,"endColumn":78,"fix":"683"},{"ruleId":"667","severity":1,"message":"677","line":183,"column":78,"nodeType":"669","messageId":"670","endLine":183,"endColumn":89,"fix":"684"},{"ruleId":"667","severity":1,"message":"679","line":184,"column":78,"nodeType":"669","messageId":"670","endLine":184,"endColumn":96,"fix":"685"},{"ruleId":"667","severity":1,"message":"672","line":186,"column":90,"nodeType":"669","messageId":"670","endLine":186,"endColumn":105,"fix":"686"},{"ruleId":"667","severity":1,"message":"672","line":186,"column":175,"nodeType":"669","messageId":"670","endLine":186,"endColumn":190,"fix":"687"},{"ruleId":"667","severity":1,"message":"675","line":189,"column":204,"nodeType":"669","messageId":"670","endLine":189,"endColumn":214,"fix":"688"},{"ruleId":"667","severity":1,"message":"675","line":190,"column":214,"nodeType":"669","messageId":"670","endLine":190,"endColumn":224,"fix":"689"},{"ruleId":"667","severity":1,"message":"675","line":198,"column":115,"nodeType":"669","messageId":"670","endLine":198,"endColumn":125,"fix":"690"},{"ruleId":"667","severity":1,"message":"672","line":225,"column":176,"nodeType":"669","messageId":"670","endLine":225,"endColumn":191,"fix":"691"},{"ruleId":"635","severity":1,"message":"652","line":1,"column":28,"nodeType":"637","messageId":"638","endLine":1,"endColumn":36},{"ruleId":"643","severity":1,"message":"692","line":27,"column":8,"nodeType":"645","endLine":27,"endColumn":18,"suggestions":"693"},{"ruleId":"647","severity":1,"message":"648","line":32,"column":37,"nodeType":"649","messageId":"650","endLine":32,"endColumn":46},{"ruleId":"667","severity":1,"message":"682","line":75,"column":50,"nodeType":"669","messageId":"670","endLine":75,"endColumn":72,"fix":"694"},{"ruleId":"667","severity":1,"message":"695","line":78,"column":71,"nodeType":"669","messageId":"670","endLine":78,"endColumn":87,"fix":"696"},{"ruleId":"667","severity":1,"message":"695","line":78,"column":116,"nodeType":"669","messageId":"670","endLine":78,"endColumn":132,"fix":"697"},{"ruleId":"667","severity":1,"message":"695","line":78,"column":162,"nodeType":"669","messageId":"670","endLine":78,"endColumn":178,"fix":"698"},{"ruleId":"667","severity":1,"message":"699","line":79,"column":62,"nodeType":"669","messageId":"670","endLine":79,"endColumn":77,"fix":"700"},{"ruleId":"667","severity":1,"message":"701","line":80,"column":62,"nodeType":"669","messageId":"670","endLine":80,"endColumn":77,"fix":"702"},{"ruleId":"635","severity":1,"message":"703","line":4,"column":8,"nodeType":"637","messageId":"638","endLine":4,"endColumn":12},{"ruleId":"635","severity":1,"message":"704","line":3,"column":10,"nodeType":"637","messageId":"638","endLine":3,"endColumn":14},{"ruleId":"635","severity":1,"message":"705","line":7,"column":8,"nodeType":"637","messageId":"638","endLine":7,"endColumn":12},{"ruleId":"706","severity":1,"message":"707","line":53,"column":29,"nodeType":"708","endLine":53,"endColumn":223},{"ruleId":"709","severity":1,"message":"710","line":53,"column":29,"nodeType":"708","endLine":53,"endColumn":223},{"ruleId":"709","severity":1,"message":"711","line":53,"column":29,"nodeType":"708","endLine":53,"endColumn":223},{"ruleId":"712","severity":1,"message":"713","line":56,"column":37,"nodeType":"708","endLine":56,"endColumn":183},{"ruleId":"635","severity":1,"message":"714","line":1,"column":8,"nodeType":"637","messageId":"638","endLine":1,"endColumn":13},{"ruleId":"635","severity":1,"message":"714","line":1,"column":8,"nodeType":"637","messageId":"638","endLine":1,"endColumn":13},{"ruleId":"635","severity":1,"message":"715","line":3,"column":10,"nodeType":"637","messageId":"638","endLine":3,"endColumn":21},{"ruleId":"635","severity":1,"message":"716","line":10,"column":30,"nodeType":"637","messageId":"638","endLine":10,"endColumn":45},{"ruleId":"635","severity":1,"message":"717","line":10,"column":54,"nodeType":"637","messageId":"638","endLine":10,"endColumn":67},{"ruleId":"667","severity":1,"message":"718","line":17,"column":14,"nodeType":"669","messageId":"670","endLine":17,"endColumn":29,"fix":"719"},{"ruleId":"667","severity":1,"message":"718","line":17,"column":45,"nodeType":"669","messageId":"670","endLine":17,"endColumn":60,"fix":"720"},{"ruleId":"667","severity":1,"message":"701","line":20,"column":29,"nodeType":"669","messageId":"670","endLine":20,"endColumn":44,"fix":"721"},{"ruleId":"667","severity":1,"message":"699","line":20,"column":46,"nodeType":"669","messageId":"670","endLine":20,"endColumn":61,"fix":"722"},{"ruleId":"667","severity":1,"message":"718","line":30,"column":14,"nodeType":"669","messageId":"670","endLine":30,"endColumn":29,"fix":"723"},{"ruleId":"667","severity":1,"message":"718","line":30,"column":49,"nodeType":"669","messageId":"670","endLine":30,"endColumn":64,"fix":"724"},{"ruleId":"667","severity":1,"message":"718","line":30,"column":86,"nodeType":"669","messageId":"670","endLine":30,"endColumn":101,"fix":"725"},{"ruleId":"667","severity":1,"message":"718","line":30,"column":121,"nodeType":"669","messageId":"670","endLine":30,"endColumn":136,"fix":"726"},{"ruleId":"667","severity":1,"message":"701","line":33,"column":29,"nodeType":"669","messageId":"670","endLine":33,"endColumn":44,"fix":"727"},{"ruleId":"667","severity":1,"message":"699","line":33,"column":46,"nodeType":"669","messageId":"670","endLine":33,"endColumn":61,"fix":"728"},{"ruleId":"635","severity":1,"message":"729","line":8,"column":26,"nodeType":"637","messageId":"638","endLine":8,"endColumn":31},{"ruleId":"643","severity":1,"message":"644","line":31,"column":8,"nodeType":"645","endLine":31,"endColumn":18,"suggestions":"730"},{"ruleId":"647","severity":1,"message":"648","line":35,"column":37,"nodeType":"649","messageId":"650","endLine":35,"endColumn":46},{"ruleId":"706","severity":1,"message":"707","line":105,"column":77,"nodeType":"708","endLine":105,"endColumn":165},{"ruleId":"706","severity":1,"message":"707","line":107,"column":77,"nodeType":"708","endLine":107,"endColumn":218},{"ruleId":"631","replacedBy":"731"},{"ruleId":"633","replacedBy":"732"},{"ruleId":"635","severity":1,"message":"636","line":2,"column":10,"nodeType":"637","messageId":"638","endLine":2,"endColumn":23},{"ruleId":"635","severity":1,"message":"639","line":2,"column":32,"nodeType":"637","messageId":"638","endLine":2,"endColumn":38},{"ruleId":"635","severity":1,"message":"640","line":2,"column":40,"nodeType":"637","messageId":"638","endLine":2,"endColumn":46},{"ruleId":"635","severity":1,"message":"733","line":23,"column":7,"nodeType":"637","messageId":"638","endLine":23,"endColumn":15},{"ruleId":"635","severity":1,"message":"734","line":3,"column":10,"nodeType":"637","messageId":"638","endLine":3,"endColumn":16},{"ruleId":"635","severity":1,"message":"703","line":4,"column":8,"nodeType":"637","messageId":"638","endLine":4,"endColumn":12},{"ruleId":"635","severity":1,"message":"735","line":6,"column":8,"nodeType":"637","messageId":"638","endLine":6,"endColumn":9},{"ruleId":"635","severity":1,"message":"714","line":1,"column":8,"nodeType":"637","messageId":"638","endLine":1,"endColumn":13},{"ruleId":"635","severity":1,"message":"715","line":3,"column":10,"nodeType":"637","messageId":"638","endLine":3,"endColumn":21},{"ruleId":"635","severity":1,"message":"716","line":10,"column":30,"nodeType":"637","messageId":"638","endLine":10,"endColumn":45},{"ruleId":"635","severity":1,"message":"717","line":10,"column":54,"nodeType":"637","messageId":"638","endLine":10,"endColumn":67},{"ruleId":"667","severity":1,"message":"718","line":17,"column":14,"nodeType":"669","messageId":"670","endLine":17,"endColumn":29,"fix":"736"},{"ruleId":"667","severity":1,"message":"718","line":17,"column":45,"nodeType":"669","messageId":"670","endLine":17,"endColumn":60,"fix":"737"},{"ruleId":"667","severity":1,"message":"701","line":20,"column":29,"nodeType":"669","messageId":"670","endLine":20,"endColumn":44,"fix":"738"},{"ruleId":"667","severity":1,"message":"699","line":20,"column":46,"nodeType":"669","messageId":"670","endLine":20,"endColumn":61,"fix":"739"},{"ruleId":"667","severity":1,"message":"718","line":30,"column":14,"nodeType":"669","messageId":"670","endLine":30,"endColumn":29,"fix":"740"},{"ruleId":"667","severity":1,"message":"718","line":30,"column":49,"nodeType":"669","messageId":"670","endLine":30,"endColumn":64,"fix":"741"},{"ruleId":"667","severity":1,"message":"718","line":30,"column":86,"nodeType":"669","messageId":"670","endLine":30,"endColumn":101,"fix":"742"},{"ruleId":"667","severity":1,"message":"718","line":30,"column":121,"nodeType":"669","messageId":"670","endLine":30,"endColumn":136,"fix":"743"},{"ruleId":"667","severity":1,"message":"701","line":33,"column":29,"nodeType":"669","messageId":"670","endLine":33,"endColumn":44,"fix":"744"},{"ruleId":"667","severity":1,"message":"699","line":33,"column":46,"nodeType":"669","messageId":"670","endLine":33,"endColumn":61,"fix":"745"},{"ruleId":"631","replacedBy":"746"},{"ruleId":"633","replacedBy":"747"},{"ruleId":"635","severity":1,"message":"714","line":1,"column":8,"nodeType":"637","messageId":"638","endLine":1,"endColumn":13},{"ruleId":"635","severity":1,"message":"704","line":4,"column":10,"nodeType":"637","messageId":"638","endLine":4,"endColumn":14},{"ruleId":"635","severity":1,"message":"748","line":15,"column":13,"nodeType":"637","messageId":"638","endLine":15,"endColumn":20},{"ruleId":"635","severity":1,"message":"749","line":15,"column":22,"nodeType":"637","messageId":"638","endLine":15,"endColumn":29},{"ruleId":"635","severity":1,"message":"750","line":15,"column":41,"nodeType":"637","messageId":"638","endLine":15,"endColumn":46},{"ruleId":"643","severity":1,"message":"662","line":19,"column":8,"nodeType":"645","endLine":19,"endColumn":18,"suggestions":"751"},{"ruleId":"643","severity":1,"message":"752","line":23,"column":8,"nodeType":"645","endLine":23,"endColumn":10,"suggestions":"753"},{"ruleId":"706","severity":1,"message":"707","line":32,"column":29,"nodeType":"708","endLine":32,"endColumn":64},{"ruleId":"635","severity":1,"message":"754","line":1,"column":17,"nodeType":"637","messageId":"638","endLine":1,"endColumn":26},{"ruleId":"635","severity":1,"message":"755","line":9,"column":10,"nodeType":"637","messageId":"638","endLine":9,"endColumn":21},{"ruleId":"635","severity":1,"message":"748","line":21,"column":11,"nodeType":"637","messageId":"638","endLine":21,"endColumn":18},{"ruleId":"706","severity":1,"message":"707","line":63,"column":19,"nodeType":"708","endLine":63,"endColumn":213},{"ruleId":"709","severity":1,"message":"710","line":63,"column":19,"nodeType":"708","endLine":63,"endColumn":213},{"ruleId":"709","severity":1,"message":"711","line":63,"column":19,"nodeType":"708","endLine":63,"endColumn":213},{"ruleId":"712","severity":1,"message":"713","line":66,"column":23,"nodeType":"708","endLine":66,"endColumn":169},{"ruleId":"756","severity":1,"message":"757","line":9,"column":9,"nodeType":"708","endLine":9,"endColumn":104},{"ruleId":"756","severity":1,"message":"757","line":8,"column":17,"nodeType":"708","endLine":8,"endColumn":112},{"ruleId":"631","replacedBy":"758"},{"ruleId":"633","replacedBy":"759"},{"ruleId":"643","severity":1,"message":"662","line":23,"column":8,"nodeType":"645","endLine":23,"endColumn":18,"suggestions":"760"},{"ruleId":"706","severity":1,"message":"707","line":36,"column":29,"nodeType":"708","endLine":36,"endColumn":65},{"ruleId":"635","severity":1,"message":"761","line":5,"column":8,"nodeType":"637","messageId":"638","endLine":5,"endColumn":13},{"ruleId":"635","severity":1,"message":"762","line":3,"column":10,"nodeType":"637","messageId":"638","endLine":3,"endColumn":16},{"ruleId":"635","severity":1,"message":"763","line":4,"column":10,"nodeType":"637","messageId":"638","endLine":4,"endColumn":24},{"ruleId":"635","severity":1,"message":"729","line":4,"column":26,"nodeType":"637","messageId":"638","endLine":4,"endColumn":31},{"ruleId":"635","severity":1,"message":"704","line":6,"column":10,"nodeType":"637","messageId":"638","endLine":6,"endColumn":14},{"ruleId":"635","severity":1,"message":"764","line":16,"column":12,"nodeType":"637","messageId":"638","endLine":16,"endColumn":23},{"ruleId":"635","severity":1,"message":"765","line":16,"column":25,"nodeType":"637","messageId":"638","endLine":16,"endColumn":39},{"ruleId":"643","severity":1,"message":"662","line":33,"column":8,"nodeType":"645","endLine":33,"endColumn":19,"suggestions":"766"},{"ruleId":"767","severity":1,"message":"768","line":74,"column":33,"nodeType":"769","endLine":74,"endColumn":46},{"ruleId":"635","severity":1,"message":"704","line":3,"column":10,"nodeType":"637","messageId":"638","endLine":3,"endColumn":14},{"ruleId":"635","severity":1,"message":"705","line":7,"column":8,"nodeType":"637","messageId":"638","endLine":7,"endColumn":12},{"ruleId":"635","severity":1,"message":"770","line":12,"column":11,"nodeType":"637","messageId":"638","endLine":12,"endColumn":18},{"ruleId":"635","severity":1,"message":"748","line":14,"column":10,"nodeType":"637","messageId":"638","endLine":14,"endColumn":17},{"ruleId":"635","severity":1,"message":"749","line":14,"column":19,"nodeType":"637","messageId":"638","endLine":14,"endColumn":26},{"ruleId":"635","severity":1,"message":"750","line":14,"column":39,"nodeType":"637","messageId":"638","endLine":14,"endColumn":44},{"ruleId":"706","severity":1,"message":"707","line":54,"column":29,"nodeType":"708","endLine":54,"endColumn":223},{"ruleId":"709","severity":1,"message":"710","line":54,"column":29,"nodeType":"708","endLine":54,"endColumn":223},{"ruleId":"709","severity":1,"message":"711","line":54,"column":29,"nodeType":"708","endLine":54,"endColumn":223},{"ruleId":"712","severity":1,"message":"713","line":57,"column":37,"nodeType":"708","endLine":57,"endColumn":183},{"ruleId":"635","severity":1,"message":"652","line":1,"column":28,"nodeType":"637","messageId":"638","endLine":1,"endColumn":36},{"ruleId":"635","severity":1,"message":"771","line":11,"column":11,"nodeType":"637","messageId":"638","endLine":11,"endColumn":19},{"ruleId":"643","severity":1,"message":"662","line":18,"column":7,"nodeType":"645","endLine":18,"endColumn":18,"suggestions":"772"},{"ruleId":"635","severity":1,"message":"652","line":1,"column":28,"nodeType":"637","messageId":"638","endLine":1,"endColumn":36},{"ruleId":"635","severity":1,"message":"773","line":16,"column":9,"nodeType":"637","messageId":"638","endLine":16,"endColumn":21},{"ruleId":"635","severity":1,"message":"774","line":17,"column":9,"nodeType":"637","messageId":"638","endLine":17,"endColumn":19},{"ruleId":"635","severity":1,"message":"775","line":18,"column":9,"nodeType":"637","messageId":"638","endLine":18,"endColumn":24},{"ruleId":"635","severity":1,"message":"750","line":21,"column":22,"nodeType":"637","messageId":"638","endLine":21,"endColumn":27},{"ruleId":"635","severity":1,"message":"776","line":24,"column":13,"nodeType":"637","messageId":"638","endLine":24,"endColumn":27},{"ruleId":"635","severity":1,"message":"777","line":27,"column":13,"nodeType":"637","messageId":"638","endLine":27,"endColumn":25},{"ruleId":"635","severity":1,"message":"778","line":30,"column":13,"nodeType":"637","messageId":"638","endLine":30,"endColumn":28},{"ruleId":"635","severity":1,"message":"779","line":33,"column":13,"nodeType":"637","messageId":"638","endLine":33,"endColumn":30},{"ruleId":"643","severity":1,"message":"752","line":73,"column":8,"nodeType":"645","endLine":73,"endColumn":10,"suggestions":"780"},{"ruleId":"767","severity":1,"message":"768","line":192,"column":81,"nodeType":"769","endLine":192,"endColumn":93},{"ruleId":"767","severity":1,"message":"768","line":202,"column":81,"nodeType":"769","endLine":202,"endColumn":93},{"ruleId":"767","severity":1,"message":"768","line":217,"column":81,"nodeType":"769","endLine":217,"endColumn":93},{"ruleId":"767","severity":1,"message":"768","line":227,"column":81,"nodeType":"769","endLine":227,"endColumn":93},{"ruleId":"767","severity":1,"message":"768","line":291,"column":81,"nodeType":"769","endLine":291,"endColumn":93},{"ruleId":"767","severity":1,"message":"768","line":301,"column":81,"nodeType":"769","endLine":301,"endColumn":93},{"ruleId":"767","severity":1,"message":"768","line":316,"column":81,"nodeType":"769","endLine":316,"endColumn":93},{"ruleId":"767","severity":1,"message":"768","line":326,"column":81,"nodeType":"769","endLine":326,"endColumn":93},{"ruleId":"767","severity":1,"message":"768","line":388,"column":81,"nodeType":"769","endLine":388,"endColumn":93},{"ruleId":"767","severity":1,"message":"768","line":398,"column":81,"nodeType":"769","endLine":398,"endColumn":93},{"ruleId":"767","severity":1,"message":"768","line":413,"column":81,"nodeType":"769","endLine":413,"endColumn":93},{"ruleId":"767","severity":1,"message":"768","line":423,"column":81,"nodeType":"769","endLine":423,"endColumn":93},{"ruleId":"635","severity":1,"message":"754","line":1,"column":17,"nodeType":"637","messageId":"638","endLine":1,"endColumn":26},{"ruleId":"635","severity":1,"message":"781","line":2,"column":23,"nodeType":"637","messageId":"638","endLine":2,"endColumn":34},{"ruleId":"635","severity":1,"message":"729","line":7,"column":26,"nodeType":"637","messageId":"638","endLine":7,"endColumn":31},{"ruleId":"635","severity":1,"message":"771","line":12,"column":11,"nodeType":"637","messageId":"638","endLine":12,"endColumn":19},{"ruleId":"706","severity":1,"message":"707","line":31,"column":33,"nodeType":"708","endLine":31,"endColumn":68},{"ruleId":"635","severity":1,"message":"735","line":4,"column":8,"nodeType":"637","messageId":"638","endLine":4,"endColumn":9},{"ruleId":"635","severity":1,"message":"705","line":6,"column":8,"nodeType":"637","messageId":"638","endLine":6,"endColumn":12},{"ruleId":"635","severity":1,"message":"782","line":7,"column":8,"nodeType":"637","messageId":"638","endLine":7,"endColumn":14},{"ruleId":"635","severity":1,"message":"783","line":10,"column":8,"nodeType":"637","messageId":"638","endLine":10,"endColumn":13},{"ruleId":"643","severity":1,"message":"662","line":22,"column":8,"nodeType":"645","endLine":22,"endColumn":18,"suggestions":"784"},{"ruleId":"635","severity":1,"message":"705","line":4,"column":8,"nodeType":"637","messageId":"638","endLine":4,"endColumn":12},{"ruleId":"635","severity":1,"message":"782","line":5,"column":8,"nodeType":"637","messageId":"638","endLine":5,"endColumn":14},{"ruleId":"643","severity":1,"message":"662","line":27,"column":8,"nodeType":"645","endLine":27,"endColumn":22,"suggestions":"785"},{"ruleId":"635","severity":1,"message":"786","line":1,"column":17,"nodeType":"637","messageId":"638","endLine":1,"endColumn":30},{"ruleId":"635","severity":1,"message":"735","line":4,"column":8,"nodeType":"637","messageId":"638","endLine":4,"endColumn":9},{"ruleId":"635","severity":1,"message":"705","line":6,"column":8,"nodeType":"637","messageId":"638","endLine":6,"endColumn":12},{"ruleId":"635","severity":1,"message":"782","line":7,"column":8,"nodeType":"637","messageId":"638","endLine":7,"endColumn":14},{"ruleId":"635","severity":1,"message":"704","line":8,"column":10,"nodeType":"637","messageId":"638","endLine":8,"endColumn":14},{"ruleId":"635","severity":1,"message":"787","line":9,"column":8,"nodeType":"637","messageId":"638","endLine":9,"endColumn":9},{"ruleId":"643","severity":1,"message":"662","line":23,"column":8,"nodeType":"645","endLine":23,"endColumn":18,"suggestions":"788"},{"ruleId":"635","severity":1,"message":"754","line":1,"column":17,"nodeType":"637","messageId":"638","endLine":1,"endColumn":26},{"ruleId":"635","severity":1,"message":"735","line":4,"column":8,"nodeType":"637","messageId":"638","endLine":4,"endColumn":9},{"ruleId":"635","severity":1,"message":"705","line":6,"column":8,"nodeType":"637","messageId":"638","endLine":6,"endColumn":12},{"ruleId":"635","severity":1,"message":"782","line":7,"column":8,"nodeType":"637","messageId":"638","endLine":7,"endColumn":14},{"ruleId":"635","severity":1,"message":"754","line":1,"column":17,"nodeType":"637","messageId":"638","endLine":1,"endColumn":26},{"ruleId":"635","severity":1,"message":"763","line":7,"column":10,"nodeType":"637","messageId":"638","endLine":7,"endColumn":24},{"ruleId":"635","severity":1,"message":"729","line":7,"column":26,"nodeType":"637","messageId":"638","endLine":7,"endColumn":31},{"ruleId":"706","severity":1,"message":"707","line":42,"column":33,"nodeType":"708","endLine":42,"endColumn":68},{"ruleId":"635","severity":1,"message":"754","line":1,"column":17,"nodeType":"637","messageId":"638","endLine":1,"endColumn":26},{"ruleId":"635","severity":1,"message":"652","line":1,"column":28,"nodeType":"637","messageId":"638","endLine":1,"endColumn":36},{"ruleId":"635","severity":1,"message":"781","line":2,"column":23,"nodeType":"637","messageId":"638","endLine":2,"endColumn":34},{"ruleId":"635","severity":1,"message":"762","line":3,"column":10,"nodeType":"637","messageId":"638","endLine":3,"endColumn":16},{"ruleId":"635","severity":1,"message":"763","line":4,"column":10,"nodeType":"637","messageId":"638","endLine":4,"endColumn":24},{"ruleId":"635","severity":1,"message":"729","line":4,"column":26,"nodeType":"637","messageId":"638","endLine":4,"endColumn":31},{"ruleId":"635","severity":1,"message":"704","line":6,"column":10,"nodeType":"637","messageId":"638","endLine":6,"endColumn":14},{"ruleId":"635","severity":1,"message":"771","line":12,"column":11,"nodeType":"637","messageId":"638","endLine":12,"endColumn":19},{"ruleId":"706","severity":1,"message":"707","line":26,"column":33,"nodeType":"708","endLine":26,"endColumn":68},{"ruleId":"635","severity":1,"message":"754","line":1,"column":17,"nodeType":"637","messageId":"638","endLine":1,"endColumn":26},{"ruleId":"635","severity":1,"message":"781","line":2,"column":23,"nodeType":"637","messageId":"638","endLine":2,"endColumn":34},{"ruleId":"635","severity":1,"message":"771","line":9,"column":11,"nodeType":"637","messageId":"638","endLine":9,"endColumn":19},{"ruleId":"635","severity":1,"message":"789","line":10,"column":12,"nodeType":"637","messageId":"638","endLine":10,"endColumn":23},{"ruleId":"635","severity":1,"message":"790","line":10,"column":25,"nodeType":"637","messageId":"638","endLine":10,"endColumn":40},{"ruleId":"635","severity":1,"message":"791","line":11,"column":9,"nodeType":"637","messageId":"638","endLine":11,"endColumn":20},{"ruleId":"635","severity":1,"message":"792","line":16,"column":12,"nodeType":"637","messageId":"638","endLine":16,"endColumn":19},{"ruleId":"635","severity":1,"message":"793","line":16,"column":21,"nodeType":"637","messageId":"638","endLine":16,"endColumn":31},{"ruleId":"643","severity":1,"message":"752","line":39,"column":8,"nodeType":"645","endLine":39,"endColumn":10,"suggestions":"794"},{"ruleId":"767","severity":1,"message":"768","line":97,"column":61,"nodeType":"769","endLine":97,"endColumn":74},{"ruleId":"767","severity":1,"message":"768","line":107,"column":61,"nodeType":"769","endLine":107,"endColumn":74},{"ruleId":"635","severity":1,"message":"754","line":1,"column":17,"nodeType":"637","messageId":"638","endLine":1,"endColumn":26},{"ruleId":"635","severity":1,"message":"652","line":1,"column":28,"nodeType":"637","messageId":"638","endLine":1,"endColumn":36},{"ruleId":"635","severity":1,"message":"781","line":2,"column":23,"nodeType":"637","messageId":"638","endLine":2,"endColumn":34},{"ruleId":"635","severity":1,"message":"771","line":9,"column":11,"nodeType":"637","messageId":"638","endLine":9,"endColumn":19},{"ruleId":"635","severity":1,"message":"782","line":2,"column":8,"nodeType":"637","messageId":"638","endLine":2,"endColumn":14},{"ruleId":"635","severity":1,"message":"795","line":3,"column":8,"nodeType":"637","messageId":"638","endLine":3,"endColumn":18},{"ruleId":"643","severity":1,"message":"752","line":18,"column":8,"nodeType":"645","endLine":18,"endColumn":15,"suggestions":"796"},{"ruleId":"635","severity":1,"message":"797","line":1,"column":10,"nodeType":"637","messageId":"638","endLine":1,"endColumn":30},{"ruleId":"635","severity":1,"message":"798","line":1,"column":32,"nodeType":"637","messageId":"638","endLine":1,"endColumn":55},{"ruleId":"635","severity":1,"message":"799","line":1,"column":57,"nodeType":"637","messageId":"638","endLine":1,"endColumn":80},{"ruleId":"635","severity":1,"message":"800","line":1,"column":10,"nodeType":"637","messageId":"638","endLine":1,"endColumn":32},"no-native-reassign",["801"],"no-negated-in-lhs",["802"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'DeleteLoading' is assigned a value but never used.","'deleteError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["803"],"array-callback-return","Array.prototype.filter() expects a return value from function.","FunctionExpression","expectedInside",["804"],"'useState' is defined but never used.","'RegulareChart' is defined but never used.","'listAreaLoading' is assigned a value but never used.","'listAreaError' is assigned a value but never used.","'listCategoryLoading' is assigned a value but never used.","'listCategoryError' is assigned a value but never used.","'listUnitLoading' is assigned a value but never used.","'listUnitError' is assigned a value but never used.",["805"],["806"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["807"],"'editLoading' is assigned a value but never used.","'editError' is assigned a value but never used.",["808"],"no-whitespace-before-property","Unexpected whitespace before property filter.","MemberExpression","unexpectedWhitespace",{"range":"809","text":"810"},"Unexpected whitespace before property isActive.",{"range":"811","text":"810"},{"range":"812","text":"810"},"Unexpected whitespace before property _id.",{"range":"813","text":"810"},"Unexpected whitespace before property name.",{"range":"814","text":"810"},"Unexpected whitespace before property description.",{"range":"815","text":"810"},{"range":"816","text":"810"},"Unexpected whitespace before property map.",{"range":"817","text":"810"},{"range":"818","text":"810"},{"range":"819","text":"810"},{"range":"820","text":"810"},{"range":"821","text":"810"},{"range":"822","text":"810"},{"range":"823","text":"810"},{"range":"824","text":"810"},{"range":"825","text":"810"},"React Hook useEffect has missing dependencies: 'dispatch', 'itemId', and 'props.history'. Either include them or remove the dependency array.",["826"],{"range":"827","text":"810"},"Unexpected whitespace before property createdAt.",{"range":"828","text":"810"},{"range":"829","text":"810"},{"range":"830","text":"810"},"Unexpected whitespace before property minPrice.",{"range":"831","text":"810"},"Unexpected whitespace before property maxPrice.",{"range":"832","text":"810"},"'Logo' is defined but never used.","'Link' is defined but never used.","'logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role img. This role is implicit on the element img.","The attribute aria-expanded is not supported by the role img. This role is implicit on the element img.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'react' is defined but never used.","'useDispatch' is defined but never used.","'listItemLoading' is assigned a value but never used.","'listItemError' is assigned a value but never used.","Unexpected whitespace before property category.",{"range":"833","text":"810"},{"range":"834","text":"810"},{"range":"835","text":"810"},{"range":"836","text":"810"},{"range":"837","text":"810"},{"range":"838","text":"810"},{"range":"839","text":"810"},{"range":"840","text":"810"},{"range":"841","text":"810"},{"range":"842","text":"810"},"'toast' is defined but never used.",["843"],["801"],["802"],"'location' is assigned a value but never used.","'signin' is defined but never used.","'$' is defined but never used.",{"range":"844","text":"810"},{"range":"845","text":"810"},{"range":"846","text":"810"},{"range":"847","text":"810"},{"range":"848","text":"810"},{"range":"849","text":"810"},{"range":"850","text":"810"},{"range":"851","text":"810"},{"range":"852","text":"810"},{"range":"853","text":"810"},["801"],["802"],"'loading' is assigned a value but never used.","'success' is assigned a value but never used.","'error' is assigned a value but never used.",["854"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["855"],"'useEffect' is defined but never used.","'refreshUser' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["801"],["802"],["856"],"'Chart' is defined but never used.","'signup' is defined but never used.","'ToastContainer' is defined but never used.","'accessLevel' is assigned a value but never used.","'setAccessLevel' is assigned a value but never used.",["857"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","'history' is assigned a value but never used.","'dispatch' is assigned a value but never used.",["858"],"'premiumSerNo' is assigned a value but never used.","'basicSerNo' is assigned a value but never used.","'deactivateSerNo' is assigned a value but never used.","'premiumLoading' is assigned a value but never used.","'basicLoading' is assigned a value but never used.","'activateLoading' is assigned a value but never used.","'deActivateLoading' is assigned a value but never used.",["859"],"'useSelector' is defined but never used.","'Navbar' is defined but never used.","'axios' is defined but never used.",["860"],["861"],"'useDebugValue' is defined but never used.","'e' is defined but never used.",["862"],"'chartSelect' is assigned a value but never used.","'setcChartSelect' is assigned a value but never used.","'weeklyTitle' is assigned a value but never used.","'premium' is assigned a value but never used.","'setPremium' is assigned a value but never used.",["863"],"'contactImg' is defined but never used.",["864"],"'CONFIRM_PREMIUM_FAIL' is defined but never used.","'CONFIRM_PREMIUM_REQUEST' is defined but never used.","'CONFIRM_PREMIUM_SUCCESS' is defined but never used.","'failedToTransformError' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"865","fix":"866"},{"desc":"865","fix":"867"},{"desc":"865","fix":"868"},{"desc":"865","fix":"869"},{"desc":"870","fix":"871"},{"desc":"865","fix":"872"},[1694,1697],"?.",[1788,1791],[1880,1883],[2931,2934],[2959,2962],[2995,2998],[3035,3038],[8085,8088],[8427,8430],[8522,8525],[8713,8716],[8798,8801],[9205,9208],[9478,9481],[10066,10069],[13217,13220],{"desc":"873","fix":"874"},[3367,3370],[3603,3606],[3648,3651],[3694,3697],[3793,3796],[3876,3879],[565,568],[596,599],[690,693],[707,710],[933,936],[968,971],[1005,1008],[1040,1043],[1141,1144],[1158,1161],{"desc":"865","fix":"875"},[565,568],[596,599],[690,693],[707,710],[933,936],[968,971],[1005,1008],[1040,1043],[1141,1144],[1158,1161],{"desc":"870","fix":"876"},{"desc":"877","fix":"878"},{"desc":"870","fix":"879"},{"desc":"880","fix":"881"},{"desc":"880","fix":"882"},{"desc":"877","fix":"883"},{"desc":"870","fix":"884"},{"desc":"885","fix":"886"},{"desc":"870","fix":"887"},{"desc":"877","fix":"888"},{"desc":"889","fix":"890"},"Update the dependencies array to be: [dispatch, props.history, userInfo]",{"range":"891","text":"892"},{"range":"893","text":"892"},{"range":"894","text":"892"},{"range":"895","text":"892"},"Update the dependencies array to be: [props.history, userInfo]",{"range":"896","text":"897"},{"range":"898","text":"892"},"Update the dependencies array to be: [dispatch, itemId, props.history, userInfo]",{"range":"899","text":"900"},{"range":"901","text":"892"},{"range":"902","text":"897"},"Update the dependencies array to be: [dispatch]",{"range":"903","text":"904"},{"range":"905","text":"897"},"Update the dependencies array to be: [adminInfo, props.history]",{"range":"906","text":"907"},{"range":"908","text":"907"},{"range":"909","text":"904"},{"range":"910","text":"897"},"Update the dependencies array to be: [props.history, saveUserInfo]",{"range":"911","text":"912"},{"range":"913","text":"897"},{"range":"914","text":"904"},"Update the dependencies array to be: [dispatch, token]",{"range":"915","text":"916"},[2455,2465],"[dispatch, props.history, userInfo]",[1700,1710],[1657,1667],[1783,1793],[1043,1053],"[props.history, userInfo]",[1652,1662],[988,998],"[dispatch, itemId, props.history, userInfo]",[1070,1080],[660,670],[738,740],"[dispatch]",[895,905],[1301,1312],"[adminInfo, props.history]",[660,671],[2551,2553],[783,793],[982,996],"[props.history, saveUserInfo]",[891,901],[1330,1332],[679,686],"[dispatch, token]"]